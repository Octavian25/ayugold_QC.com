{"version":3,"sources":["Stocking/Component/FormTambahBarang.jsx"],"names":["currencyMask","createNumberMask","prefix","suffix","locale","FormTambahBarang","props","handleChange","input","result_explode","split","console","log","setState","non_aksesoris","aksesoris","kodeJenis","kadarCetak","kadarBeli","kadarJual","namaJenis","setFocus","state","listBarang","this","dispatch","getListBarang","getTimbangan","change","netto","onSubmit","handleSubmit","className","String","KodeBarangList","name","label","component","renderFieldSelect","onChange","data","onBlur","setKadar","options","map","list","value","kode_jenis","kadar_cetak","kadar_beli","kadar_jual","nama_jenis","kode_kategori","kode_kelompok","renderField","type","normalize","toUpperCase","setNetto","id","readOnly","htmlFor","defaultValue","onClick","document","getElementById","focus","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","bruto","kadarTransaksi","provinsi","kodeBarang","parseFloat","toFixed","initialValues","discGlobalPr","p","k","pkg"],"mappings":"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","file":"static/js/106.c6b58b3c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { getTimbangan } from \"../../GetTimbangan\";\r\nimport { getListBarang } from \"../../actions/kodeBarangAction\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { setFocus, SkeletonLoading } from \"../../helper\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\n\r\nclass FormTambahBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listBarang: [],\r\n      kodeJenis: \"\",\r\n      kadarCetak: \"\",\r\n      kadarBeli: \"\",\r\n      non_aksesoris: \"col-lg-12 row\",\r\n      aksesoris: \"col-lg-12 row d-none\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListBarang());\r\n    getTimbangan(this.props.change);\r\n  }\r\n\r\n  handleChange = (input) => {\r\n    var supp = input ? input : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    console.log(result_explode[6]);\r\n    if (result_explode[6] === \"AKSESORIS\") {\r\n      this.setState({\r\n        non_aksesoris: \"col-lg-12 row d-none\",\r\n        aksesoris: \"col-lg-12 row\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        non_aksesoris: \"col-lg-12 row \",\r\n        aksesoris: \"col-lg-12 row d-none\",\r\n      });\r\n    }\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      kadarCetak: result_explode[1],\r\n      kadarBeli: result_explode[2],\r\n      kadarJual: result_explode[3],\r\n      namaJenis: result_explode[4],\r\n    });\r\n    setFocus(\"Pkg (Gr)\");\r\n  };\r\n\r\n  setKadar() {\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarBeli);\r\n    this.props.change(\"kadarJual\", this.state.kadarJual);\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n  }\r\n  setNetto() {\r\n    this.props.change(\r\n      \"netto\",\r\n      this.props.netto === \"NaN\" ? 0 : this.props.netto\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 form-group\">\r\n            {String(this.props.KodeBarangList) !== \"\" ? (\r\n              <Field\r\n                name=\"kodeBarang\"\r\n                label=\"Kode Model\"\r\n                component={renderFieldSelect}\r\n                onChange={(data) => this.handleChange(data)}\r\n                onBlur={this.setKadar()}\r\n                options={this.props.KodeBarangList.map((list) => {\r\n                  let value = {\r\n                    value:\r\n                      list.kode_jenis +\r\n                      \"|\" +\r\n                      list.kadar_cetak +\r\n                      \"|\" +\r\n                      list.kadar_beli +\r\n                      \"|\" +\r\n                      list.kadar_jual +\r\n                      \"|\" +\r\n                      list.nama_jenis +\r\n                      \"|\" +\r\n                      list.kode_kategori +\r\n                      \"|\" +\r\n                      list.kode_kelompok,\r\n                    name: list.nama_jenis,\r\n                  };\r\n                  return value;\r\n                })}\r\n              ></Field>\r\n            ) : (\r\n              <SkeletonLoading label=\"Kode Model\" />\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-5\">\r\n            <div className={this.state.aksesoris}>\r\n              <Field\r\n                name=\"qty\"\r\n                label=\"Qty\"\r\n                component={renderField}\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={this.state.non_aksesoris}>\r\n            <div className=\"col-md-2 form-group\">\r\n              <Field\r\n                name=\"kadar\"\r\n                label=\"Cap Kode\"\r\n                component={renderField}\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 form-group\">\r\n              <Field\r\n                name=\"pkg\"\r\n                label=\"Pkg (Gr)\"\r\n                component={renderField}\r\n                type=\"text\"\r\n                onBlur={this.setNetto()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 form-group\">\r\n              <Field\r\n                name=\"bruto\"\r\n                id=\"bruto\"\r\n                label=\"Bruto (Gr)\"\r\n                component={renderField}\r\n                type=\"text\"\r\n                onBlur={this.setNetto()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 form-group\">\r\n              <Field\r\n                name=\"kadarTransaksi\"\r\n                label=\"Kode Awal (%)\"\r\n                component={renderField}\r\n                type=\"text\"\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 form-group\">\r\n              <Field\r\n                name=\"netto\"\r\n                label=\"Netto (Gr)\"\r\n                component={renderField}\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 form-group\">\r\n              <label htmlFor=\"\">Ongkos (Rp)</label>\r\n              <Field\r\n                name=\"ongkos\"\r\n                label=\"Ongkos (Rp)\"\r\n                component=\"input\"\r\n                type=\"telp\"\r\n                className=\"form-control\"\r\n                defaultValue={0}\r\n                {...currencyMask}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12 form-group\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\"\r\n                onClick={() => document.getElementById(\"Kode Model\").focus()}\r\n              >\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormTambahBarang = reduxForm({\r\n  form: \"FormTambahBarang\",\r\n  enableReinitialize: true,\r\n})(FormTambahBarang);\r\nconst selector = formValueSelector(\"FormTambahBarang\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi } = selector(state, \"bruto\", \"kadarTransaksi\");\r\n  return {\r\n    KodeBarangList: state.provinsi.kodeBarang,\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n    initialValues: {\r\n      discGlobalPr: 0,\r\n      p: 0,\r\n      k: 0,\r\n      pkg: 0,\r\n      bruto: 0,\r\n    },\r\n  };\r\n})(FormTambahBarang);\r\n"],"sourceRoot":""}