{"version":3,"sources":["TotalanMenu/Components/FormModalTimbangan.jsx"],"names":["renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","maxLength","FormModalTimbangan","props","handleChange","e","result_explode","target","value","split","setState","kodeJenis","kadarCetak","kadarJual","change","state","listPerhiasan","listRongsok","listCiok","listBarangPerhiasan","this","dispatch","getListBarang","netto","onSubmit","handleSubmit","name","component","onChange","key","jenisBarang","kode_barang","filter","list","kode_kelompok","map","kode_jenis","kadar_cetak","kadar_jual","kadar_beli","kode_kategori","nama_jenis","setNetto","onLoad","noFaktur","disabled","onSend","aria-hidden","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","gross","kadarTransaksi","pkg","parseFloat","toFixed","provinsi","kodeBarang"],"mappings":"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","file":"static/js/179.c88b674c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { getListBarang } from \"../../actions/kodeBarangAction\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nclass FormModalTimbangan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listPerhiasan: [],\r\n      listRongsok: [],\r\n      listCiok: [],\r\n      listBarangPerhiasan: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListBarang());\r\n  }\r\n\r\n  // getTimbanganGross(this.props.change\r\n\r\n  handleChange = (input) => (e) => {\r\n    var supp = e.target.value\r\n      ? e.target.value\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      kadarCetak: result_explode[1],\r\n      kadarJual: result_explode[2],\r\n    });\r\n    this.props.change(\"kadarTransaksi\", result_explode[2]);\r\n    this.props.change(\"keterangan\", result_explode[3]);\r\n  };\r\n  setNetto() {\r\n    this.props.change(\r\n      \"netto\",\r\n      this.props.netto === \"NaN\" ? 0 : this.props.netto\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-3\">\r\n              <label htmlFor=\"\">Kode barang</label>\r\n              <Field\r\n                name=\"kodeBarang\"\r\n                className=\"form-control\"\r\n                component=\"select\"\r\n                onChange={this.handleChange()}\r\n              >\r\n                <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                  SILAHKAN PILIH\r\n                </option>\r\n                {this.props.jenisBarang === \"RONGSOK\"\r\n                  ? this.props.kode_barang\r\n                      .filter((list) => list.kode_kelompok === \"RONGSOK\")\r\n                      .map((list) => (\r\n                        <option\r\n                          value={\r\n                            list.kode_jenis +\r\n                            \"|\" +\r\n                            list.kadar_cetak +\r\n                            \"|\" +\r\n                            list.kadar_jual +\r\n                            \"|\" +\r\n                            list.kadar_beli +\r\n                            \"|\" +\r\n                            list.kode_kategori\r\n                          }\r\n                          key={list.kode_jenis}\r\n                        >\r\n                          {list.nama_jenis}\r\n                        </option>\r\n                      ))\r\n                  : this.props.jenisBarang === \"PERHIASAN\"\r\n                  ? this.props.kode_barang\r\n                      .filter((list) => list.kode_kelompok === \"PERHIASAN\")\r\n                      .map((list) => (\r\n                        <option\r\n                          value={\r\n                            list.kode_jenis +\r\n                            \"|\" +\r\n                            list.kadar_cetak +\r\n                            \"|\" +\r\n                            list.kadar_jual +\r\n                            \"|\" +\r\n                            list.kadar_beli +\r\n                            \"|\" +\r\n                            list.kode_kategori\r\n                          }\r\n                          key={list.kode_jenis}\r\n                        >\r\n                          {list.nama_jenis}\r\n                        </option>\r\n                      ))\r\n                  : this.props.kode_barang\r\n                      .filter((list) => list.kode_kelompok === \"CIOK\")\r\n                      .map((list) => (\r\n                        <option\r\n                          value={\r\n                            list.kode_jenis +\r\n                            \"|\" +\r\n                            list.kadar_cetak +\r\n                            \"|\" +\r\n                            list.kadar_jual +\r\n                            \"|\" +\r\n                            list.kadar_beli +\r\n                            \"|\" +\r\n                            list.kode_kategori\r\n                          }\r\n                          key={list.kode_jenis}\r\n                        >\r\n                          {list.nama_jenis}\r\n                        </option>\r\n                      ))}\r\n              </Field>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <Field\r\n                name=\"keterangan\"\r\n                label=\"Keterangan\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"kadarTransaksi\"\r\n                label=\"Kadar(%)\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                readOnly={true}\r\n                onChange={this.setNetto()}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"gross\"\r\n                label=\"Gross(Gr)\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                onChange={this.setNetto()}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"pkg\"\r\n                label=\"Package(Gr)\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                onChange={this.setNetto()}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"netto\"\r\n                label=\"Netto\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3 d-none\">\r\n              <Field\r\n                name=\"noFaktur\"\r\n                label=\"Netto\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                readOnly={true}\r\n                onLoad={() =>\r\n                  this.props.change(\"noFaktur\", this.props.noFaktur)\r\n                }\r\n              />\r\n            </div>\r\n            {/* <div className=\"col-lg-3\">\r\n              <label htmlFor=\"\">Ongkos (Rp)</label>\r\n              <Field\r\n                name=\"rp\"\r\n                type=\"telp\"\r\n                className=\"form-control\"\r\n                component=\"input\"\r\n                {...currencyMask}\r\n              />\r\n            </div> */}\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  type=\"submit\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Simpan\r\n                  <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormModalTimbangan = reduxForm({\r\n  form: \"FormModalTimbangan\",\r\n  enableReinitialize: true,\r\n})(FormModalTimbangan);\r\nconst selector = formValueSelector(\"FormModalTimbangan\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { gross, kadarTransaksi, pkg } = selector(\r\n    state,\r\n    \"gross\",\r\n    \"kadarTransaksi\",\r\n    \"pkg\"\r\n  );\r\n  return {\r\n    netto: (\r\n      parseFloat(gross ? gross : 0) -\r\n      parseFloat(pkg ? pkg : 0) * (parseFloat(kadarTransaksi) / 100)\r\n    ).toFixed(3),\r\n    kode_barang: state.provinsi.kodeBarang,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n})(FormModalTimbangan);\r\n"],"sourceRoot":""}