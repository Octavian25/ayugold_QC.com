{"version":3,"sources":["Transaksi/CloseTransaksiPenjualan.jsx","../node_modules/react-stepper-horizontal/lib/index.js"],"names":["server","process","serverNonMaster","REACT_APP_BACKEND_URL_NON_MASTER","CloseTransaksiPenjualan","props","disabledButton","e","target","disabled","nextStep","step","state","setState","step2","step1","dispatch","getListCloseTransaksiPenjualanSelected","prevStep","changeTransaksi","input","value","columns","dataField","text","align","headerAlign","footerClasses","data","tanggal","step3","listSales","listCustomer","listCloseTransaksiPenjualan","Axios","get","then","res","this","getListClose","params","statusValid","change","progressSend","hasil","JSON","parse","localStorage","getItem","put","Swal","fire","icon","timer","showConfirmButton","position","removeItem","getUUID","getListCloseTransaksiPenjualan","finishSend","catch","gagal","tanggalFrom","tanggalTo","kodeCustomer","setFilterCustomer","namaToko","filtered","filter","list","kodeAktor","toUpperCase","map","obj","name","selectRow","mode","clickToSelect","onSelect","row","isSelect","rowIndex","console","log","noFaktur","array","noBon","supplier","bruto","netto","bonRp","titipRp","titipGr","keterangan","footerDocument","editBy","push","setItem","stringify","index","findIndex","item","i","splice","onSelectAll","rows","forEach","namaAktor","className","title","steps","activeStep","htmlFor","options","search","placeholder","onChange","setToko","label","type","component","renderField","setFilterTanggal","renderFieldSelect","TipeTransaksi","key","onClick","getListPenjualan","keyField","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","noDataIndication","listCloseTransaksiPenjualanSelected","kirimvalidasi","Component","reduxForm","form","enableReinitialize","connect","listValidasiCustomer","provinsi","Object","defineProperty","exports","_Stepper","require","_Stepper2","__esModule","default"],"mappings":"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","file":"static/js/105.234dbdac.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport Stepper from \"react-stepper-horizontal\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport Axios from \"axios\";\r\nimport SelectSearch from \"react-select-search\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  getListCloseTransaksiPenjualan,\r\n  getListCloseTransaksiPenjualanSelected,\r\n} from \"../actions/closeTransaksiPenjualanAciton\";\r\nimport { gagal } from \"../Alert\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\nimport { renderField, renderFieldSelect } from \"../renderField\";\r\nimport HeaderCard from \"../HeaderCard\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    listValidasiCustomer: state.provinsi.listValidasiCustomer,\r\n    listCloseTransaksiPenjualan: state.provinsi.listCloseTransaksiPenjualan,\r\n    listCloseTransaksiPenjualanSelected:\r\n      state.provinsi.listCloseTransaksiPenjualanSelected,\r\n  };\r\n};\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nclass CloseTransaksiPenjualan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          dataField: \"tanggal\",\r\n          text: \"Tanggal\",\r\n        },\r\n        {\r\n          dataField: \"noBon\",\r\n          text: \"Nomor Bon\",\r\n        },\r\n        {\r\n          dataField: \"namaAktor\",\r\n          text: \"Nama Aktor\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"rp\",\r\n          text: \"Ongkos(RP)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n      ],\r\n      data: [\r\n        {\r\n          tanggal: \"23/11/2020\",\r\n        },\r\n      ],\r\n      step: 0,\r\n      step1: \"row\",\r\n      step2: \"row d-none\",\r\n      step3: \"row d-none\",\r\n      listSales: [],\r\n      listCustomer: [],\r\n      listCloseTransaksiPenjualan: [],\r\n    };\r\n  }\r\n\r\n  disabledButton = (e) => {\r\n    e.target.disabled = true;\r\n  };\r\n  nextStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 0) {\r\n      this.setState({ step: step + 1, step2: \"row\", step1: \"row d-none\" });\r\n    }\r\n    this.props.dispatch(getListCloseTransaksiPenjualanSelected());\r\n  };\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 1) {\r\n      this.setState({ step: step - 1, step2: \"row d-none\", step1: \"row\" });\r\n    }\r\n  };\r\n\r\n  changeTransaksi = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    Axios.get(server + \"storages2?tipeData=SALES\").then((res) =>\r\n      this.setState({\r\n        listSales: res.data,\r\n      })\r\n    );\r\n    Axios.get(server + \"customers\").then((res) =>\r\n      this.setState({\r\n        listCustomer: res.data,\r\n      })\r\n    );\r\n    this.getListClose();\r\n  }\r\n  getListClose() {\r\n    Axios.get(serverNonMaster + \"cst/dc/pjl/heads\", {\r\n      params: {\r\n        statusValid: \"OPEN\",\r\n      },\r\n    }).then((res) =>\r\n      this.setState({\r\n        listCloseTransaksiPenjualan: res.data,\r\n      })\r\n    );\r\n  }\r\n  onSubmitToko(data) {\r\n    this.props.change(\"namaToko\", data);\r\n  }\r\n  kirimvalidasi() {\r\n    this.props.dispatch(progressSend());\r\n    var hasil =\r\n      JSON.parse(localStorage.getItem(\"closeTransaksiPenjualan\")) || [];\r\n    Axios.put(serverNonMaster + \"cst/dc/pjl\", hasil)\r\n      .then(() =>\r\n        Swal.fire({\r\n          text: \"Cancel Transaksi berhasil\",\r\n          icon: \"success\",\r\n          timer: 2000,\r\n          showConfirmButton: false,\r\n          position: \"top-right\",\r\n        })\r\n          .then(() => localStorage.removeItem(\"closeTransaksiPenjualan\"))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() => this.props.dispatch(getListCloseTransaksiPenjualan()))\r\n          .then(() => this.prevStep())\r\n          .then(() => this.getListClose())\r\n          .then(() => this.props.dispatch(finishSend()))\r\n      )\r\n      .catch(() =>\r\n        gagal(\r\n          \"Cancel gagal, Mohon periksa Koneksi anda\",\r\n          this.props.dispatch(finishSend())\r\n        )\r\n      );\r\n  }\r\n  getListPenjualan(tanggalFrom, tanggalTo, kodeCustomer) {\r\n    this.props.dispatch(\r\n      getListCloseTransaksiPenjualan(tanggalFrom, tanggalTo, kodeCustomer)\r\n    );\r\n  }\r\n  setToko(data) {\r\n    this.props.change(\"namaToko\", data);\r\n    this.setFilterCustomer(data);\r\n    this.setState({\r\n      namaToko: data,\r\n    });\r\n  }\r\n  setFilterCustomer(data) {\r\n    Axios.get(serverNonMaster + \"cst/dc/pjl/heads\", {\r\n      params: {\r\n        statusValid: \"OPEN\",\r\n      },\r\n    })\r\n      .then((res) =>\r\n        this.setState({\r\n          listCloseTransaksiPenjualan: res.data,\r\n        })\r\n      )\r\n      .then(() => {\r\n        var array = this.state.listCloseTransaksiPenjualan;\r\n        var filtered = array.filter(\r\n          (list) => list.kodeAktor === data.toUpperCase()\r\n        );\r\n        this.setState({\r\n          listCloseTransaksiPenjualan: filtered,\r\n        });\r\n      });\r\n  }\r\n  setFilterTanggal(data) {\r\n    Axios.get(serverNonMaster + \"cst/dc/pjl/heads\", {\r\n      params: {\r\n        statusValid: \"OPEN\",\r\n      },\r\n    })\r\n      .then((res) =>\r\n        this.setState({\r\n          listCloseTransaksiPenjualan: res.data,\r\n        })\r\n      )\r\n      .then(() => {\r\n        var array = this.state.listCloseTransaksiPenjualan;\r\n        var filtered = array.filter((list) => list.tanggal === data);\r\n        this.setState({\r\n          listCloseTransaksiPenjualan: filtered,\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    var namaToko = this.state.listCustomer.map((obj) => {\r\n      var payload = {\r\n        value: obj.kodeCustomer,\r\n        name: obj.namaToko,\r\n      };\r\n      return payload;\r\n    });\r\n    const selectRow = {\r\n      mode: \"checkbox\",\r\n      clickToSelect: true,\r\n      onSelect: (row, isSelect, rowIndex, e) => {\r\n        console.log(row.noFaktur);\r\n        let array = JSON.parse(localStorage.getItem(\"FakturTerpilih\")) || [];\r\n        const data = {\r\n          tanggal: row.tanggal,\r\n          noBon: row.noBon,\r\n          supplier: row.supplier,\r\n          bruto: row.bruto,\r\n          netto: row.netto,\r\n          bonRp: row.bonRp,\r\n          titipRp: row.titipRp,\r\n          titipGr: row.titipGr,\r\n          keterangan: row.keterangan,\r\n          noFaktur: row.noFaktur,\r\n          footerDocument: {\r\n            editBy: \"Nagatech\",\r\n            statusValid: \"CANCEL\",\r\n          },\r\n        };\r\n        if (isSelect) {\r\n          array.push(data);\r\n          localStorage.setItem(\r\n            \"closeTransaksiPenjualan\",\r\n            JSON.stringify(array)\r\n          );\r\n        } else {\r\n          var index = array.findIndex((item, i) => {\r\n            return item.noFaktur === row.noFaktur;\r\n          });\r\n          array.splice(index, 1);\r\n          localStorage.setItem(\r\n            \"closeTransaksiPenjualan\",\r\n            JSON.stringify(array)\r\n          );\r\n        }\r\n      },\r\n      onSelectAll: (isSelect, rows, e) => {\r\n        var array = [];\r\n        rows.forEach(function (list) {\r\n          var data = {\r\n            tanggal: list.tanggal,\r\n            noBon: list.noBon,\r\n            supplier: list.namaAktor,\r\n            bruto: list.bruto,\r\n            netto: list.netto,\r\n            bonRp: \"\",\r\n            titipRp: \"\",\r\n            titipGr: \"\",\r\n            keterangan: list.keterangan,\r\n            noFaktur: list.noFaktur,\r\n            footerDocument: {\r\n              editBy: \"Nagatech\",\r\n              statusValid: \"VALID\",\r\n            },\r\n          };\r\n          array.push(data);\r\n        });\r\n        if (isSelect) {\r\n          localStorage.setItem(\r\n            \"closeTransaksiPenjualan\",\r\n            JSON.stringify(array)\r\n          );\r\n        } else {\r\n          localStorage.removeItem(\"closeTransaksiPenjualan\");\r\n        }\r\n      },\r\n    };\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"card\">\r\n          <HeaderCard title=\"Close Transaksi Penjualan\" />\r\n          <div className=\"card-body\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12 col-md-12 mb-3\">\r\n                  <Stepper\r\n                    steps={[\r\n                      { title: \"Pilih Data\" },\r\n                      { title: \"Validasi Data\" },\r\n                      // { title: \"Data Rekening\" },\r\n                    ]}\r\n                    activeStep={this.state.step}\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-12\">\r\n                  <div className={this.state.step1}>\r\n                    <div className=\"col-lg-3\">\r\n                      <label htmlFor=\"\">Nama Toko</label>\r\n                      <SelectSearch\r\n                        options={namaToko}\r\n                        search\r\n                        placeholder=\"SILAHKAN PILIH\"\r\n                        onChange={(data) => this.setToko(data)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-3 d-none\">\r\n                      <Field\r\n                        name=\"namaToko\"\r\n                        label=\"Nama Toko\"\r\n                        type=\"text\"\r\n                        component={renderField}\r\n                      ></Field>\r\n                    </div>\r\n                    <div className=\"col-lg-3\">\r\n                      <Field\r\n                        name=\"tanggal\"\r\n                        label=\"Tanggal Transaksi\"\r\n                        component={renderField}\r\n                        type=\"date\"\r\n                        onChange={(e) => {\r\n                          this.setState(\r\n                            {\r\n                              tanggal: e.target.value,\r\n                            },\r\n                            this.setFilterTanggal(e.target.value)\r\n                          );\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-3\">\r\n                      <Field\r\n                        name=\"TipeTransaksi\"\r\n                        label=\"Tipe Transaksi\"\r\n                        component={renderFieldSelect}\r\n                        className=\"form-control\"\r\n                        onChange={(e) =>\r\n                          this.setState({\r\n                            TipeTransaksi: e,\r\n                          })\r\n                        }\r\n                        options={[\r\n                          { value: \"UMUM\", name: \"UMUM\" },\r\n                          { value: \"FICO\", name: \"FICO\" },\r\n                        ]}\r\n                      >\r\n                        <option\r\n                          value=\"\r\n                            DEFAULT\"\r\n                          key=\"\r\n                            DEFAULT\"\r\n                        >\r\n                          Silahkan PIlih\r\n                        </option>\r\n                        <option value=\"UMUM\" key=\"UMUM\">\r\n                          UMUM\r\n                        </option>\r\n                        <option value=\"FICO\" key=\"FICO\">\r\n                          FICO\r\n                        </option>\r\n                      </Field>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() =>\r\n                            this.getListPenjualan(\r\n                              this.state.tanggal,\r\n                              this.state.tanggal,\r\n                              this.state.kodeCustomer\r\n                            )\r\n                          }\r\n                        >\r\n                          <i className=\"fa fa-eye\"></i> Lihat Data\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12 mt-3\">\r\n                      {this.state.listCloseTransaksiPenjualan ? (\r\n                        <ToolkitProvider\r\n                          keyField=\"noFaktur\"\r\n                          data={this.state.listCloseTransaksiPenjualan}\r\n                          columns={this.state.columns}\r\n                          search\r\n                        >\r\n                          {(props) => (\r\n                            <div className=\"form-group\">\r\n                              <BootstrapTable\r\n                                {...props.baseProps}\r\n                                striped\r\n                                hover\r\n                                condensed\r\n                                bordered={true}\r\n                                headerClasses=\"header-table\"\r\n                                pagination={paginationFactory()}\r\n                                selectRow={selectRow}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </ToolkitProvider>\r\n                      ) : (\r\n                        <BootstrapTable\r\n                          keyField=\"noFaktur\"\r\n                          data={[]}\r\n                          columns={this.state.columns}\r\n                          striped\r\n                          hover\r\n                          condensed\r\n                          bordered={true}\r\n                          headerClasses=\"header-table\"\r\n                          noDataIndication=\"Tidak Ada Data\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => this.nextStep()}\r\n                        >\r\n                          Next\r\n                          <i className=\"fa fa-chevron-right ml-3\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className={this.state.step2}>\r\n                    <div className=\"col-lg-12 mt-3\">\r\n                      {this.props.listCloseTransaksiPenjualanSelected ? (\r\n                        <ToolkitProvider\r\n                          keyField=\"id\"\r\n                          data={this.props.listCloseTransaksiPenjualanSelected}\r\n                          columns={this.state.columns}\r\n                          search\r\n                        >\r\n                          {(props) => (\r\n                            <div className=\"form-group\">\r\n                              <BootstrapTable\r\n                                {...props.baseProps}\r\n                                striped\r\n                                hover\r\n                                condensed\r\n                                bordered={true}\r\n                                headerClasses=\"header-table\"\r\n                                pagination={paginationFactory()}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </ToolkitProvider>\r\n                      ) : (\r\n                        <BootstrapTable\r\n                          keyField=\"id\"\r\n                          data={[]}\r\n                          columns={this.state.columns}\r\n                          striped\r\n                          hover\r\n                          condensed\r\n                          bordered={true}\r\n                          headerClasses=\"header-table\"\r\n                          noDataIndication=\"Tidak Ada Data\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <div className=\"text-left\">\r\n                            <button\r\n                              className=\"btn btn-primary\"\r\n                              onClick={() => this.prevStep()}\r\n                            >\r\n                              <i className=\"fa fa-chevron-left mr-3\"></i>\r\n                              Kembali\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                          <div className=\"text-right\">\r\n                            <button\r\n                              className=\"btn btn-primary\"\r\n                              onClick={() => this.kirimvalidasi()}\r\n                            >\r\n                              <i className=\"fa fa-times-circle mr-3\"></i>\r\n                              Batal Transaksi\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCloseTransaksiPenjualan = reduxForm({\r\n  form: \"CloseTransaksiPenjualan\",\r\n  enableReinitialize: true,\r\n})(CloseTransaksiPenjualan);\r\nexport default connect(maptoState, null)(CloseTransaksiPenjualan);\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Stepper = require('./Stepper');\n\nvar _Stepper2 = _interopRequireDefault(_Stepper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Stepper2.default;"],"sourceRoot":""}