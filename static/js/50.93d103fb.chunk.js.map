{"version":3,"sources":["FICO/TolakaHutangSupplier.jsx","Validations/validationTerimaSupplier.js","FICO/Component/FormTolakanHutangSupplier.jsx"],"names":["ModalMasterData","lazy","TolakHutangSupplier","props","date","Date","formatedDate","getFullYear","getMonth","getDate","inputChange","input","e","setState","target","value","pilihSupplier","result_explode","split","kodeSupplier","namaSupplier","state","supplierList","DataSupplier","startDate","tanggal","noBon","status","tampungBarang","columns","dataField","text","align","headerAlign","footerClasses","formatter","cell","parseFloat","toLocaleString","csvExport","rowContent","row","rowIndex","className","data-tip","data-for","onClick","delete","id","type","effect","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","array","JSON","parse","localStorage","getItem","splice","setItem","stringify","timer","showConfirmButton","position","dispatch","getListTolakHutangSupplier","key","this","getsupplierList","getUUID","data","kodeJenis","simpan","kode_kategori","kode_jenis","kadar_cetak","kadar","toString","kadar_beli","kadarTransaksi","no_barcode","qty","p","k","pkg","gross","bruto","netto","ongkos_rp","undefined","rp","harga_beli","push","reset","warning","length","map","list","reduce","a","b","isi","no_tolak","noFaktur","getToday","no_bon","kode_supplier","jenis_trx","total_qty","total_p","total_k","total_pkg","total_bruto","total_netto","total_ongkos","detail_barang","console","log","progressSend","tableRows","table","forEach","ticket","i","ticketData","content","styles","halign","formatGram","formatRp","footer","columTable","AxiosMasterPost","res","PrintNota","toUpperCase","getUserID","multipleDeleteLocal","finishSend","document","getElementById","catch","err","response","style","color","to","aria-hidden","fallback","width","height","from","onSubmit","handleSubmit","name","component","renderFieldSelect","options","supplier","nama_supplier","label","placeholder","onChange","renderField","showModal","class","keyField","listTolakanHutangSupplier","disabled","onSend","returnSupplierSubmit","Component","reduxForm","form","connect","provinsi","username","alert","error","initialValues","validationTerimaSupplier","errors","FormTolakanHutangSupplier","onclick1","bind","kodeBarang","kode_barang","keterangan","P","K","bungkus","berat","harga","murni","ongkos","kadarCetak","kadarBeli","namaJenis","AxiosMasterGet","filter","kode_kelompok","getTimbangan","change","kodeKategori","readOnly","defaultValue","normalize","nama_jenis","pilihBarang","onBlur","setKadar","visibility","submitting","validate","enableReinitialize","selector","formValueSelector","toFixed"],"mappings":"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","file":"static/js/50.93d103fb.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getListTolakHutangSupplier } from \"../actions/returnSupplier\";\r\nimport { Field, reduxForm, reset } from \"redux-form\";\r\n\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { showModal } from \"../actions/ModalAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport { getsupplierList } from \"../actions/supplierAction\";\r\nimport { renderField, renderFieldSelect } from \"../renderField\";\r\nimport GlobalTabel from \"../GlobalComponent/GlobalTabel\";\r\nimport {\r\n  formatGram,\r\n  formatRp,\r\n  getUserID,\r\n  multipleDeleteLocal,\r\n} from \"../helper\";\r\nimport FormTolakanHutangSupplier from \"./Component/FormTolakanHutangSupplier\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getToday } from \"../GlobalComponent/function\";\r\n\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\nconst maptostate = (state) => {\r\n  return {\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    listTolakanHutangSupplier: state.provinsi.listTolakanHutangSupplier,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    onSend: state.provinsi.onSend,\r\n    supplier: state.provinsi.supplier,\r\n    initialValues: {\r\n      tanggal: getToday(),\r\n    },\r\n  };\r\n};\r\n\r\nclass TolakHutangSupplier extends Component {\r\n  constructor(props) {\r\n    var date = new Date();\r\n    var formatedDate = `${date.getFullYear()}-${\r\n      date.getMonth() + 1\r\n    }-${date.getDate()}`;\r\n    super(props);\r\n    this.state = {\r\n      supplierList: [],\r\n      DataSupplier: [],\r\n      startDate: formatedDate,\r\n      kodeSupplier: \"\",\r\n      namaSupplier: \"\",\r\n      tanggal: formatedDate,\r\n      noBon: \"\",\r\n      status: \"\",\r\n      tampungBarang: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Model\",\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Cap Kode(%)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"p\",\r\n          text: \"P\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"k\",\r\n          text: \"K\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Bungkus(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"kadar_beli\",\r\n          text: \"Kode Awal\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"ongkos_rp\",\r\n          text: \"Ongkos(RP)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          formatter: (cell) => (\r\n            <span>Rp. {parseFloat(cell).toLocaleString(\"ID-id\")}</span>\r\n          ),\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() => this.delete(rowIndex)}\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                </button>\r\n                <br />\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  delete(rowIndex) {\r\n    Swal.fire({\r\n      title: \"Anda Yakin ?\",\r\n      text: \"Anda Akan Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const array =\r\n          JSON.parse(localStorage.getItem(\"TolakHutangSupplier\")) || [];\r\n        array.splice(rowIndex, 1);\r\n        localStorage.setItem(\"TolakHutangSupplier\", JSON.stringify(array));\r\n        Swal.fire({\r\n          text: \"Berhasil\",\r\n          timer: 2000,\r\n          showConfirmButton: false,\r\n          position: \"top-right\",\r\n          icon: \"success\",\r\n        })\r\n          .then(() => this.props.dispatch(getListTolakHutangSupplier()))\r\n          .then(() =>\r\n            this.setState({\r\n              key: \"updated\",\r\n            })\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getsupplierList());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getListTolakHutangSupplier());\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  pilihSupplier = (input) => (e) => {\r\n    var supp = e.target.value ? e.target.value : \"DEFALT | DEFAULT\";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeSupplier: result_explode[0],\r\n      namaSupplier: result_explode[1],\r\n    });\r\n  };\r\n\r\n  handleSubmit(data) {\r\n    var supp = data.kodeJenis\r\n      ? data.kodeJenis\r\n      : \"DEFAULT|DEFAULT|DEFAULT|DEFAULT\";\r\n    var split = supp.split(\"|\");\r\n    var simpan = {\r\n      kode_kategori: data.kode_kategori,\r\n      kode_jenis: split[0],\r\n      kadar_cetak: parseFloat(data.kadar).toString(),\r\n      kadar_beli: parseFloat(data.kadarTransaksi),\r\n      no_barcode: \"-\",\r\n      qty: 1,\r\n      p: parseFloat(data.p),\r\n      k: parseFloat(data.k),\r\n      pkg: parseFloat(data.pkg),\r\n      gross: parseFloat(data.gross),\r\n      bruto: parseFloat(data.bruto),\r\n      netto: parseFloat(data.netto),\r\n      ongkos_rp: parseFloat(data.rp === undefined ? 0 : data.rp),\r\n      harga_beli: 0,\r\n    };\r\n\r\n    var array = JSON.parse(localStorage.getItem(\"TolakHutangSupplier\")) || [];\r\n    array.push(simpan);\r\n    localStorage.setItem(\"TolakHutangSupplier\", JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n    this.props.dispatch(getListTolakHutangSupplier());\r\n    this.props.dispatch(reset(\"TerimaSupplier\"));\r\n  }\r\n\r\n  returnSupplierSubmit() {\r\n    if (this.state.noBon === \"\") {\r\n      warning(\"Mohon isi nomor bon\");\r\n      return false;\r\n    } else if (this.state.tanggal === \"\") {\r\n      warning(\"Mohon isi Tanggal\");\r\n      return false;\r\n    } else if (\r\n      JSON.parse(localStorage.getItem(\"TolakHutangSupplier\") || \"[]\").length ===\r\n      0\r\n    ) {\r\n      warning(\"Barang masih kosong, silahkan tambahkan barang\");\r\n      return false;\r\n    } else if (this.state.kodeSupplier === \"\") {\r\n      warning(\"Mohon pilih Supplier\");\r\n      return false;\r\n    }\r\n    let data = JSON.parse(localStorage.getItem(\"TolakHutangSupplier\"));\r\n    let qty = data.length;\r\n    let p = data.map((list) => parseFloat(list.p)).reduce((a, b) => a + b, 0);\r\n    let k = data.map((list) => parseFloat(list.k)).reduce((a, b) => a + b, 0);\r\n    let pkg = data\r\n      .map((list) => parseFloat(list.pkg))\r\n      .reduce((a, b) => a + b, 0);\r\n    let bruto = data\r\n      .map((list) => parseFloat(list.bruto))\r\n      .reduce((a, b) => a + b, 0);\r\n    let netto = data\r\n      .map((list) => parseFloat(list.netto))\r\n      .reduce((a, b) => a + b, 0);\r\n    let ongkos_rp = data\r\n      .map((list) => parseFloat(list.ongkos_rp))\r\n      .reduce((a, b) => a + b, 0);\r\n    let isi = {\r\n      no_tolak: this.props.noFaktur,\r\n      tanggal: this.state.tanggal || getToday(),\r\n      no_bon: this.state.noBon,\r\n      kode_supplier: this.state.kodeSupplier,\r\n      jenis_trx: \"PEMBAYARAN\",\r\n      total_qty: qty,\r\n      total_p: p,\r\n      total_k: k,\r\n      total_pkg: pkg,\r\n      total_bruto: bruto,\r\n      total_netto: netto,\r\n      total_ongkos: ongkos_rp,\r\n      detail_barang: JSON.parse(localStorage.getItem(\"TolakHutangSupplier\")),\r\n    };\r\n    console.log(JSON.stringify(isi));\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"TolakHutangSupplier\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        ++i,\r\n        ticket.kode_jenis,\r\n        { content: ticket.kadar_cetak, styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.p), styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.k), styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.pkg), styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.bruto), styles: { halign: \"right\" } },\r\n        { content: ticket.kadar_beli, styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.netto, 3), styles: { halign: \"right\" } },\r\n        { content: formatRp(ticket.ongkos_rp), styles: { halign: \"right\" } },\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    const footer = [\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      {\r\n        content: formatGram(\r\n          table.map((list) => list.pkg).reduce((a, b) => a + b, 0)\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      {\r\n        content: formatGram(\r\n          table.map((list) => list.bruto).reduce((a, b) => a + b, 0)\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      \"\",\r\n      {\r\n        content: formatGram(\r\n          table.map((list) => list.netto).reduce((a, b) => a + b, 0)\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      {\r\n        content: formatRp(\r\n          table.map((list) => list.ongkos_rp).reduce((a, b) => a + b, 0)\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n    ];\r\n    // tableRows.push(footer);\r\n    console.log(JSON.stringify(tableRows));\r\n    var columTable = [\r\n      [\r\n        \"No\",\r\n        \"Kode Model\",\r\n        { content: \"Cap Kode\", styles: { halign: \"right\" } },\r\n        { content: \"P\", styles: { halign: \"right\" } },\r\n        { content: \"K\", styles: { halign: \"right\" } },\r\n        { content: \"Bungkus(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Berat(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Harga(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Murni(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Ongkos(Rp)\", styles: { halign: \"right\" } },\r\n      ],\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    AxiosMasterPost(\"trx-tolakan-supplier/simpan\", isi)\r\n      .then((res) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Data Berhasil Ditambahkan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() =>\r\n            PrintNota(\r\n              \"No Bon\",\r\n              this.state.noBon.toUpperCase(),\r\n              \"Tanggal\",\r\n              this.state.tanggal,\r\n              \"Supplier\",\r\n              this.state.kodeSupplier.toUpperCase(),\r\n              \"\",\r\n              \"\",\r\n              getUserID(),\r\n              getToday(),\r\n              \"\",\r\n              columTable,\r\n              \"Tolakan Return Barang Supplier\",\r\n              tableRows,\r\n              footer\r\n            )\r\n          )\r\n          .then(() => multipleDeleteLocal([\"TolakHutangSupplier\", \"noFaktur\"]))\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() => this.props.dispatch(getListTolakHutangSupplier()))\r\n          .then(() =>\r\n            this.setState({\r\n              noBon: \"\",\r\n              kodeSupplier: \"\",\r\n            })\r\n          )\r\n          .then(() => document.getElementById(\"myForm\").reset())\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: `${err?.response?.data}`,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <ol className=\"breadcrumb mb-2\">\r\n          <Link to=\"/KlasifikasiSupplier\">\r\n            <button type=\"button\" className=\"btn btn-secondary\">\r\n              <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i> Back\r\n            </button>\r\n          </Link>\r\n        </ol>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Tolakan Pembayaran Hutang Supplier\" />\r\n              <div className=\"card-body\">\r\n                <ModalMasterData\r\n                  content={\r\n                    <Suspense\r\n                      fallback={<Skeleton width={\"100%\"} height={400} />}\r\n                    >\r\n                      <FormTolakanHutangSupplier\r\n                        from=\"tolakan\"\r\n                        onSubmit={(data) => this.handleSubmit(data)}\r\n                        noFaktur={this.props.noFaktur}\r\n                      />\r\n                    </Suspense>\r\n                  }\r\n                  title=\"Tambah Data Barang\"\r\n                />\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                      <form id=\"myForm\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-4\">\r\n                            <Field\r\n                              name=\"supplier\"\r\n                              component={renderFieldSelect}\r\n                              options={this.props.supplier.map((list) => {\r\n                                let data = {\r\n                                  value: list.kode_supplier,\r\n                                  name: list.nama_supplier,\r\n                                };\r\n                                return data;\r\n                              })}\r\n                              type=\"text\"\r\n                              label=\"Supplier\"\r\n                              placeholder=\"Masukan Supplier\"\r\n                              onChange={(data) => {\r\n                                this.setState({\r\n                                  kodeSupplier: data,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-lg-4\">\r\n                            <Field\r\n                              name=\"tanggal\"\r\n                              component={renderField}\r\n                              type=\"date\"\r\n                              label=\"Tanggal\"\r\n                              placeholder=\"Masukan Tanggal\"\r\n                              onChange={(e) => {\r\n                                this.setState({\r\n                                  tanggal: e.target.value,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-lg-4\">\r\n                            <Field\r\n                              name=\"no_bon\"\r\n                              component={renderField}\r\n                              type=\"text\"\r\n                              label=\"Nomor Bon\"\r\n                              placeholder=\"Masukan Nomor Bon\"\r\n                              onChange={(data) => {\r\n                                this.setState({\r\n                                  noBon: data.target.value,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                    <div className=\"col-md-12 col-lg-12 mt-3\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6\"></div>\r\n                        <div className=\"col-lg-6\">\r\n                          <div className=\"text-right\">\r\n                            <button\r\n                              className=\"btn btn-primary\"\r\n                              onClick={() => this.props.dispatch(showModal())}\r\n                            >\r\n                              Tambah Data\r\n                              <i class=\"fa fa-plus ml-3\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12 mt-3\">\r\n                      <GlobalTabel\r\n                        keyField=\"id\"\r\n                        data={this.props.listTolakanHutangSupplier}\r\n                        columns={this.state.columns}\r\n                      />\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          disabled={this.props.onSend}\r\n                          onClick={() => this.returnSupplierSubmit()}\r\n                        >\r\n                          {this.props.onSend ? (\r\n                            <span\r\n                              className=\"spinner-border spinner-border-sm mr-3\"\r\n                              aria-hidden=\"true\"\r\n                            ></span>\r\n                          ) : null}\r\n                          Simpan\r\n                          <i\r\n                            class=\"fa fa-paper-plane ml-3\"\r\n                            aria-hidden=\"true\"\r\n                          ></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTolakHutangSupplier = reduxForm({\r\n  form: \"TolakHutangSupplier\",\r\n})(TolakHutangSupplier);\r\nexport default connect(maptostate, null)(TolakHutangSupplier);\r\n","const validationTerimaSupplier = (value) => {\r\n  const errors = {};\r\n  if (!value.kodeJenis) {\r\n    errors.kodeJenis = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.pkg) {\r\n    errors.pkg = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.p) {\r\n    errors.p = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.k) {\r\n    errors.k = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.bruto) {\r\n    errors.bruto = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.gross) {\r\n    errors.gross = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validationTerimaSupplier;\r\n","import React, { Component } from \"react\";\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validationTerimaSupplier from \"../../Validations/validationTerimaSupplier\";\r\nimport { getTimbangan } from \"../../GetTimbangan\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\n\r\nclass FormTolakanHutangSupplier extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onclick1 = this.onclick1.bind(this);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      DataSupplier: [],\r\n      kode_barang: \"\",\r\n      keterangan: \"INI KETERANGAN\",\r\n      kadar: \"\",\r\n      P: \"\",\r\n      K: \"\",\r\n      bungkus: \"\",\r\n      berat: \"\",\r\n      harga: \"\",\r\n      murni: \"\",\r\n      ongkos: \"\",\r\n      status: \"\",\r\n      kadarCetak: \"\",\r\n      kadarBeli: \"\",\r\n      namaJenis: \"\",\r\n      kodeJenis: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"jenis/get/all-no-image\")\r\n      .then((res) =>\r\n        this.setState({\r\n          kodeBarang: res.data.filter(\r\n            (list) =>\r\n              list.kode_kelompok !== \"PERHIASAN\" &&\r\n              list.kode_kelompok !== \"AKSESORIS\"\r\n          ),\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    getTimbangan(this.props.change);\r\n  }\r\n\r\n  onclick1() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n    this.props.change(\"gross\", this.props.gross);\r\n  }\r\n\r\n  pilihBarang(data) {\r\n    var supp = data ? data : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      namaJenis: result_explode[1],\r\n      kadarCetak: result_explode[2],\r\n      kadarBeli: result_explode[3],\r\n      kodeKategori: result_explode[4],\r\n    });\r\n  }\r\n\r\n  setKadar() {\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarBeli);\r\n    this.props.change(\"kode_kategori\", this.state.kodeKategori);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-lg-12 d-none\">\r\n            <Field\r\n              name=\"noFaktur\"\r\n              label={this.props.noFaktur}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              component={renderField}\r\n              defaultValue={this.props.noFaktur}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <Field\r\n              label=\"Kode Model\"\r\n              name=\"kodeJenis\"\r\n              component={renderFieldSelect}\r\n              options={this.state.kodeBarang.map((list) => {\r\n                let data = {\r\n                  value:\r\n                    list.kode_jenis +\r\n                    \"|\" +\r\n                    list.nama_jenis +\r\n                    \"|\" +\r\n                    list.kadar_cetak +\r\n                    \"|\" +\r\n                    list.kadar_beli +\r\n                    \"|\" +\r\n                    list.kode_kategori,\r\n                  name: list.nama_jenis,\r\n                };\r\n                return data;\r\n              })}\r\n              onChange={(data) => this.pilihBarang(data)}\r\n              onBlur={this.setKadar()}\r\n              placeholder=\"Silahkan Pilih\"\r\n            ></Field>\r\n          </div>\r\n          <div\r\n            className=\"col-md-8 form-group\"\r\n            style={\r\n              this.props.from === \"terima\" ? null : { visibility: \"hidden\" }\r\n            }\r\n          >\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              type=\"text\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kode Tukar\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field name=\"p\" label=\"P\" type=\"number\" component={renderField} />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field name=\"k\" label=\"K\" type=\"number\" component={renderField} />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"pkg\"\r\n              label=\"Bungkus (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Berat (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadarTransaksi\"\r\n              label=\"Kode Awal\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"gross\"\r\n              label=\"Gross (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Murni (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group d-none\">\r\n            <Field\r\n              name=\"kode_kategori\"\r\n              label=\"Kode Kategori\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 form-group mt-3\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\"\r\n                disabled={this.props.submitting}\r\n              >\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormTolakanHutangSupplier = reduxForm({\r\n  form: \"TerimaSupplier\",\r\n  validate: validationTerimaSupplier,\r\n  enableReinitialize: true,\r\n})(FormTolakanHutangSupplier);\r\nconst selector = formValueSelector(\"TerimaSupplier\"); // <-- same as form name\r\n\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi, pkg } = selector(\r\n    state,\r\n    \"bruto\",\r\n    \"kadarTransaksi\",\r\n    \"pkg\"\r\n  );\r\n  return {\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n    gross: parseFloat(bruto) + parseFloat(pkg),\r\n  };\r\n})(FormTolakanHutangSupplier);\r\n"],"sourceRoot":""}