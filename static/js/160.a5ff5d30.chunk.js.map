{"version":3,"sources":["Transaksi/RekapBonCustomer.jsx"],"names":["serverNonMaster","process","REACT_APP_BACKEND_URL_NON_MASTER","SearchBar","Search","RekapBonCustomer","props","disabledButton","e","target","disabled","onChange","input","setState","value","nextStep","step","state","step2","step1","dispatch","getListRekapBonSelected","prevStep","step3","listCustomer","listDataRekapBon","columns","dataField","text","align","headerAlign","footerClasses","columns2","Axios","get","params","statusValid","then","res","data","server","catch","gagal","this","getListClose","getUUID","filter","JSON","parse","localStorage","getItem","sorted","sort","a","b","Date","tanggal","isi","fakturList","footerDocument","inputBy","username","noFaktur","toISOString","slice","noBon","tipeTransaksi","keterangan","noFakturPilih","console","log","stringify","post","berhasil","removeItem","setFilterCustomer","namaToko","filtered","list","kodeAktor","toUpperCase","selectRow","mode","clickToSelect","onSelect","row","isSelect","rowIndex","array","namaAktor","bruto","netto","rp","push","setItem","index","findIndex","item","i","splice","onSelectAll","rows","forEach","className","title","steps","activeStep","htmlFor","type","name","options","map","obj","kodeCustomer","search","placeholder","setToko","keyField","searchProps","style","margin","top","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","noDataIndication","onClick","width","height","setGabung","Component","connect","provinsi"],"mappings":"oUAeMA,EAAkBC,+KAAYC,iCAS5BC,EAAcC,SAAdD,UACFE,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA4ERC,eAAiB,SAACC,GAChBA,EAAEC,OAAOC,UAAW,GA9EH,EAgFnBC,SAAW,SAACC,GAAD,OAAW,SAACJ,GACrB,EAAKK,SAAL,eACGD,EAAQJ,EAAEC,OAAOK,UAlFH,EA6GnBC,SAAW,WACT,IAAQC,EAAS,EAAKC,MAAdD,KACK,IAATA,GACF,EAAKH,SAAS,CAAEG,KAAMA,EAAO,EAAGE,MAAO,MAAOC,MAAO,eAEvD,EAAKb,MAAMc,SAASC,gBAlHH,EAoHnBC,SAAW,WACT,IAAQN,EAAS,EAAKC,MAAdD,KACK,IAATA,GACF,EAAKH,SAAS,CAAEG,KAAMA,EAAO,EAAGE,MAAO,aAAcC,MAAO,SArH9D,EAAKF,MAAQ,CACXD,KAAM,EACNG,MAAO,MACPD,MAAO,aACPK,MAAO,aACPC,aAAc,GACdC,iBAAkB,GAClBC,QAAS,CACP,CACEC,UAAW,UACXC,KAAM,WAER,CACED,UAAW,QACXC,KAAM,aAER,CACED,UAAW,YACXC,KAAM,cAER,CACED,UAAW,QACXC,KAAM,YACNC,MAAO,QACPC,YAAa,SAEf,CACEH,UAAW,QACXC,KAAM,YACNC,MAAO,QACPC,YAAa,QACbC,cAAe,6BAEjB,CACEJ,UAAW,KACXC,KAAM,aACNC,MAAO,QACPC,YAAa,UAGjBE,SAAU,CACR,CACEL,UAAW,UACXC,KAAM,WAER,CACED,UAAW,QACXC,KAAM,aAER,CACED,UAAW,YACXC,KAAM,cAER,CACED,UAAW,QACXC,KAAM,YACNC,MAAO,QACPC,YAAa,SAEf,CACEH,UAAW,QACXC,KAAM,YACNC,MAAO,QACPC,YAAa,QACbC,cAAe,6BAEjB,CACEJ,UAAW,KACXC,KAAM,aACNC,MAAO,QACPC,YAAa,WAxEF,E,gDAqFnB,WAAgB,IAAD,OACbG,IAAMC,IAAIlC,EAAkB,mBAAoB,CAC9CmC,OAAQ,CACNC,YAAa,WAEdC,MAAK,SAACC,GAAD,OACN,EAAKzB,SAAS,CACZY,iBAAkBa,EAAIC,Y,+BAI5B,WAAqB,IAAD,OAClBN,IAAMC,IAAIM,+CACPH,MAAK,SAACC,GAAD,OACJ,EAAKzB,SAAS,CACZW,aAAcc,EAAIC,UAGrBE,OAAM,kBACLC,YAAM,iEAEVC,KAAKC,eACLD,KAAKrC,MAAMc,SAASyB,iB,uBAetB,SAAUN,GAAO,IAAD,OACVO,EAASC,KAAKC,MAAMC,aAAaC,QAAQ,oBAAsB,GAC/DC,EAASL,EAAOM,MAAK,SAAUC,EAAGC,GACpC,OAAO,IAAIC,KAAKF,EAAEG,SAAW,IAAID,KAAKD,EAAEE,YAEtCC,EAAM,CACRC,WAAYZ,EACZa,eAAgB,CACdC,QAASjB,KAAKrC,MAAMuD,SACpBzB,YAAa,SAEf0B,SAAUnB,KAAKrC,MAAMwD,SACrBN,SAAS,IAAID,MAAOQ,cAAcC,MAAM,EAAG,IAC3CC,MAAOtB,KAAKrC,MAAMwD,SAClBI,cAAe,YACfC,WAAYhB,EAAO,GAAGiB,eAExBC,QAAQC,IAAIvB,KAAKwB,UAAUd,IAC3BxB,IAAMuC,KAAKxE,EAAkB,aAAcyD,GACxCpB,MAAK,kBACJoC,YAAS,wBAAyB,EAAKnE,MAAMc,SAASyB,mBAEvDR,MAAK,kBAAMY,aAAayB,WAAW,qBACnCrC,MAAK,kBAAM,EAAK/B,MAAMc,SAASyB,kBAC/BR,MAAK,kBAAM,EAAKf,cAChBmB,OAAM,kBAAMC,YAAM,uD,qBAEvB,SAAQH,GACNI,KAAKgC,kBAAkBpC,GACvBI,KAAK9B,SAAS,CACZ+D,SAAUrC,M,+BAGd,SAAkBA,GAAO,IAAD,OACtBN,IAAMC,IAAIlC,EAAkB,mBAAoB,CAC9CmC,OAAQ,CACNC,YAAa,UAGdC,MAAK,SAACC,GAAD,OACJ,EAAKzB,SAAS,CACZY,iBAAkBa,EAAIC,UAGzBF,MAAK,WACJ,IACIwC,EADQ,EAAK5D,MAAMQ,iBACFqB,QACnB,SAACgC,GAAD,OAAUA,EAAKC,YAAcxC,EAAKyC,iBAEpC,EAAKnE,SAAS,CACZY,iBAAkBoD,S,8BAI1B,SAAiBtC,GAAO,IAAD,OACrBN,IAAMC,IAAIlC,EAAkB,mBAAoB,CAC9CmC,OAAQ,CACNC,YAAa,UAGdC,MAAK,SAACC,GAAD,OACJ,EAAKzB,SAAS,CACZY,iBAAkBa,EAAIC,UAGzBF,MAAK,WACJ,IACIwC,EADQ,EAAK5D,MAAMQ,iBACFqB,QAAO,SAACgC,GAAD,OAAUA,EAAKtB,UAAYjB,KACvD,EAAK1B,SAAS,CACZY,iBAAkBoD,S,oBAI1B,WAAU,IAAD,OACDI,EAAY,CAChBC,KAAM,WACNC,eAAe,EACfC,SAAU,SAACC,EAAKC,EAAUC,EAAU/E,GAClC6D,QAAQC,IAAIe,EAAIvB,UAChB,IAAI0B,EAAQzC,KAAKC,MAAMC,aAAaC,QAAQ,oBAAsB,GAC5DX,EAAO,CACXiB,QAAS6B,EAAI7B,QACbY,cAAeiB,EAAIvB,SACnB2B,UAAWJ,EAAII,UACfC,MAAOL,EAAIK,MACXC,MAAON,EAAIM,MACXC,GAAIP,EAAIO,IAEV,GAAIN,EACFE,EAAMK,KAAKtD,GACXU,aAAa6C,QAAQ,iBAAkB/C,KAAKwB,UAAUiB,QACjD,CACL,IAAIO,EAAQP,EAAMQ,WAAU,SAACC,EAAMC,GACjC,OAAOD,EAAKnC,WAAauB,EAAIvB,YAE/B0B,EAAMW,OAAOJ,EAAO,GACpB9C,aAAa6C,QAAQ,iBAAkB/C,KAAKwB,UAAUiB,MAG1DY,YAAa,SAACd,EAAUe,EAAM7F,GAC5B,IAAIgF,EAAQ,GACZa,EAAKC,SAAQ,SAAUxB,GACrB,IAAMvC,EAAO,CACXiB,QAASsB,EAAKtB,QACdY,cAAeU,EAAKhB,SACpB2B,UAAWX,EAAKW,UAChBC,MAAOZ,EAAKY,MACZC,MAAOb,EAAKa,MACZC,GAAId,EAAKc,IAEXJ,EAAMK,KAAKtD,MAET+C,EACFrC,aAAa6C,QAAQ,iBAAkB/C,KAAKwB,UAAUiB,IAEtDvC,aAAayB,WAAW,oBAI9B,OACE,yBAAK6B,UAAU,mBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,QACb,kBAAC,UAAD,CAAYC,MAAM,mCAClB,yBAAKD,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,4BACb,kBAAC,IAAD,CACEE,MAAO,CACL,CAAED,MAAO,cACT,CAAEA,MAAO,eAGXE,WAAY/D,KAAK1B,MAAMD,QAG3B,yBAAKuF,UAAU,aACb,yBAAKA,UAAW5D,KAAK1B,MAAME,OACzB,yBAAKoF,UAAU,qBACb,2BAAOI,QAAQ,IAAf,WACA,2BACEC,KAAK,OACLC,KAAK,UACLN,UAAU,eACV5F,SAAUgC,KAAKhC,SAAS,cAG5B,yBAAK4F,UAAU,qBACb,2BAAOI,QAAQ,IAAf,aACA,kBAAC,IAAD,CACEG,QAASnE,KAAK1B,MAAMO,aAAauF,KAAI,SAACC,GAKpC,MAJc,CACZlG,MAAOkG,EAAIC,aACXJ,KAAMG,EAAIpC,aAIdsC,QAAM,EACNC,YAAY,iBACZxG,SAAU,SAAC4B,GAAD,OAAU,EAAK6E,QAAQ7E,OAGrC,yBAAKgE,UAAU,kBACZ5D,KAAK1B,MAAMQ,iBACV,kBAAC,IAAD,CACE4F,SAAS,WACT9E,KAAMI,KAAK1B,MAAMQ,iBACjBC,QAASiB,KAAK1B,MAAMS,QACpBwF,QAAM,IAEL,SAAC5G,GAAD,OACC,yBAAKiG,UAAU,cACb,yBAAKA,UAAU,cACb,kBAACpG,EAAD,iBACMG,EAAMgH,YADZ,CAEEf,UAAU,eACVY,YAAY,YACZI,MAAO,CAAEC,OAAQ,EAAGC,IAAK,WAG7B,kBAAC,IAAD,iBACMnH,EAAMoH,UADZ,CAEEC,SAAO,EACPC,OAAK,EACLC,WAAS,EACTC,UAAU,EACVC,cAAc,eACdC,WAAYC,MACZhD,UAAWA,SAMnB,kBAAC,IAAD,CACEoC,SAAS,WACT9E,KAAM,GACNb,QAASiB,KAAK1B,MAAMS,QACpBiG,SAAO,EACPC,OAAK,EACLC,WAAS,EACTC,UAAU,EACVC,cAAc,eACdG,iBAAiB,oBAIvB,yBAAK3B,UAAU,aACb,yBAAKA,UAAU,cACb,4BACEA,UAAU,kBACV4B,QAAS,kBAAM,EAAKpH,aAFtB,OAKE,uBAAGwF,UAAU,iCAKrB,yBAAKA,UAAW5D,KAAK1B,MAAMC,OACzB,yBAAKqF,UAAU,kBACZ5D,KAAK1B,MAAMQ,iBACV,kBAAC,IAAD,CACE4F,SAAS,WACT9E,KACEQ,KAAKC,MACHC,aAAaC,QAAQ,oBAClB,GAEPxB,QAASiB,KAAK1B,MAAMS,QACpBwF,QAAM,IAEL,SAAC5G,GAAD,OACC,yBAAKiG,UAAU,cACb,yBAAKA,UAAU,cACb,kBAACpG,EAAD,iBACMG,EAAMgH,YADZ,CAEEf,UAAU,eACVY,YAAY,YACZI,MAAO,CAAEC,OAAQ,EAAGC,IAAK,WAG7B,kBAAC,IAAD,iBACMnH,EAAMoH,UADZ,CAEEC,SAAO,EACPC,OAAK,EACLC,WAAS,EACTC,UAAU,EACVC,cAAc,eACdC,WAAYC,aAMpB,kBAAC,IAAD,CAAUG,MAAO,OAAQC,OAAQ,OAGrC,yBAAK9B,UAAU,aACb,yBAAKA,UAAU,cACb,4BACEA,UAAU,kBACV4B,QAAS,kBAAM,EAAKG,cAFtB,2B,GA/XOC,aAkZhBC,uBA1ZI,SAACvH,GAClB,MAAO,CACLQ,iBAAkBR,EAAMwH,SAAShH,iBACjCoC,SAAU5C,EAAMwH,SAAS5E,SACzBC,SAAU7C,EAAMwH,SAAS3E,YAsZM,KAApB0E,CAA0BnI","file":"static/js/160.a5ff5d30.chunk.js","sourcesContent":["import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport SelectSearch from \"react-select-search\";\r\nimport { getListRekapBonSelected } from \"../actions/rekapBonAction\";\r\nimport { berhasil, gagal } from \"../Alert\";\r\nimport { connect } from \"react-redux\";\r\nimport Stepper from \"react-stepper-horizontal/lib/Stepper\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\n\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    listDataRekapBon: state.provinsi.listDataRekapBon,\r\n    username: state.provinsi.username,\r\n    noFaktur: state.provinsi.noFaktur,\r\n  };\r\n};\r\nconst { SearchBar } = Search;\r\nclass RekapBonCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      step: 0,\r\n      step1: \"row\",\r\n      step2: \"row d-none\",\r\n      step3: \"row d-none\",\r\n      listCustomer: [],\r\n      listDataRekapBon: [],\r\n      columns: [\r\n        {\r\n          dataField: \"tanggal\",\r\n          text: \"Tanggal\",\r\n        },\r\n        {\r\n          dataField: \"noBon\",\r\n          text: \"Nomor Bon\",\r\n        },\r\n        {\r\n          dataField: \"namaAktor\",\r\n          text: \"Nama Aktor\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"rp\",\r\n          text: \"Ongkos(RP)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n      ],\r\n      columns2: [\r\n        {\r\n          dataField: \"tanggal\",\r\n          text: \"Tanggal\",\r\n        },\r\n        {\r\n          dataField: \"noBon\",\r\n          text: \"Nomor Bon\",\r\n        },\r\n        {\r\n          dataField: \"namaAktor\",\r\n          text: \"Nama Aktor\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"rp\",\r\n          text: \"Ongkos(RP)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  disabledButton = (e) => {\r\n    e.target.disabled = true;\r\n  };\r\n  onChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n  getListClose() {\r\n    Axios.get(serverNonMaster + \"cst/dc/pjl/heads\", {\r\n      params: {\r\n        statusValid: \"VALID\",\r\n      },\r\n    }).then((res) =>\r\n      this.setState({\r\n        listDataRekapBon: res.data,\r\n      })\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    Axios.get(server + \"customers\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listCustomer: res.data,\r\n        })\r\n      )\r\n      .catch(() =>\r\n        gagal(\"Mohon periksa koneksi anda, gagal komunikasi dengan server\")\r\n      );\r\n    this.getListClose();\r\n    this.props.dispatch(getUUID());\r\n  }\r\n  nextStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 0) {\r\n      this.setState({ step: step + 1, step2: \"row\", step1: \"row d-none\" });\r\n    }\r\n    this.props.dispatch(getListRekapBonSelected());\r\n  };\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 1) {\r\n      this.setState({ step: step - 1, step2: \"row d-none\", step1: \"row\" });\r\n    }\r\n  };\r\n  setGabung(data) {\r\n    var filter = JSON.parse(localStorage.getItem(\"FakturRekapBon\")) || [];\r\n    var sorted = filter.sort(function (a, b) {\r\n      return new Date(a.tanggal) - new Date(b.tanggal);\r\n    });\r\n    var isi = {\r\n      fakturList: filter,\r\n      footerDocument: {\r\n        inputBy: this.props.username,\r\n        statusValid: \"VALID\",\r\n      },\r\n      noFaktur: this.props.noFaktur,\r\n      tanggal: new Date().toISOString().slice(0, 10),\r\n      noBon: this.props.noFaktur,\r\n      tipeTransaksi: \"REKAP-BON\",\r\n      keterangan: sorted[0].noFakturPilih,\r\n    };\r\n    console.log(JSON.stringify(isi));\r\n    Axios.post(serverNonMaster + \"cst/dc/byr\", isi)\r\n      .then(() =>\r\n        berhasil(\"Penggabungan berhasil\", this.props.dispatch(getUUID()))\r\n      )\r\n      .then(() => localStorage.removeItem(\"FakturRekapBon\"))\r\n      .then(() => this.props.dispatch(getUUID()))\r\n      .then(() => this.prevStep())\r\n      .catch(() => gagal(\"Penggabungan gagal, Mohon periksa koneksi anda\"));\r\n  }\r\n  setToko(data) {\r\n    this.setFilterCustomer(data);\r\n    this.setState({\r\n      namaToko: data,\r\n    });\r\n  }\r\n  setFilterCustomer(data) {\r\n    Axios.get(serverNonMaster + \"cst/dc/pjl/heads\", {\r\n      params: {\r\n        statusValid: \"OPEN\",\r\n      },\r\n    })\r\n      .then((res) =>\r\n        this.setState({\r\n          listDataRekapBon: res.data,\r\n        })\r\n      )\r\n      .then(() => {\r\n        var array = this.state.listDataRekapBon;\r\n        var filtered = array.filter(\r\n          (list) => list.kodeAktor === data.toUpperCase()\r\n        );\r\n        this.setState({\r\n          listDataRekapBon: filtered,\r\n        });\r\n      });\r\n  }\r\n  setFilterTanggal(data) {\r\n    Axios.get(serverNonMaster + \"cst/dc/pjl/heads\", {\r\n      params: {\r\n        statusValid: \"OPEN\",\r\n      },\r\n    })\r\n      .then((res) =>\r\n        this.setState({\r\n          listDataRekapBon: res.data,\r\n        })\r\n      )\r\n      .then(() => {\r\n        var array = this.state.listDataRekapBon;\r\n        var filtered = array.filter((list) => list.tanggal === data);\r\n        this.setState({\r\n          listDataRekapBon: filtered,\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    const selectRow = {\r\n      mode: \"checkbox\",\r\n      clickToSelect: true,\r\n      onSelect: (row, isSelect, rowIndex, e) => {\r\n        console.log(row.noFaktur);\r\n        let array = JSON.parse(localStorage.getItem(\"FakturRekapBon\")) || [];\r\n        const data = {\r\n          tanggal: row.tanggal,\r\n          noFakturPilih: row.noFaktur,\r\n          namaAktor: row.namaAktor,\r\n          bruto: row.bruto,\r\n          netto: row.netto,\r\n          rp: row.rp,\r\n        };\r\n        if (isSelect) {\r\n          array.push(data);\r\n          localStorage.setItem(\"FakturRekapBon\", JSON.stringify(array));\r\n        } else {\r\n          var index = array.findIndex((item, i) => {\r\n            return item.noFaktur === row.noFaktur;\r\n          });\r\n          array.splice(index, 1);\r\n          localStorage.setItem(\"FakturRekapBon\", JSON.stringify(array));\r\n        }\r\n      },\r\n      onSelectAll: (isSelect, rows, e) => {\r\n        var array = [];\r\n        rows.forEach(function (list) {\r\n          const data = {\r\n            tanggal: list.tanggal,\r\n            noFakturPilih: list.noFaktur,\r\n            namaAktor: list.namaAktor,\r\n            bruto: list.bruto,\r\n            netto: list.netto,\r\n            rp: list.rp,\r\n          };\r\n          array.push(data);\r\n        });\r\n        if (isSelect) {\r\n          localStorage.setItem(\"FakturRekapBon\", JSON.stringify(array));\r\n        } else {\r\n          localStorage.removeItem(\"FakturRekapBon\");\r\n        }\r\n      },\r\n    };\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          <div className=\"card\">\r\n            <HeaderCard title=\"Rekap Bon Customer - Penjualan\" />\r\n            <div className=\"card-body\">\r\n              <div className=\"row m-2\">\r\n                <div className=\"col-lg-12 col-md-12 mb-5\">\r\n                  <Stepper\r\n                    steps={[\r\n                      { title: \"Pilih Data\" },\r\n                      { title: \"Rekap Data\" },\r\n                      // { title: \"Data Rekening\" },\r\n                    ]}\r\n                    activeStep={this.state.step}\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-12\">\r\n                  <div className={this.state.step1}>\r\n                    <div className=\"col-lg-4 col-md-4\">\r\n                      <label htmlFor=\"\">Tanggal</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        name=\"tanggal\"\r\n                        className=\"form-control\"\r\n                        onChange={this.onChange(\"tanggal\")}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-4 col-md-4\">\r\n                      <label htmlFor=\"\">Nama Toko</label>\r\n                      <SelectSearch\r\n                        options={this.state.listCustomer.map((obj) => {\r\n                          var payload = {\r\n                            value: obj.kodeCustomer,\r\n                            name: obj.namaToko,\r\n                          };\r\n                          return payload;\r\n                        })}\r\n                        search\r\n                        placeholder=\"Silahkan Pilih\"\r\n                        onChange={(data) => this.setToko(data)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-12 mt-5\">\r\n                      {this.state.listDataRekapBon ? (\r\n                        <ToolkitProvider\r\n                          keyField=\"noFaktur\"\r\n                          data={this.state.listDataRekapBon}\r\n                          columns={this.state.columns}\r\n                          search\r\n                        >\r\n                          {(props) => (\r\n                            <div className=\"form-group\">\r\n                              <div className=\"text-right\">\r\n                                <SearchBar\r\n                                  {...props.searchProps}\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"Pencarian\"\r\n                                  style={{ margin: 0, top: \"50%\" }}\r\n                                />\r\n                              </div>\r\n                              <BootstrapTable\r\n                                {...props.baseProps}\r\n                                striped\r\n                                hover\r\n                                condensed\r\n                                bordered={true}\r\n                                headerClasses=\"header-table\"\r\n                                pagination={paginationFactory()}\r\n                                selectRow={selectRow}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </ToolkitProvider>\r\n                      ) : (\r\n                        <BootstrapTable\r\n                          keyField=\"noFaktur\"\r\n                          data={[]}\r\n                          columns={this.state.columns}\r\n                          striped\r\n                          hover\r\n                          condensed\r\n                          bordered={true}\r\n                          headerClasses=\"header-table\"\r\n                          noDataIndication=\"Tidak Ada Data\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => this.nextStep()}\r\n                        >\r\n                          Next\r\n                          <i className=\"fa fa-chevron-right ml-3\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className={this.state.step2}>\r\n                    <div className=\"col-lg-12 mt-5\">\r\n                      {this.state.listDataRekapBon ? (\r\n                        <ToolkitProvider\r\n                          keyField=\"noFaktur\"\r\n                          data={\r\n                            JSON.parse(\r\n                              localStorage.getItem(\"FakturRekapBon\")\r\n                            ) || []\r\n                          }\r\n                          columns={this.state.columns}\r\n                          search\r\n                        >\r\n                          {(props) => (\r\n                            <div className=\"form-group\">\r\n                              <div className=\"text-right\">\r\n                                <SearchBar\r\n                                  {...props.searchProps}\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"Pencarian\"\r\n                                  style={{ margin: 0, top: \"50%\" }}\r\n                                />\r\n                              </div>\r\n                              <BootstrapTable\r\n                                {...props.baseProps}\r\n                                striped\r\n                                hover\r\n                                condensed\r\n                                bordered={true}\r\n                                headerClasses=\"header-table\"\r\n                                pagination={paginationFactory()}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </ToolkitProvider>\r\n                      ) : (\r\n                        <Skeleton width={\"100%\"} height={100} />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => this.setGabung()}\r\n                        >\r\n                          Gabung Bon\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(RekapBonCustomer);\r\n"],"sourceRoot":""}