{"version":3,"sources":["Validations/validasiCash.js","FICO/Element/AccordCash.jsx"],"names":["validasiCash","value","errors","cash","harga","currencyMask","createNumberMask","prefix","suffix","locale","renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","AccordCash","props","state","netto","local","JSON","parse","localStorage","getItem","cash_rp","harga_emas","this","cash_netto","change","cashNettoMurni","cashNetto","transferNetto","id","data-toggle","href","aria-expanded","aria-controls","style","color","Field","name","component","aria-labelledby","data-parent","onSubmit","handleSubmit","onBlur","onChange","Component","reduxForm","form","enableReinitialize","validate","selector","formValueSelector","connect","parseFloat","toFixed"],"mappings":"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","file":"static/js/5.da63a8cc.chunk.js","sourcesContent":["const validasiCash = (value) => {\r\n  const errors = {};\r\n  if (!value.cash) {\r\n    errors.cash = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.harga) {\r\n    errors.harga = \"Tidak Boleh kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validasiCash;\r\n","import React, { Component } from \"react\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validasiCash from \"../../Validations/validasiCash\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nclass AccordCash extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    var cash = 0,\r\n      harga = 0,\r\n      netto = 0;\r\n    var local = JSON.parse(localStorage.getItem(\"alatBayarTunai\"))\r\n      ? JSON.parse(localStorage.getItem(\"alatBayarTunai\"))\r\n      : \"kosong\";\r\n    if (local === \"kosong\") {\r\n      cash = 0;\r\n      harga = 0;\r\n      netto = 0;\r\n    } else {\r\n      cash = local[0].cash_rp;\r\n      harga = local[0].harga_emas;\r\n      netto =\r\n        this.props.type === \"murni\" ? local[0].harga_emas : local[0].cash_netto;\r\n    }\r\n    this.props.change(\"cash\", cash);\r\n    this.props.change(\"harga\", harga);\r\n    this.props.change(\"cashNetto\", netto);\r\n  }\r\n\r\n  onChange() {\r\n    this.props.change(\r\n      \"cashNetto\",\r\n      this.props.type === \"murni\"\r\n        ? this.props.cashNettoMurni\r\n        : this.props.cashNetto\r\n    );\r\n    this.props.change(\"transferNetto\", this.props.transferNetto);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-6 mt-3\">\r\n        <div id=\"accordion\" className=\"custom-accordion mb-4\">\r\n          <div className=\"card mb-0 bg-dark\">\r\n            <div className=\"card-header \" id=\"headingOne\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-8\">\r\n                  <h5 className=\"m-0\">\r\n                    <a\r\n                      className=\"custom-accordion-title d-block pt-2 pb-2 text-white\"\r\n                      data-toggle=\"collapse\"\r\n                      href=\"#collapseCash\"\r\n                      aria-expanded=\"true\"\r\n                      aria-controls=\"collapseCash\"\r\n                    >\r\n                      Cash\r\n                    </a>\r\n                  </h5>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\" style={{ color: \"white\" }}>\r\n                    Netto\r\n                  </label>\r\n                  <Field\r\n                    name=\"cashNetto\"\r\n                    type=\"number\"\r\n                    component=\"input\"\r\n                    className=\"form-control\"\r\n                    readOnly={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              id=\"collapseCash\"\r\n              className=\"collapse\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-parent=\"#accordion\"\r\n            >\r\n              <div className=\"card-body bg-white\">\r\n                <form onSubmit={this.props.handleSubmit}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Cash</label>\r\n                      <Field\r\n                        name=\"cash\"\r\n                        component=\"input\"\r\n                        type=\"tel\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.onChange()}\r\n                        {...currencyMask}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Harga </label>\r\n                      <div className=\"form-gorup\">\r\n                        <Field\r\n                          name=\"harga\"\r\n                          component=\"input\"\r\n                          type=\"tel\"\r\n                          className=\"form-control\"\r\n                          onBlur={this.onChange()}\r\n                          {...currencyMask}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <Field\r\n                        name=\"cashNetto\"\r\n                        label=\"Netto\"\r\n                        type=\"number\"\r\n                        component={renderField}\r\n                        readOnly={true}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"text-right\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                          Simpan\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAccordCash = reduxForm({\r\n  form: \"AccordCash\",\r\n  enableReinitialize: true,\r\n  validate: validasiCash,\r\n})(AccordCash);\r\nconst selector = formValueSelector(\"AccordCash\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { harga, cash } = selector(state, \"harga\", \"cash\");\r\n  return {\r\n    cashNetto: (parseFloat(cash) / parseFloat(harga)).toFixed(3),\r\n    cashNettoMurni: parseFloat(cash),\r\n  };\r\n})(AccordCash);\r\n"],"sourceRoot":""}