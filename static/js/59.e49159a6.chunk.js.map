{"version":3,"sources":["Totalan/ValidasiStokJualLM.jsx","FindIndex.js"],"names":["FormModalValidasiStok","lazy","ModalMasterData","serverNonMaster","process","REACT_APP_BACKEND_URL_NON_MASTER","ValidasiStokJualLM","props","state","columns","dataField","text","footerClasses","csvExport","formatter","rowContent","row","checkReplikasiValidasi","noFaktur","className","onClick","e","klikPilih","listValidasiBarang","tanggal","netto","this","getData","dispatch","showModal","setState","bruto","Axios","get","then","res","data","filter","list","tipeTransaksi","simpan","barangDetails","jumlah","footerDocument","inputBy","username","console","log","JSON","stringify","put","hideModal","berhasil","catch","gagal","reset","getUUID","title","step1","keyField","search","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","width","height","count","kirimvalidasi","content","fallback","onSubmit","handleModal","Component","connect","provinsi","lokasi","parse","localStorage","getItem","findIndex","item","i"],"mappings":"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","file":"static/js/59.e49159a6.chunk.js","sourcesContent":["import Axios from \"axios\";\r\nimport React, { Component, lazy, Suspense } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset } from \"redux-form\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { hideModal, showModal } from \"../actions/ModalAction\";\r\nimport { berhasil, gagal } from \"../Alert\";\r\nimport { checkReplikasiValidasi } from \"../FindIndex\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nconst FormModalValidasiStok = lazy(() =>\r\n  import(\"./Element/FormModalValidasiStok\")\r\n);\r\n\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nconst maptoState = (state) => {\r\n  return {\r\n    username: state.provinsi.username,\r\n  };\r\n};\r\nclass ValidasiStokJualLM extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          dataField: \"tanggal\",\r\n          text: \"Tanggal\",\r\n        },\r\n        {\r\n          dataField: \"noBon\",\r\n          text: \"Nomor Bon\",\r\n        },\r\n        {\r\n          dataField: \"namaAktor\",\r\n          text: \"Nama Aktor\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni(Gr)\",\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"rp\",\r\n          text: \"Ongkos(RP)\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            var hasil = checkReplikasiValidasi(\"FakturTerpilih\", row.noFaktur);\r\n            if (hasil === -1) {\r\n              return (\r\n                <div className=\"text-center\">\r\n                  <button\r\n                    className=\"btn btn-warning mr-2\"\r\n                    onClick={(e) => this.klikPilih(row)}\r\n                  >\r\n                    <i className=\"fa fa-check-circle mr-1\"></i>\r\n                    Pilih\r\n                  </button>\r\n                </div>\r\n              );\r\n            }\r\n          },\r\n        },\r\n      ],\r\n      listValidasiBarang: [\r\n        {\r\n          tanggal: \"2020-12-12\",\r\n          noFaktur: \"NOFAKTUR-0001\",\r\n          netto: \"100\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  klikPilih(row) {\r\n    this.props.dispatch(showModal());\r\n    this.setState({\r\n      noFaktur: row.noFaktur,\r\n      bruto: row.bruto,\r\n    });\r\n  }\r\n  getData() {\r\n    Axios.get(serverNonMaster + \"cst/dc/lm/heads?statusValid=VALID\").then(\r\n      (res) =>\r\n        this.setState({\r\n          listValidasiBarang: res.data.filter(\r\n            (list) => list.tipeTransaksi === \"JUAL LM\" && list.bruto > 0\r\n          ),\r\n        })\r\n    );\r\n  }\r\n  handleModal(data) {\r\n    var simpan = {\r\n      noFaktur: data.noFaktur,\r\n      barangDetails: [\r\n        {\r\n          bruto: data.jumlah,\r\n        },\r\n      ],\r\n      footerDocument: {\r\n        inputBy: this.props.username,\r\n      },\r\n    };\r\n    console.log(JSON.stringify(simpan));\r\n    Axios.put(serverNonMaster + \"cst/dc/lmoutstand\", simpan)\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then(() => berhasil(\"Validasi Stok berhasil \\nTerima kasih\"))\r\n      .then(() => this.getData())\r\n      .catch(() =>\r\n        gagal(\"Mohon maaf, Sepertinya koneksi internet sedang bermasalah\")\r\n      );\r\n    this.props.dispatch(reset(\"FormModalValidasiStok\"));\r\n    this.props.dispatch(getUUID());\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"card\">\r\n          <HeaderCard title=\"Validasi Stok Penjualan LM\" />\r\n          <div className=\"card-body\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className={this.state.step1}>\r\n                    <div className=\"col-lg-12 mt-3\">\r\n                      {this.state.listValidasiBarang ? (\r\n                        <ToolkitProvider\r\n                          keyField=\"id\"\r\n                          data={this.state.listValidasiBarang}\r\n                          columns={this.state.columns}\r\n                          search\r\n                        >\r\n                          {(props) => (\r\n                            <div className=\"form-group\">\r\n                              <BootstrapTable\r\n                                {...props.baseProps}\r\n                                striped\r\n                                hover\r\n                                condensed\r\n                                bordered={true}\r\n                                headerClasses=\"header-table\"\r\n                                pagination={paginationFactory()}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </ToolkitProvider>\r\n                      ) : (\r\n                        <Skeleton\r\n                          width={\"100%\"}\r\n                          height={50}\r\n                          count={5}\r\n                          className=\"mb-1\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() =>\r\n                            this.kirimvalidasi(this.state.tipeTransaksi)\r\n                          }\r\n                        >\r\n                          <i className=\"fa fa-check mr-3\"></i>\r\n                          VALIDASI\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ModalMasterData\r\n          content={\r\n            <Suspense\r\n              fallback={<Skeleton width={\"100%\"} height={50} count={5} />}\r\n            >\r\n              <FormModalValidasiStok\r\n                onSubmit={(data) => this.handleModal(data)}\r\n                noFaktur={this.state.noFaktur}\r\n                bruto={this.state.bruto}\r\n              />\r\n            </Suspense>\r\n          }\r\n          title=\"\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(ValidasiStokJualLM);\r\n","import Swal from \"sweetalert2\";\r\nimport { berhasil } from \"./Alert\";\r\n\r\nexport const checkReplikasiValidasi = (lokasi, data) => {\r\n  var searchData = JSON.parse(localStorage.getItem(lokasi)) || [];\r\n  var index = searchData.findIndex(function (item, i) {\r\n    return item.noFaktur === data;\r\n  });\r\n  return index;\r\n};\r\nexport const checkRekapBon = (lokasi, data) => {\r\n  var searchData = JSON.parse(localStorage.getItem(lokasi)) || [];\r\n  var index = searchData.findIndex(function (item, i) {\r\n    return item.namaAktor === data ? item.namaAktor === data : \"TIDAK ADA\";\r\n  });\r\n  return index;\r\n};\r\n\r\nexport const addFaktur = (\r\n  noFaktur,\r\n  tanggal,\r\n  noBon,\r\n  supplier,\r\n  bruto,\r\n  netto,\r\n  bonRp,\r\n  titipRp,\r\n  titipGr,\r\n  keterangan,\r\n  e\r\n) => {\r\n  var tampung = JSON.parse(localStorage.getItem(\"FakturTerpilih\")) || [];\r\n  var hasil = checkReplikasiValidasi(\"FakturTerpilih\", noFaktur);\r\n  if (hasil === -1) {\r\n    var array = {\r\n      tanggal: tanggal,\r\n      noBon: noBon,\r\n      supplier: supplier,\r\n      bruto: bruto,\r\n      netto: netto,\r\n      bonRp: bonRp,\r\n      titipRp: titipRp,\r\n      titipGr: titipGr,\r\n      keterangan: keterangan,\r\n      noFaktur: noFaktur,\r\n      footerDocument: {\r\n        editBy: \"Nagatech\",\r\n        statusValid: \"VALID\",\r\n      },\r\n    };\r\n    tampung.push(array);\r\n    localStorage.setItem(\"FakturTerpilih\", JSON.stringify(tampung));\r\n    console.log(\"BERHASIL TAMBAHKAN : \" + noFaktur);\r\n    berhasil(\"Berhasil Ditambahkan\");\r\n  } else {\r\n    Swal.fire({\r\n      position: \"top-right\",\r\n      icon: \"warning\",\r\n      text: \"Faktur Sudah Terpilih\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n  }\r\n};\r\nexport const addCloseFaktur = (\r\n  noFaktur,\r\n  tanggal,\r\n  noBon,\r\n  supplier,\r\n  bruto,\r\n  netto,\r\n  bonRp,\r\n  titipRp,\r\n  titipGr,\r\n  keterangan,\r\n  e\r\n) => {\r\n  var tampung =\r\n    JSON.parse(localStorage.getItem(\"closeTransaksiPenjualan\")) || [];\r\n  var hasil = checkReplikasiValidasi(\"closeTransaksiPenjualan\", noFaktur);\r\n  console.log(hasil, noFaktur);\r\n  if (hasil === -1) {\r\n    var array = {\r\n      tanggal: tanggal,\r\n      noBon: noBon,\r\n      supplier: supplier,\r\n      bruto: bruto,\r\n      netto: netto,\r\n      bonRp: bonRp,\r\n      titipRp: titipRp,\r\n      titipGr: titipGr,\r\n      keterangan: keterangan,\r\n      noFaktur: noFaktur,\r\n      footerDocument: {\r\n        editBy: \"Nagatech\",\r\n        statusValid: \"CANCEL\",\r\n      },\r\n    };\r\n    tampung.push(array);\r\n    localStorage.setItem(\"closeTransaksiPenjualan\", JSON.stringify(tampung));\r\n    console.log(\"BERHASIL TAMBAHKAN : \" + noFaktur);\r\n    berhasil(\"Berhasil Ditambahkan\");\r\n  } else {\r\n    Swal.fire({\r\n      position: \"top-right\",\r\n      icon: \"warning\",\r\n      text: \"Faktur Sudah Terpilih\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addRekapBon = (noFaktur, tanggal, bruto, netto, rp, namaAktor) => {\r\n  var tampung = JSON.parse(localStorage.getItem(\"FakturRekapBon\")) || [];\r\n  var hasil = checkReplikasiValidasi(\"FakturRekapBon\", noFaktur);\r\n  if (hasil < 1) {\r\n    var hasilAktor = checkRekapBon(\"FakturRekapBon\", namaAktor);\r\n    if (hasilAktor < 1) {\r\n      var array = {\r\n        tanggal: tanggal,\r\n        noFakturPilih: noFaktur,\r\n        namaAktor: namaAktor,\r\n        bruto: bruto,\r\n        netto: netto,\r\n        rp: rp,\r\n      };\r\n      tampung.push(array);\r\n      localStorage.setItem(\"FakturRekapBon\", JSON.stringify(tampung));\r\n      console.log(\"BERHASIL TAMBAHKAN : \" + noFaktur);\r\n      berhasil(\"Berhasil Ditambahkan\");\r\n    } else {\r\n      Swal.fire({\r\n        position: \"top-right\",\r\n        icon: \"warning\",\r\n        text: \"Nama Customer Berbeda\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n    }\r\n  } else {\r\n    Swal.fire({\r\n      position: \"top-right\",\r\n      icon: \"warning\",\r\n      text: \"Faktur Sudah Terpilih\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteFaktur = (noFaktur) => {\r\n  var tampung = JSON.parse(localStorage.getItem(\"FakturTerpilih\")) || [];\r\n  var hasil = checkReplikasiValidasi(\"FakturTerpilih\", noFaktur);\r\n  tampung.splice(hasil, 1);\r\n  localStorage.setItem(\"FakturTerpilih\", JSON.stringify(tampung));\r\n  berhasil(\"berhasil dihapus\");\r\n  console.log(\"HASIL TERBARU\", JSON.stringify(tampung));\r\n};\r\n"],"sourceRoot":""}