{"version":3,"sources":["Totalan/ValidasiStokBeliLM.jsx","../node_modules/redux-form/es/index.js","HeaderCard.jsx","FindIndex.js"],"names":["FormModalValidasiStok","lazy","ModalMasterData","serverNonMaster","process","REACT_APP_BACKEND_URL_NON_MASTER","SearchBar","Search","ClearSearchButton","validasiStokBeliLM","props","state","columns","dataField","text","csvExport","formatter","rowContent","row","checkReplikasiValidasi","noFaktur","className","data-toggle","data-target","onClick","e","klikPilih","listValidasiBarang","tanggal","netto","this","getData","dispatch","getUUID","showModal","setState","bruto","Axios","get","then","res","data","filter","list","tipeTransaksi","simpan","barangDetails","jumlah","footerDocument","inputBy","username","console","log","JSON","stringify","put","hideModal","berhasil","catch","gagal","reset","title","step1","keyField","search","searchProps","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","width","height","count","kirimvalidasi","content","fallback","onSubmit","handleModal","Component","connect","provinsi","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","HeaderCard","style","fontSize","backgroundColor","borderTopLeftRadius","borderTopRightRadius","color","id","type","effect","data-tip","data-for","window","location","reload","lokasi","parse","localStorage","getItem","findIndex","item","i"],"mappings":"2TAcMA,EAAwBC,gBAAK,kBACjC,gEAEIC,EAAkBD,gBAAK,kBAC3B,uDAEIE,EAAkBC,4PAAYC,iCAC5BC,EAAiCC,SAAjCD,UAAWE,EAAsBD,SAAtBC,kBAMbC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,CACP,CACEC,UAAW,UACXC,KAAM,WAER,CACED,UAAW,QACXC,KAAM,aAER,CACED,UAAW,YACXC,KAAM,cAER,CACED,UAAW,QACXC,KAAM,aAER,CACED,UAAW,KACXC,KAAM,cAER,CACED,UAAW,OACXC,KAAM,OACNC,WAAW,EACXC,UAAW,SAACC,EAAYC,GAEtB,IAAe,IADHC,YAAuB,iBAAkBD,EAAIE,UAEvD,OACE,yBAAKC,UAAU,eACb,4BACEA,UAAU,uBACVC,cAAY,QACZC,cAAY,iBACZC,QAAS,SAACC,GAAD,OAAO,EAAKC,UAAUR,KAE/B,uBAAGG,UAAU,4BANf,aAeZM,mBAAoB,CAClB,CACEC,QAAS,aACTR,SAAU,gBACVS,MAAO,SApDI,E,gEA0DjBC,KAAKC,UACLD,KAAKpB,MAAMsB,SAASC,iB,gCAGZf,GACRY,KAAKpB,MAAMsB,SAASE,eACpBJ,KAAKK,SAAS,CACZf,SAAUF,EAAIE,SACdgB,MAAOlB,EAAIkB,U,gCAIJ,IAAD,OACRC,IAAMC,IAAInC,EAAkB,qCAAqCoC,MAC/D,SAACC,GAAD,OACE,EAAKL,SAAS,CACZR,mBAAoBa,EAAIC,KAAKC,QAC3B,SAACC,GAAD,MAAiC,YAAvBA,EAAKC,eAA+BD,EAAKP,MAAQ,Y,kCAKzDK,GAAO,IAAD,OACZI,EAAS,CACXzB,SAAUqB,EAAKrB,SACf0B,cAAe,CACb,CACEV,MAAOK,EAAKM,SAGhBC,eAAgB,CACdC,QAASnB,KAAKpB,MAAMwC,WAGxBC,QAAQC,IAAIC,KAAKC,UAAUT,IAC3BR,IAAMkB,IAAIpD,EAAkB,oBAAqB0C,GAC9CN,MAAK,kBAAM,EAAK7B,MAAMsB,SAASwB,kBAC/BjB,MAAK,kBAAMkB,YAAS,4CACpBlB,MAAK,kBAAM,EAAKR,aAChB2B,OAAM,kBACLC,YAAM,gEAEV7B,KAAKpB,MAAMsB,SAAS4B,YAAM,0BAC1B9B,KAAKpB,MAAMsB,SAASC,iB,+BAEZ,IAAD,OACP,OACE,yBAAKZ,UAAU,mBACb,yBAAKA,UAAU,QACb,kBAAC,UAAD,CAAYwC,MAAM,0BAClB,yBAAKxC,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAWS,KAAKnB,MAAMmD,OACzB,yBAAKzC,UAAU,kBACZS,KAAKnB,MAAMgB,mBACV,kBAAC,IAAD,CACEoC,SAAS,KACTtB,KAAMX,KAAKnB,MAAMgB,mBACjBf,QAASkB,KAAKnB,MAAMC,QACpBoD,QAAM,IAEL,SAACtD,GAAD,OACC,yBAAKW,UAAU,cACb,yBAAKA,UAAU,cACb,kBAACf,EAAcI,EAAMuD,aACrB,kBAACzD,EAAsBE,EAAMuD,cAE/B,kBAAC,IAAD,iBACMvD,EAAMwD,UADZ,CAEEC,SAAO,EACPC,OAAK,EACLC,WAAS,EACTC,UAAU,EACVC,cAAc,eACdC,WAAYC,aAMpB,kBAAC,IAAD,CACEC,MAAO,OACPC,OAAQ,GACRC,MAAO,EACPvD,UAAU,UAIhB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,4BACEA,UAAU,kBACVG,QAAS,kBACP,EAAKqD,cAAc,EAAKlE,MAAMiC,iBAGhC,uBAAGvB,UAAU,qBANf,oBAiBhB,kBAACnB,EAAD,CACE4E,QACE,kBAAC,WAAD,CACEC,SAAU,kBAAC,IAAD,CAAUL,MAAO,OAAQC,OAAQ,GAAIC,MAAO,KAEtD,kBAAC5E,EAAD,CACEgF,SAAU,SAACvC,GAAD,OAAU,EAAKwC,YAAYxC,IACrCrB,SAAUU,KAAKnB,MAAMS,SACrBgB,MAAON,KAAKnB,MAAMyB,SAIxByB,MAAM,U,GApLiBqB,aA2LlBC,uBAhMI,SAACxE,GAClB,MAAO,CACLuC,SAAUvC,EAAMyE,SAASlC,YA8LM,KAApBiC,CAA0B1E,I,iCCtNzC,8CA2DWmD,GArBcyB,IAAQC,YACVD,IAAQE,UACTF,IAAQG,SACPH,IAAQI,UACNJ,IAAQK,YACLL,IAAQM,eACZN,IAAQO,WACPP,IAAQQ,YACVR,IAAQS,UACLT,IAAQU,aACZV,IAAQW,SACZX,IAAQY,KACNZ,IAAQa,OACCb,IAAQc,gBACZd,IAAQe,YACRf,IAAQgB,YACFhB,IAAQiB,kBAClBjB,IAAQkB,QACVlB,IAAQmB,MACHnB,IAAQoB,WACLpB,IAAQqB,cAChBrB,IAAQzB,OACDyB,IAAQsB,aACLtB,IAAQuB,gBACLvB,IAAQwB,mBACNxB,IAAQyB,qBACjBzB,IAAQ0B,YACA1B,IAAQ2B,oBACjB3B,IAAQ4B,WACZ5B,IAAQ6B,OACT7B,IAAQ8B,MACE9B,IAAQ+B,gBAChB/B,IAAQgC,QACGhC,IAAQiC,mBACVjC,IAAQkC,kB,qGCrEhCC,E,uKAEF,OACE,yBACEnG,UAAU,mBACVoG,MAAO,CACLC,SAAU,GACVC,gBAAiB,UACjBC,oBAAqB,GACrBC,qBAAsB,GACtBC,MAAO,YAGT,yBAAKzG,UAAU,eACb,yBAAKA,UAAU,qBACb,wBACEoG,MAAO,CACLC,SAAU,GACVI,MAAO,YAGRhG,KAAKpB,MAAMmD,QAGhB,yBAAKxC,UAAU,+BACb,kBAAC,IAAD,CAAc0G,GAAG,SAASC,KAAK,OAAOC,OAAO,SAC3C,yCAEF,4BACEC,YAAA,EACAC,WAAS,SACT9G,UAAU,+CACVG,QAAS,kBAAM4G,OAAOC,SAASC,WAE/B,uBAAGjH,UAAU,0B,GAlCF6D,aA2CVsC,a,iCC9Cf,kDAGarG,EAAyB,SAACoH,EAAQ9F,GAK7C,OAJiBY,KAAKmF,MAAMC,aAAaC,QAAQH,KAAY,IACtCI,WAAU,SAAUC,EAAMC,GAC/C,OAAOD,EAAKxH,WAAaqB","file":"static/js/117.bdadd9cf.chunk.js","sourcesContent":["import Axios from \"axios\";\r\nimport React, { Component, lazy, Suspense } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset } from \"redux-form\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { hideModal, showModal } from \"../actions/ModalAction\";\r\nimport { berhasil, gagal } from \"../Alert\";\r\nimport { checkReplikasiValidasi } from \"../FindIndex\";\r\nimport HeaderCard from \"../HeaderCard\";\r\n\r\nconst FormModalValidasiStok = lazy(() =>\r\n  import(\"./Element/FormModalValidasiStok\")\r\n);\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nconst { SearchBar, ClearSearchButton } = Search;\r\nconst maptoState = (state) => {\r\n  return {\r\n    username: state.provinsi.username,\r\n  };\r\n};\r\nclass validasiStokBeliLM extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          dataField: \"tanggal\",\r\n          text: \"Tanggal\",\r\n        },\r\n        {\r\n          dataField: \"noBon\",\r\n          text: \"Nomor Bon\",\r\n        },\r\n        {\r\n          dataField: \"namaAktor\",\r\n          text: \"Nama Aktor\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"rp\",\r\n          text: \"Ongkos(RP)\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            var hasil = checkReplikasiValidasi(\"FakturTerpilih\", row.noFaktur);\r\n            if (hasil === -1) {\r\n              return (\r\n                <div className=\"text-center\">\r\n                  <button\r\n                    className=\"btn btn-warning mr-2\"\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#validasiModal\"\r\n                    onClick={(e) => this.klikPilih(row)}\r\n                  >\r\n                    <i className=\"fa fa-check-circle mr-1\"></i>\r\n                    Pilih\r\n                  </button>\r\n                </div>\r\n              );\r\n            }\r\n          },\r\n        },\r\n      ],\r\n      listValidasiBarang: [\r\n        {\r\n          tanggal: \"2020-12-12\",\r\n          noFaktur: \"NOFAKTUR-0001\",\r\n          netto: \"100\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getData();\r\n    this.props.dispatch(getUUID());\r\n  }\r\n\r\n  klikPilih(row) {\r\n    this.props.dispatch(showModal());\r\n    this.setState({\r\n      noFaktur: row.noFaktur,\r\n      bruto: row.bruto,\r\n    });\r\n  }\r\n\r\n  getData() {\r\n    Axios.get(serverNonMaster + \"cst/dc/lm/heads?statusValid=VALID\").then(\r\n      (res) =>\r\n        this.setState({\r\n          listValidasiBarang: res.data.filter(\r\n            (list) => list.tipeTransaksi === \"BELI LM\" && list.bruto > 0\r\n          ),\r\n        })\r\n    );\r\n  }\r\n  handleModal(data) {\r\n    var simpan = {\r\n      noFaktur: data.noFaktur,\r\n      barangDetails: [\r\n        {\r\n          bruto: data.jumlah,\r\n        },\r\n      ],\r\n      footerDocument: {\r\n        inputBy: this.props.username,\r\n      },\r\n    };\r\n    console.log(JSON.stringify(simpan));\r\n    Axios.put(serverNonMaster + \"cst/dc/lmoutstand\", simpan)\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then(() => berhasil(\"Validasi Stok berhasil \\nTerima kasih\"))\r\n      .then(() => this.getData())\r\n      .catch(() =>\r\n        gagal(\"Mohon maaf, Sepertinya koneksi internet sedang bermasalah\")\r\n      );\r\n    this.props.dispatch(reset(\"FormModalValidasiStok\"));\r\n    this.props.dispatch(getUUID());\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"card\">\r\n          <HeaderCard title=\"Validasi Stok Beli LM\" />\r\n          <div className=\"card-body\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className={this.state.step1}>\r\n                    <div className=\"col-lg-12 mt-3\">\r\n                      {this.state.listValidasiBarang ? (\r\n                        <ToolkitProvider\r\n                          keyField=\"id\"\r\n                          data={this.state.listValidasiBarang}\r\n                          columns={this.state.columns}\r\n                          search\r\n                        >\r\n                          {(props) => (\r\n                            <div className=\"form-group\">\r\n                              <div className=\"text-right\">\r\n                                <SearchBar {...props.searchProps} />\r\n                                <ClearSearchButton {...props.searchProps} />\r\n                              </div>\r\n                              <BootstrapTable\r\n                                {...props.baseProps}\r\n                                striped\r\n                                hover\r\n                                condensed\r\n                                bordered={true}\r\n                                headerClasses=\"header-table\"\r\n                                pagination={paginationFactory()}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </ToolkitProvider>\r\n                      ) : (\r\n                        <Skeleton\r\n                          width={\"100%\"}\r\n                          height={50}\r\n                          count={5}\r\n                          className=\"mb-1\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() =>\r\n                            this.kirimvalidasi(this.state.tipeTransaksi)\r\n                          }\r\n                        >\r\n                          <i className=\"fa fa-check mr-3\"></i>\r\n                          VALIDASI\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ModalMasterData\r\n          content={\r\n            <Suspense\r\n              fallback={<Skeleton width={\"100%\"} height={50} count={5} />}\r\n            >\r\n              <FormModalValidasiStok\r\n                onSubmit={(data) => this.handleModal(data)}\r\n                noFaktur={this.state.noFaktur}\r\n                bruto={this.state.bruto}\r\n              />\r\n            </Suspense>\r\n          }\r\n          title=\"\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(validasiStokBeliLM);\r\n","import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import React, { Component } from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nclass HeaderCard extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"card-header mb-3\"\r\n        style={{\r\n          fontSize: 30,\r\n          backgroundColor: \"#394867\",\r\n          borderTopLeftRadius: 10,\r\n          borderTopRightRadius: 10,\r\n          color: \"#ffffff\",\r\n        }}\r\n      >\r\n        <div className=\"row my-auto\">\r\n          <div className=\"col-lg-10 my-auto\">\r\n            <h4\r\n              style={{\r\n                fontSize: 25,\r\n                color: \"#ffffff\",\r\n              }}\r\n            >\r\n              {this.props.title}\r\n            </h4>\r\n          </div>\r\n          <div className=\"col-lg-2 text-right my-auto\">\r\n            <ReactTooltip id=\"reload\" type=\"dark\" effect=\"solid\">\r\n              <span>Reload</span>\r\n            </ReactTooltip>\r\n            <button\r\n              data-tip\r\n              data-for=\"reload\"\r\n              className=\"btn btn-success btn-small btn-circle my-auto\"\r\n              onClick={() => window.location.reload()}\r\n            >\r\n              <i className=\"fa fa-retweet\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderCard;\r\n","import Swal from \"sweetalert2\";\r\nimport { berhasil } from \"./Alert\";\r\n\r\nexport const checkReplikasiValidasi = (lokasi, data) => {\r\n  var searchData = JSON.parse(localStorage.getItem(lokasi)) || [];\r\n  var index = searchData.findIndex(function (item, i) {\r\n    return item.noFaktur === data;\r\n  });\r\n  return index;\r\n};\r\nexport const checkRekapBon = (lokasi, data) => {\r\n  var searchData = JSON.parse(localStorage.getItem(lokasi)) || [];\r\n  var index = searchData.findIndex(function (item, i) {\r\n    return item.namaAktor === data ? item.namaAktor === data : \"TIDAK ADA\";\r\n  });\r\n  return index;\r\n};\r\n\r\nexport const addFaktur = (\r\n  noFaktur,\r\n  tanggal,\r\n  noBon,\r\n  supplier,\r\n  bruto,\r\n  netto,\r\n  bonRp,\r\n  titipRp,\r\n  titipGr,\r\n  keterangan,\r\n  e\r\n) => {\r\n  var tampung = JSON.parse(localStorage.getItem(\"FakturTerpilih\")) || [];\r\n  var hasil = checkReplikasiValidasi(\"FakturTerpilih\", noFaktur);\r\n  if (hasil === -1) {\r\n    var array = {\r\n      tanggal: tanggal,\r\n      noBon: noBon,\r\n      supplier: supplier,\r\n      bruto: bruto,\r\n      netto: netto,\r\n      bonRp: bonRp,\r\n      titipRp: titipRp,\r\n      titipGr: titipGr,\r\n      keterangan: keterangan,\r\n      noFaktur: noFaktur,\r\n      footerDocument: {\r\n        editBy: \"Nagatech\",\r\n        statusValid: \"VALID\",\r\n      },\r\n    };\r\n    tampung.push(array);\r\n    localStorage.setItem(\"FakturTerpilih\", JSON.stringify(tampung));\r\n    console.log(\"BERHASIL TAMBAHKAN : \" + noFaktur);\r\n    berhasil(\"Berhasil Ditambahkan\");\r\n  } else {\r\n    Swal.fire({\r\n      position: \"top-right\",\r\n      icon: \"warning\",\r\n      text: \"Faktur Sudah Terpilih\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n  }\r\n};\r\nexport const addCloseFaktur = (\r\n  noFaktur,\r\n  tanggal,\r\n  noBon,\r\n  supplier,\r\n  bruto,\r\n  netto,\r\n  bonRp,\r\n  titipRp,\r\n  titipGr,\r\n  keterangan,\r\n  e\r\n) => {\r\n  var tampung =\r\n    JSON.parse(localStorage.getItem(\"closeTransaksiPenjualan\")) || [];\r\n  var hasil = checkReplikasiValidasi(\"closeTransaksiPenjualan\", noFaktur);\r\n  console.log(hasil, noFaktur);\r\n  if (hasil === -1) {\r\n    var array = {\r\n      tanggal: tanggal,\r\n      noBon: noBon,\r\n      supplier: supplier,\r\n      bruto: bruto,\r\n      netto: netto,\r\n      bonRp: bonRp,\r\n      titipRp: titipRp,\r\n      titipGr: titipGr,\r\n      keterangan: keterangan,\r\n      noFaktur: noFaktur,\r\n      footerDocument: {\r\n        editBy: \"Nagatech\",\r\n        statusValid: \"CANCEL\",\r\n      },\r\n    };\r\n    tampung.push(array);\r\n    localStorage.setItem(\"closeTransaksiPenjualan\", JSON.stringify(tampung));\r\n    console.log(\"BERHASIL TAMBAHKAN : \" + noFaktur);\r\n    berhasil(\"Berhasil Ditambahkan\");\r\n  } else {\r\n    Swal.fire({\r\n      position: \"top-right\",\r\n      icon: \"warning\",\r\n      text: \"Faktur Sudah Terpilih\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addRekapBon = (noFaktur, tanggal, bruto, netto, rp, namaAktor) => {\r\n  var tampung = JSON.parse(localStorage.getItem(\"FakturRekapBon\")) || [];\r\n  var hasil = checkReplikasiValidasi(\"FakturRekapBon\", noFaktur);\r\n  if (hasil < 1) {\r\n    var hasilAktor = checkRekapBon(\"FakturRekapBon\", namaAktor);\r\n    if (hasilAktor < 1) {\r\n      var array = {\r\n        tanggal: tanggal,\r\n        noFakturPilih: noFaktur,\r\n        namaAktor: namaAktor,\r\n        bruto: bruto,\r\n        netto: netto,\r\n        rp: rp,\r\n      };\r\n      tampung.push(array);\r\n      localStorage.setItem(\"FakturRekapBon\", JSON.stringify(tampung));\r\n      console.log(\"BERHASIL TAMBAHKAN : \" + noFaktur);\r\n      berhasil(\"Berhasil Ditambahkan\");\r\n    } else {\r\n      Swal.fire({\r\n        position: \"top-right\",\r\n        icon: \"warning\",\r\n        text: \"Nama Customer Berbeda\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n    }\r\n  } else {\r\n    Swal.fire({\r\n      position: \"top-right\",\r\n      icon: \"warning\",\r\n      text: \"Faktur Sudah Terpilih\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteFaktur = (noFaktur) => {\r\n  var tampung = JSON.parse(localStorage.getItem(\"FakturTerpilih\")) || [];\r\n  var hasil = checkReplikasiValidasi(\"FakturTerpilih\", noFaktur);\r\n  tampung.splice(hasil, 1);\r\n  localStorage.setItem(\"FakturTerpilih\", JSON.stringify(tampung));\r\n  berhasil(\"berhasil dihapus\");\r\n  console.log(\"HASIL TERBARU\", JSON.stringify(tampung));\r\n};\r\n"],"sourceRoot":""}