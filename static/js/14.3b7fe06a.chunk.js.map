{"version":3,"sources":["Totalan/Element/FormModalValidasiStok.jsx"],"names":["renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","maxLength","FormModalValidasiStok","props","state","this","setData","getTimbanganValidasi","change","bruto","noFaktur","data","sisaHutang","onSubmit","handleSubmit","name","component","value","onBlur","onChange","setSisa","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","jumlah","parseFloat","toFixed"],"mappings":"4MAKMA,EAAc,SAAC,GAAD,IAClBC,EADkB,EAClBA,MACAC,EAFkB,EAElBA,MACAC,EAHkB,EAGlBA,KACAC,EAJkB,EAIlBA,MACAC,EALkB,EAKlBA,SALkB,IAMlBC,KAAQC,EANU,EAMVA,QAASC,EANC,EAMDA,MAAOC,EANN,EAMMA,QANN,OAQlB,yBAAKC,UAAU,cACb,2BAAOC,QAAQ,GAAGD,UAAU,cACzBR,GAEH,2CACMD,EADN,CAEEE,KAAMA,EACNO,UAAU,eACVE,UAAWR,EACXC,SAAUA,KAEXE,IACGC,GAAS,uBAAGE,UAAU,oBAAoBF,IACzCC,GAAW,2BAAIA,MAGlBI,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAKnB,WACEC,KAAKC,UACLC,YAAqBF,KAAKF,MAAMK,U,qBAElC,WACEH,KAAKF,MAAMK,OAAO,QAASH,KAAKF,MAAMM,OACtCJ,KAAKF,MAAMK,OAAO,WAAYH,KAAKF,MAAMO,Y,qBAE3C,SAAQC,GACNN,KAAKF,MAAMK,OAAO,OAAQH,KAAKF,MAAMS,c,oBAEvC,WACE,OACE,0BAAMC,SAAUR,KAAKF,MAAMW,cACzB,yBAAKf,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACEgB,KAAK,QACLxB,MAAM,aACNC,KAAK,OACLwB,UAAW3B,EACX4B,MAAM,MACNvB,UAAU,EACVwB,OAAQb,KAAKC,aAGjB,yBAAKP,UAAU,mBACb,kBAAC,IAAD,CACEgB,KAAK,WACLxB,MAAM,aACNC,KAAK,OACLwB,UAAW3B,EACX4B,MAAM,MACNvB,UAAU,KAGd,yBAAKK,UAAU,YACb,kBAAC,IAAD,CACEgB,KAAK,SACLxB,MAAM,oBACNC,KAAK,OACLwB,UAAW3B,EACX8B,SAAUd,KAAKe,aAGnB,yBAAKrB,UAAU,YACb,kBAAC,IAAD,CACEgB,KAAK,OACLxB,MAAM,mBACNC,KAAK,OACLwB,UAAW3B,KAGf,yBAAKU,UAAU,aACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAAkBP,KAAK,UAAzC,mB,GA9DoB6B,aA0EpCnB,EAAwBoB,YAAU,CAChCC,KAAM,wBACNC,oBAAoB,GAFEF,CAGrBpB,GACH,IAAMuB,EAAWC,YAAkB,yBACpBC,uBAAQ,SAACvB,GACtB,MAA0BqB,EAASrB,EAAO,SAAU,SAA5CwB,EAAR,EAAQA,OAAQnB,EAAhB,EAAgBA,MAChB,MAAO,CACLG,YAAaiB,WAAWpB,GAAS,GAAKoB,WAAWD,GAAU,IAAIE,QAAQ,MAH5DH,CAKZzB","file":"static/js/14.3b7fe06a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { getTimbanganValidasi } from \"../../GetTimbangan\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nclass FormModalValidasiStok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setData();\r\n    getTimbanganValidasi(this.props.change);\r\n  }\r\n  setData() {\r\n    this.props.change(\"bruto\", this.props.bruto);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n  }\r\n  setSisa(data) {\r\n    this.props.change(\"sisa\", this.props.sisaHutang);\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4\">\r\n              <Field\r\n                name=\"bruto\"\r\n                label=\"Bruto (Gr)\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                value=\"100\"\r\n                readOnly={true}\r\n                onBlur={this.setData()}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 d-none\">\r\n              <Field\r\n                name=\"noFaktur\"\r\n                label=\"Netto (Gr)\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                value=\"100\"\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <Field\r\n                name=\"jumlah\"\r\n                label=\"Jumlah Bayar (Gr)\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                onChange={this.setSisa()}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <Field\r\n                name=\"sisa\"\r\n                label=\"Sisa Hutang (Gr)\"\r\n                type=\"text\"\r\n                component={renderField}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"text-right\">\r\n                <button className=\"btn btn-primary\" type=\"submit\">\r\n                  Simpan\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormModalValidasiStok = reduxForm({\r\n  form: \"FormModalValidasiStok\",\r\n  enableReinitialize: true,\r\n})(FormModalValidasiStok);\r\nconst selector = formValueSelector(\"FormModalValidasiStok\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { jumlah, bruto } = selector(state, \"jumlah\", \"bruto\");\r\n  return {\r\n    sisaHutang: (parseFloat(bruto || 0) - parseFloat(jumlah || 0)).toFixed(3),\r\n  };\r\n})(FormModalValidasiStok);\r\n"],"sourceRoot":""}