{"version":3,"sources":["Validations/validationKirimMasak.js","Stocking/Component/FormKirimMasakBarang.jsx"],"names":["validationKirimMasak","values","errors","kodeBarang","kadarTransaksi","bruto","netto","renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","FormKirimMasakBarang","props","handleChange","e","result_explode","target","value","split","setState","kodeJenis","kadarCetak","kadarBeli","namaJenis","state","listBarang","this","change","Axios","get","server","then","res","data","catch","err","console","log","getTimbangan","onSubmit","handleSubmit","Field","name","component","onChange","onBlur","setKadar","key","map","list","setNetto","onClick","submit","Component","reduxForm","form","enableReinitialize","validate","selector","formValueSelector","connect","parseFloat","toFixed"],"mappings":"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","file":"static/js/104.eb0b7534.chunk.js","sourcesContent":["const validationKirimMasak = (values) => {\r\n  const errors = {};\r\n  if (!values.kodeBarang) {\r\n    errors.kodeBarang = \"Tidak Boleh Kosong\";\r\n  }\r\n  if (!values.kadarTransaksi) {\r\n    errors.kadarTransaksi = \"Tidak Boleh Kosong\";\r\n  }\r\n  if (!values.bruto) {\r\n    errors.bruto = \"Tidak Boleh Kosong\";\r\n  }\r\n  if (!values.netto) {\r\n    errors.netto = \"Tidak Boleh Kosong\";\r\n  }\r\n};\r\n\r\nexport default validationKirimMasak;\r\n","import React, { Component } from \"react\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport validationKirimMasak from \"../../Validations/validationKirimMasak\";\r\nimport { getTimbangan } from \"../../GetTimbangan\";\r\n\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nclass FormKirimMasakBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listBarang: [],\r\n    };\r\n  }\r\n\r\n  handleChange = (input) => (e) => {\r\n    var supp = e.target.value\r\n      ? e.target.value\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      kadarCetak: result_explode[1],\r\n      kadarBeli: result_explode[2],\r\n      namaJenis: result_explode[3],\r\n    });\r\n  };\r\n\r\n  setKadar() {\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarBeli);\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n  }\r\n  setNetto() {\r\n    this.props.change(\r\n      \"netto\",\r\n      this.props.netto === \"NaN\" ? 0 : this.props.netto\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(server + \"subcategorys2?kodeKelompok=PERHIASAN\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listBarang: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    getTimbangan(this.props.change);\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <label htmlFor=\"\">Kode Model</label>\r\n            <Field\r\n              name=\"kodeBarang\"\r\n              component=\"select\"\r\n              className=\"form-control\"\r\n              onChange={this.handleChange()}\r\n              onBlur={this.setKadar()}\r\n            >\r\n              <option value=\"DEFAULT|DEFAULT|DEFAULT\" key=\"DEFAULT\">\r\n                SILAHKAN PILIH\r\n              </option>\r\n              {this.state.listBarang.map((list) => (\r\n                <option\r\n                  value={\r\n                    list.kodeJenis +\r\n                    \"|\" +\r\n                    list.kadarCetak +\r\n                    \"|\" +\r\n                    list.kadarBeli +\r\n                    \"|\" +\r\n                    list.namaJenis\r\n                  }\r\n                  key={list.kodeJenis}\r\n                >\r\n                  {list.namaJenis}\r\n                </option>\r\n              ))}\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"kadarTransaksi\"\r\n              label=\"Kode Tukar\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              onBlur={this.setNetto()}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Bruto (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              onBlur={this.setNetto()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Netto (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              onBlur={this.setNetto()}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary mb-3 mt-3\"\r\n                onClick={this.submit}\r\n              >\r\n                Tambah data\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormKirimMasakBarang = reduxForm({\r\n  form: \"FormKirimMasakBarang\",\r\n  enableReinitialize: true,\r\n  validate: validationKirimMasak,\r\n})(FormKirimMasakBarang);\r\nconst selector = formValueSelector(\"FormKirimMasakBarang\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi } = selector(state, \"bruto\", \"kadarTransaksi\");\r\n  return {\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n  };\r\n})(FormKirimMasakBarang);\r\n"],"sourceRoot":""}