{"version":3,"sources":["Dashboard.jsx"],"names":["Dashboard","props","validasi","data","hasil","detail_trx","no_trx","AxiosMasterPost","then","berhasil","dispatch","getValidateOutstand","localStorage","removeItem","catch","err","gagal","response","validasiReturn","getKirimReturnPusat","handleCheck","clearTimeout","timer","setTimeout","alert","handleBarcode","setState","prevState","checked","state","columnsSaldo","dataField","text","headerStyle","width","align","headerAlign","formatter","formatGram","columns","formatRp","csvExport","rowContent","row","className","data-tip","data-for","onClick","data-tut","id","type","effect","columnsReturn","prevProps","this","getSaldoBarang","getkategoriList","style","fontSize","outstandPengirimanBarang","outstandReturnBarang","saldoStockPusat","title","keyField","ValidasiOutstand","search","ListKirimStockPusat","input","htmlFor","options","kategoriList","map","obj","value","kode_kategori","name","nama_kategori","placeholder","onChange","sales","SaldoBarang","Component","connect","provinsi","kategori","ValidateOutstand"],"mappings":"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","file":"static/js/115.f0f023a9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport HeaderCard from \"./HeaderCard\";\r\nimport GlobalTabel from \"./GlobalComponent/GlobalTabel\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport {\r\n  getKirimReturnPusat,\r\n  getSaldoBarang,\r\n  getValidateOutstand,\r\n} from \"./actions/dashboardAction\";\r\nimport { getkategoriList } from \"./actions/kategoriAction\";\r\nimport { connect } from \"react-redux\";\r\nimport SelectSearch from \"react-select-search\";\r\nimport { AxiosMasterPost } from \"./Axios\";\r\nimport { berhasil, gagal } from \"./Alert\";\r\nimport { formatGram, formatRp } from \"./helper\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columnsSaldo: [\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Jenis\",\r\n          headerStyle: () => {\r\n            return { width: \"35%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"nama_jenis\",\r\n          text: \"Nama Jenis\",\r\n          headerStyle: () => {\r\n            return { width: \"20%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"total_bruto\",\r\n          text: \"Bruto (Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          formatter: (data) => formatGram(data),\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"total_netto\",\r\n          text: \"Netto (Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          formatter: (data) => formatGram(data, 3),\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n      ],\r\n      columns: [\r\n        {\r\n          dataField: \"no_bon\",\r\n          text: \"No Bon Jual\",\r\n          headerStyle: () => {\r\n            return { width: \"15%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"nama_toko\",\r\n          text: \"Nama Toko\",\r\n          headerStyle: () => {\r\n            return { width: \"20%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"level_customer\",\r\n          text: \"Level Customer\",\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"total_bruto\",\r\n          text: \"Total Bruto (Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          formatter: (data) => formatGram(data),\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"total_netto\",\r\n          text: \"Total Netto (Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          formatter: (data) => formatGram(data, 3),\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"total_aksesoris\",\r\n          text: \"Total Aksesoris\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          formatter: (data) => formatRp(data),\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"nama_sales\",\r\n          text: \"Sales\",\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"link\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center row-justify-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-success mt-1\"\r\n                  onClick={() => this.validasi(row)}\r\n                  data-tut=\"reactour_3\"\r\n                >\r\n                  <i className=\"fa fa-check mr-1\"></i>\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Validasi</span>\r\n                  </ReactTooltip>\r\n                  Validasi\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      columnsReturn: [\r\n        {\r\n          dataField: \"no_bon\",\r\n          text: \"No Bon Return\",\r\n          headerStyle: () => {\r\n            return { width: \"15%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"nama_toko\",\r\n          text: \"Nama Toko\",\r\n          headerStyle: () => {\r\n            return { width: \"20%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"total_bruto\",\r\n          text: \"Total Bruto (Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          formatter: (data) => formatGram(data),\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"total_netto\",\r\n          text: \"Total Netto (Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          formatter: (data) => formatGram(data, 3),\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"total_aksesoris\",\r\n          text: \"Total Aksesoris\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          formatter: (data) => formatRp(data) ?? \"0\",\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        // {\r\n        //   dataField: \"nama_sales\",\r\n        //   text: \"Sales\",\r\n        //   headerStyle: () => {\r\n        //     return { width: \"10%\" };\r\n        //   },\r\n        // },\r\n        {\r\n          dataField: \"link\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center row-justify-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-success mt-1\"\r\n                  onClick={() => this.validasiReturn(row)}\r\n                  data-tut=\"reactour_3\"\r\n                >\r\n                  <i className=\"fa fa-check mr-1\"></i>\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Validasi</span>\r\n                  </ReactTooltip>\r\n                  Validasi\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.timer = null;\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.text !== this.state.text) {\r\n      this.handleCheck();\r\n    }\r\n  }\r\n\r\n  validasi = (data) => {\r\n    let hasil = {\r\n      detail_trx: [\r\n        {\r\n          no_trx: data.no_trx,\r\n        },\r\n      ],\r\n    };\r\n    AxiosMasterPost(\"validate-customer/post/outstand-pengiriman\", hasil)\r\n      .then(() => berhasil(\"Berhasil Validasi\"))\r\n      .then(() => this.props.dispatch(getValidateOutstand()))\r\n      .then(() => localStorage.removeItem(\"FakturTerpilih\"))\r\n      .then(() => localStorage.removeItem(\"FakturTerpilih_kirim\"))\r\n      .catch((err) =>\r\n        gagal(\r\n          `Gagal Validasi, Check Koneksi Anda, Detial : ${err.response.data}`\r\n        )\r\n      );\r\n  };\r\n  validasiReturn = (data) => {\r\n    let hasil = {\r\n      detail_trx: [\r\n        {\r\n          no_trx: data.no_trx,\r\n        },\r\n      ],\r\n    };\r\n    AxiosMasterPost(\"trx-customer/retur-customer/post/outstand-kirim\", hasil)\r\n      .then(() => berhasil(\"Berhasil Kirim Stock\"))\r\n      .then(() => this.props.dispatch(getKirimReturnPusat()))\r\n      .then(() => localStorage.removeItem(\"FakturTerpilih\"))\r\n      .then(() => localStorage.removeItem(\"FakturTerpilih_kirim\"))\r\n      .catch((err) =>\r\n        gagal(\r\n          `Gagal Kirim Stock, Check Koneksi Anda, Detial : ${err.response.data}`\r\n        )\r\n      );\r\n  };\r\n\r\n  handleCheck = () => {\r\n    // Clears running timer and starts a new one each time the user types\r\n    clearTimeout(this.timer);\r\n    this.timer = setTimeout(() => {\r\n      alert(\"BERHASIL\");\r\n    }, 1000);\r\n  };\r\n\r\n  handleBarcode = () => {\r\n    this.setState((prevState) => ({ checked: !prevState.checked }));\r\n  };\r\n  componentDidMount() {\r\n    this.props.dispatch(getSaldoBarang(\"ALL\"));\r\n    this.props.dispatch(getValidateOutstand());\r\n    this.props.dispatch(getKirimReturnPusat());\r\n    this.props.dispatch(getkategoriList());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"container-fluid\"\r\n        style={{ width: \"100%\", fontSize: \"18px\" }}\r\n      >\r\n        {this.outstandPengirimanBarang()}\r\n        {this.outstandReturnBarang()}\r\n        {this.saldoStockPusat()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  outstandPengirimanBarang() {\r\n    return (\r\n      <div className=\"col-lg-12\">\r\n        <div className=\"card\">\r\n          <HeaderCard title=\"Outstand Pengiriman Barang\" />\r\n          <div className=\"card-body\">\r\n            <div className=\"col-lg-12\">\r\n              <GlobalTabel\r\n                keyField=\"id\"\r\n                data={this.props.ValidasiOutstand || []}\r\n                columns={this.state.columns}\r\n                search\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  outstandReturnBarang() {\r\n    return (\r\n      <div className=\"col-lg-12\">\r\n        <div className=\"card\">\r\n          <HeaderCard title=\"Kirim Return Barang Ke Pusat\" />\r\n          <div className=\"card-body\">\r\n            <div className=\"col-lg-12\">\r\n              <GlobalTabel\r\n                keyField=\"id\"\r\n                data={this.props.ListKirimStockPusat || []}\r\n                columns={this.state.columnsReturn}\r\n                search\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onSubmit(data, input) {\r\n    this.setState({\r\n      [input]: data,\r\n    });\r\n  }\r\n\r\n  saldoStockPusat() {\r\n    return (\r\n      <div className=\"col-lg-12\">\r\n        <div className=\"card\">\r\n          <HeaderCard title=\"Saldo Stock Pusat\" />\r\n          <div className=\"card-body\">\r\n            <div className=\"col-lg-4\">\r\n              <label htmlFor=\"\">Kode Kategori</label>\r\n              <SelectSearch\r\n                options={this.props.kategoriList.map((obj) => {\r\n                  var payload = {\r\n                    value: obj.kode_kategori,\r\n                    name: obj.nama_kategori,\r\n                  };\r\n                  return payload;\r\n                })}\r\n                search\r\n                placeholder=\"Silahkan Pilih\"\r\n                onChange={(data) => this.props.dispatch(getSaldoBarang(data))}\r\n                value={this.state.sales}\r\n              />\r\n              <br />\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <GlobalTabel\r\n                keyField=\"id\"\r\n                data={this.props.SaldoBarang || []}\r\n                columns={this.state.columnsSaldo}\r\n                search\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state) => {\r\n  return {\r\n    kategoriList: state.provinsi.kategori,\r\n    SaldoBarang: state.provinsi.SaldoBarang,\r\n    ValidasiOutstand: state.provinsi.ValidateOutstand,\r\n    ListKirimStockPusat: state.provinsi.ListKirimStockPusat,\r\n  };\r\n})(Dashboard);\r\n"],"sourceRoot":""}