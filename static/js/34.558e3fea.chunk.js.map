{"version":3,"sources":["DataMaster/Component/FormProvinsiEdit.jsx","DataMaster/Provinsi.jsx","Validations/validationProvinsi.js","DataMaster/Component/AreaProvinsiKota.jsx"],"names":["FormProvinsiEdit","props","state","response","status","kodenya","this","kode","namanya","nama","onSubmit","handleSubmit","className","Field","name","replace","type","normalize","value","toUpperCase","component","renderField","readOnly","label","id","disabled","onSend","aria-hidden","Component","reduxForm","form","validate","validationProvinsi","enableReinitialize","connect","initialValues","NamaProvinsi","provinsi","editProvinsi","namaProvinsi","KodeProvinsi","kodeProvinsi","statusAktif","defaultSorted","dataField","order","Provinsi","updateStatus","input","console","log","setState","dispatch","getProvinsiLIst","edit","e","target","openTour","isTourOpen","closeTour","provinsi_array","columns","text","sort","headerStyle","width","csvExport","formatter","rowContent","row","data","nama_provinsi","kode_provinsi","onClick","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","AxiosMasterDelete","res","berhasil","catch","err","gagal","data-tut","data-toggle","data-target","editModal","showModal","hasil","progressSend","AxiosMasterPost","finishSend","hideModal","reset","handleReactive","AxiosMasterPut","LogData","includes","reactive","isEdit","editProvinsiList","style","color","alert","role","data-dismiss","aria-label","TourGuide","tourConfig","ModalMasterData","content","from","handleEdit","AreaProvinsiKota","isiNama","isikode","HeaderCard","tambahModal","provinsiList","Table","namaKey","error","src","notrespond","alt","height","values","errors","length","KodeKota","NamaKota","KodeArea","kodeKota","NamaArea","KodeLokasi","NamaLokasi","listProvinsi","listKota","AxiosMasterGet","limit","String","renderFieldSelect","kode_ext","options","map","obj","kode_kota","nama_kota","placeholder","class","config","Error"],"mappings":"kRAeMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,GACVC,OAAQ,SAJO,E,0CAQnB,WACE,IAAIC,EAAUC,KAAKL,MAAMM,KACrBC,EAAUF,KAAKL,MAAMQ,KACzB,OACE,6BACE,0BAAMC,SAAUJ,KAAKL,MAAMU,cACzB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,YACb,kBAACC,EAAA,EAAD,CACEC,KAAMT,EAAQU,QAAQ,MAAO,IAC7BC,KAAK,OACLC,UAAW,SAACC,GAAD,OAAWA,GAASA,EAAMC,eACrCC,UAAWC,IACXC,UAAU,EACVC,MAAOjB,KAAKL,MAAMM,QAGtB,yBAAKK,UAAU,YACb,kBAACC,EAAA,EAAD,CACEC,KAAMN,EAAQO,QAAQ,MAAO,IAC7BC,KAAK,OACLC,UAAW,SAACC,GAAD,OAAWA,GAASA,EAAMC,eACrCC,UAAWC,IACXE,MAAOjB,KAAKL,MAAMQ,QAGtB,yBAAKG,UAAU,uBACb,yBAAKA,UAAU,cACb,4BACEI,KAAK,SACLQ,GAAG,SACHZ,UAAU,kBACVa,SAAUnB,KAAKL,MAAMyB,QAEpBpB,KAAKL,MAAMyB,OACV,0BACEd,UAAU,wCACVe,cAAY,SAEZ,KAXN,oB,GArCeC,aA4D/B5B,EAAmB6B,YAAU,CAC3BC,KAAM,eACNC,SAAUC,IACVC,oBAAoB,GAHHJ,CAIhB7B,GACYkC,mBA1EI,SAAChC,GAClB,MAAO,CACLiC,cAAe,CACbC,aAAclC,EAAMmC,SAASC,aAAaC,aAC1CC,aAActC,EAAMmC,SAASC,aAAaG,aAC1CrC,OAAQF,EAAMmC,SAASC,aAAaI,gBAqEP,KAApBR,CAA0BlC,G,kFC3CzC,IAUM2C,EAAgB,CACpB,CACEC,UAAW,eACXC,MAAO,QAILC,E,kDACJ,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IAgER8C,aAAe,SAACC,GACdC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACZhD,SAAU6C,IAEZ,EAAK/C,MAAMmD,SAASC,gBAtEH,EAyEnBC,KAAO,SAACN,GAAD,OAAW,SAACO,GACjB,EAAKJ,SAAL,eACGH,EAAQO,EAAEC,OAAOtC,UA3EH,EAoJnBuC,SAAW,WACT,EAAKN,SAAS,CAAEO,YAAY,KArJX,EAuJnBC,UAAY,WACV,EAAKR,SAAS,CAAEO,YAAY,KAtJ5B,EAAKxD,MAAQ,CACXmC,SAAU,GACVuB,eAAgB,GAChBzD,SAAU,GACVoC,aAAc,GACdE,aAAc,GACdoB,QAAS,CACP,CACEjB,UAAW,gBACXkB,KAAM,gBACNC,MAAM,EACNC,YAAa,WACX,MAAO,CAAEC,MAAO,SAGpB,CACErB,UAAW,gBACXkB,KAAM,gBACNC,MAAM,GAER,CACEnB,UAAW,OACXkB,KAAM,OACNI,WAAW,EACXC,UAAW,SAACC,EAAYC,GACtB,IAAIC,EAAO,CACT/B,aAAc8B,EAAIE,cAClB9B,aAAc4B,EAAIG,cAClB9B,YAAa2B,EAAI3B,aAEnB,OACE,yBAAK9B,UAAU,eACb,4BACEA,UAAU,sBACV6D,QAAS,kBAzEZrB,EAyEwB,EAAKnD,MAAMmD,SAzEzB7C,EAyEmC8D,EAAIG,mBAxE9DE,IAAKC,KAAK,CACRC,MAAO,eACPd,KAAM,iCACNe,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBC,MAAK,SAACC,GACHA,EAAOC,aACTC,YAAkB,mBAAqB9E,GACpC2E,MAAK,SAACI,GAAD,OAASC,YAAS,4BACvBL,MAAK,kBAAM9B,EAASC,kBACpBmC,OAAM,SAACC,GAAD,OAASC,YAAM,4BAd9B,IAAetC,EAAU7C,GA0EPoF,WAAS,cAET,uBAAG/E,UAAU,qBALf,SAQA,4BACEA,UAAU,uBACVgF,cAAY,QACZC,cAAY,aACZpB,QAAS,kBAAM,EAAKqB,UAAUxB,IAC9BqB,WAAS,cAET,uBAAG/E,UAAU,oBAPf,YAeVmF,WAAW,GAzDI,E,qDA6DnB,WACEzF,KAAKL,MAAMmD,SAASC,iB,0BAgBtB,SAAa2C,GAAQ,IAAD,OACd1B,EAAO,CACTC,cAAeyB,EAAM5D,aACrBoC,cAAewB,EAAMxD,cAEvBlC,KAAKL,MAAMmD,SAAS6C,eACpBC,YAAgB,eAAgB5B,GAC7BY,MAAK,kBAAM,EAAKjF,MAAMmD,SAAS+C,kBAC/BjB,MAAK,kBAAM,EAAKjF,MAAMmD,SAASgD,kBAC/BlB,MAAK,SAACI,GAAD,OAASC,YAAS,6BACvBL,MAAK,kBAAM,EAAKjF,MAAMmD,SAASC,kBAC/B6B,MAAK,kBAAM,EAAKjF,MAAMmD,SAASiD,YAAM,gBACrCb,OAAM,SAACC,GAAD,OACL,EAAKa,eAAeb,EAAKO,EAAMxD,aAAc,CAC3C+B,cAAeyB,EAAM5D,oB,wBAI7B,SAAW4D,GAAQ,IAAD,OACZ1B,EAAO,CACT5B,YAAasD,EAAM5F,OAAS4F,EAAM5F,OAAS,QAC3CmE,cAAeyB,EAAM5D,aACrBoC,cAAewB,EAAMxD,cAEvBlC,KAAKL,MAAMmD,SAAS6C,eACpBM,YAAe,iBAAmBP,EAAMxD,aAAc,CACpD+B,cAAeyB,EAAM5D,eAEpB8C,MAAK,kBAAM,EAAKjF,MAAMmD,SAAS+C,kBAC/BjB,MAAK,kBAAM,EAAKjF,MAAMmD,SAASgD,kBAC/BlB,MAAK,SAACI,GAAD,OACJC,YAAS,8BAA8BL,MAAK,kBAC1C,EAAKjF,MAAMmD,SAASC,qBAGvBmC,OAAM,SAACC,GAAD,OACLC,YAAM,0BAA0BR,MAAK,kBACnCsB,YAAQ,2BAA4BlC,EAAMmB,W,4BAKlD,SAAeA,EAAKlF,EAAM+D,GAAO,IAAD,OAC9BhE,KAAKL,MAAMmD,SAASgD,eACRX,EAAItF,SAASmE,KACPmC,SAAS,WAEvBC,YACEjB,EACAlF,EACA,qBACA+D,EACA,kBACAY,MAAK,kBAAM,EAAKjF,MAAMmD,SAASC,kBACjCqC,YAAM,4B,yBAGZ,WACEpF,KAAKL,MAAMmD,SAAS2C,eACpBzF,KAAK6C,SAAS,CACZwD,QAAQ,M,uBAGZ,SAAUrC,GACRhE,KAAKL,MAAMmD,SAAS2C,eACpBzF,KAAKL,MAAMmD,SAASwD,YAAiBtC,IACrChE,KAAK6C,SAAS,CACZwD,QAAQ,M,oBAUZ,WAAU,IAAD,OACP,OACE,yBAAK/F,UAAU,kBAAkBiG,MAAO,CAAEC,MAAO,UAC/C,yBAAKtF,GAAG,cAAcZ,UAAWN,KAAKL,MAAM8G,MAAOC,KAAK,SACtD,4BACEhG,KAAK,SACLJ,UAAU,QACVqG,eAAa,QACbC,aAAW,SAEX,0BAAMvF,cAAY,QAAlB,SAEF,4CATF,8BAWA,kBAACwF,EAAA,EAAD,CACEC,WAAY,CAAC,kFAAD,oLAOd,kBAACC,EAAA,QAAD,CACEC,QACEhH,KAAKJ,MAAMyG,OACT,kBAAC,EAAD,CACElG,KAAK,gBACLF,KAAK,gBACLgH,KAAK,WACLjE,KAAMhD,KAAKgD,KACXP,aAAczC,KAAKyC,aACnBrC,SAAU,SAAC4D,GAAD,OAAU,EAAKkD,WAAWlD,IACpC5C,OAAQpB,KAAKL,MAAMyB,SAGrB,kBAAC+F,EAAA,EAAD,CACEhH,KAAK,gBACLiH,QAASpH,KAAKJ,MAAMqC,aACpBhC,KAAK,gBACLoH,QAASrH,KAAKJ,MAAMuC,aACpBrC,OAAQE,KAAKJ,MAAME,OACnBmH,KAAK,WACLjE,KAAMhD,KAAKgD,KACXP,aAAczC,KAAKyC,aACnBrC,SAAU,SAAC4D,GAAD,OAAU,EAAK3D,aAAa2D,IACtCyB,UAAWzF,KAAKJ,MAAM6F,UACtBrE,OAAQpB,KAAKL,MAAMyB,SAIzBkD,MACEtE,KAAKJ,MAAMyG,OAAS,qBAAuB,yBAG/C,yBAAK/F,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,kBAACgH,EAAA,QAAD,CAAYhD,MAAM,kBAClB,yBAAKhE,UAAU,aACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,cACb,4BACEE,KAAK,SACLU,GAAG,SACHZ,UAAU,eACV6D,QAAS,kBAAM,EAAKoD,eACpBlC,WAAS,cALX,0BAWJ,yBAAK/E,UAAU,2BAA2B+E,WAAS,cAChDrF,KAAKL,MAAM6H,aACV,kBAACC,EAAA,EAAD,CACElE,QAASvD,KAAKJ,MAAM2D,QACpBS,KAAMhE,KAAKL,MAAM6H,aACjBnF,cAAeA,EACfqF,QAAQ,iBAGV,6BACG1H,KAAKL,MAAMgI,MACV,yBAAKrH,UAAU,eACb,yBACEsH,IAAKC,IACLtB,MAAO,CAAE5C,MAAO,OAChBmE,IAAI,gBAEN,6BACA,oEAGF,kBAAC,IAAD,CAAUnE,MAAO,OAAQoE,OAAQ,iB,GAzPlCzG,aAuQRM,uBAxRI,SAAChC,GAClB,MAAO,CACL4H,aAAc5H,EAAMmC,SAASA,SAC7B0E,MAAO7G,EAAMmC,SAAS0E,MACtBkB,MAAO/H,EAAMmC,SAAS4F,MACtB7H,OAAQF,EAAMmC,SAASjC,OACvBsB,OAAQxB,EAAMmC,SAASX,UAkRQ,KAApBQ,CAA0BY,I,iCC7TzC,kCAAO,IAAMd,EAAqB,SAACsG,GACjC,IAAMC,EAAS,GAiDf,OA/CKD,EAAO9F,aAED8F,EAAO9F,aAAagG,OAAS,IACtCD,EAAO/F,aAAe,qCAFtB+F,EAAO/F,aAAe,qBAInB8F,EAAOlG,eACVmG,EAAOnG,aAAe,sBAGnBkG,EAAOG,SAEDH,EAAOG,SAASD,OAAS,IAClCD,EAAOE,SAAW,qCAFlBF,EAAOE,SAAW,qBAIhBH,EAAO7F,aAEuB,YAAxB6F,EAAO7F,eACf8F,EAAO9F,aAAe,2BAFtB8F,EAAO9F,aAAe,qBAIpB6F,EAAOI,WACTH,EAAOG,SAAW,sBAGfJ,EAAOK,SAEDL,EAAOK,SAASH,OAAS,IAClCD,EAAOI,SAAW,qCAFlBJ,EAAOI,SAAW,qBAIhBL,EAAOM,SAEmB,YAApBN,EAAOM,WACfL,EAAOK,SAAW,2BAFlBL,EAAOK,SAAW,qBAIhBN,EAAOO,WACTN,EAAOM,SAAW,sBAIfP,EAAOQ,WAEDR,EAAOQ,WAAWN,OAAS,IACpCD,EAAOO,WAAa,qCAFpBP,EAAOO,WAAa,qBAIlBR,EAAOS,aACTR,EAAOQ,WAAa,sBAGfR,I,sJCjCHd,E,kDACJ,WAAYxH,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,GACVC,OAAQ,QACR4I,aAAc,GACdC,SAAU,GACVvB,QAAS,GACTC,QAAS,IARM,E,qDAYnB,WAAqB,IAAD,OAClBuB,YAAe,oBACZhE,MAAK,SAACI,GAAD,OACJ,EAAKnC,SAAS,CACZ6F,aAAc1D,EAAIhB,UAGrBkB,OAAM,SAACC,GAAD,OAASxC,QAAQC,IAAIuC,MAC9ByD,YAAe,gBACZhE,MAAK,SAACI,GAAD,OACJ,EAAKnC,SAAS,CACZ8F,SAAU3D,EAAIhB,UAGjBkB,OAAM,SAACC,GAAD,OAASe,YAAQ,4B,oBAG5B,WACE,IAAInG,EAAUC,KAAKL,MAAMM,KACrBC,EAAUF,KAAKL,MAAMQ,KACzB,OACE,6BACE,0BAAMC,SAAUJ,KAAKL,MAAMU,cACzB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACEE,KAAMT,EAAQU,QAAQ,MAAO,IAC7BC,KAAK,OACLC,UAAW,SAACC,GAAD,OAAWA,GAASA,EAAMC,eACrCC,UAAWC,IACX8H,MAAO,EACP5H,MAAOjB,KAAKL,MAAMM,QAGD,SAApBD,KAAKL,MAAMsH,KACV,yBAAK3G,UAAU,YACb,yBAAKA,UAAU,cACwB,KAApCwI,OAAO9I,KAAKJ,MAAM8I,cACjB,kBAAC,IAAD,CACE5H,UAAWiI,IACX9H,MAAOjB,KAAKL,MAAMqJ,SAClBxI,KAAK,eACLI,MAAOZ,KAAKL,MAAMG,OAClBa,UAAW,SAACC,GAAD,OAAWA,GAASA,EAAMC,eACrCP,UAAU,eACV2I,QAASjJ,KAAKJ,MAAM8I,aAAaQ,KAAI,SAACC,GAKpC,MAJc,CACZvI,MAAOuI,EAAIjF,cACX1D,KAAM2I,EAAIlF,oBAMhB,kBAAC,IAAD,CAAiBhD,MAAOjB,KAAKL,MAAMqJ,aAIvC,KAEiB,SAApBhJ,KAAKL,MAAMsH,KACV,yBAAK3G,UAAU,YACb,yBAAKA,UAAU,cACoB,KAAhCwI,OAAO9I,KAAKJ,MAAM+I,UACjB,kBAAC,IAAD,CACE7H,UAAWiI,IACX9H,MAAOjB,KAAKL,MAAMqJ,SAClBxI,KACsB,SAApBR,KAAKL,MAAMsH,KAAkB,eAAiB,WAEhDrG,MAAOZ,KAAKL,MAAMG,OAClBa,UAAW,SAACC,GAAD,OAAWA,GAASA,EAAMC,eACrCP,UAAU,eACV2I,QAASjJ,KAAKJ,MAAM+I,SAASO,KAAI,SAACC,GAKhC,MAJc,CACZvI,MAAOuI,EAAIC,UACX5I,KAAM2I,EAAIE,gBAMhB,kBAAC,IAAD,CAAiBpI,MAAOjB,KAAKL,MAAMqJ,aAIvC,KAEJ,yBAAK1I,UAAU,YACb,kBAAC,IAAD,CACEE,KAAMN,EAAQO,QAAQ,MAAO,IAC7BC,KAAK,OACLC,UAAW,SAACC,GAAD,OAAWA,GAASA,EAAMC,eACrCC,UAAWC,IACXE,MAAOjB,KAAKL,MAAMQ,QAGD,SAApBH,KAAKL,MAAMsH,KACV,yBAAK3G,UAAU,YACb,kBAAC,IAAD,CACEE,KAAK,UACLM,UAAWC,IACXL,KAAK,SACLO,MAAM,WACNqI,YAAY,sBAGd,KACJ,yBAAKhJ,UAAU,uBACb,yBAAKA,UAAU,cACb,4BACEI,KAAK,SACLQ,GAAG,SACHZ,UAAU,kBACVa,SAAUnB,KAAKL,MAAMyB,QAEpBpB,KAAKL,MAAMyB,OACV,0BACEd,UAAU,wCACVe,cAAY,SAEZ,KAXN,UAaA,uBAAGkI,MAAM,yBAAyBlI,cAAY,mB,GAxI/BC,aAmJ/B6F,EAAmB5F,YAAU,CAC3BC,KAAM,WACNC,SAAUC,IACVC,oBAAoB,GAHHJ,CAIhB4F,GACYvF,iBAhKI,SAAChC,GAClB,MAAO,CACLiJ,MAAOjJ,EAAM4J,OAAOX,MACpBlB,MAAO/H,EAAM6G,MAAMgD,MACnBzH,aAAcpC,EAAMmC,SAASC,gBA4JE,KAApBJ,CAA0BuF","file":"static/js/34.558e3fea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validationProvinsi } from \"../../Validations/validationProvinsi\";\r\nimport { renderField } from \"../../renderField\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    initialValues: {\r\n      NamaProvinsi: state.provinsi.editProvinsi.namaProvinsi,\r\n      KodeProvinsi: state.provinsi.editProvinsi.kodeProvinsi,\r\n      status: state.provinsi.editProvinsi.statusAktif,\r\n    },\r\n  };\r\n};\r\nclass FormProvinsiEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      status: \"AKTIF\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    var kodenya = this.props.kode;\r\n    var namanya = this.props.nama;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <Field\r\n                name={kodenya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                readOnly={true}\r\n                label={this.props.kode}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <Field\r\n                name={namanya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label={this.props.nama}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  id=\"simpan\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Selesai\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormProvinsiEdit = reduxForm({\r\n  form: \"ProvinsiEdit\", // a unique identifier for this form\r\n  validate: validationProvinsi, // <--- validation function given to redux-form\r\n  enableReinitialize: true,\r\n})(FormProvinsiEdit);\r\nexport default connect(maptoState, null)(FormProvinsiEdit);\r\n","import React, { Component } from \"react\";\r\nimport notrespond from \"../Images/500.svg\";\r\nimport AreaProvinsiKota from \"./Component/AreaProvinsiKota\";\r\nimport Swal from \"sweetalert2\";\r\nimport Table from \"./Component/Table\";\r\nimport { connect } from \"react-redux\";\r\nimport { editProvinsiList, getProvinsiLIst } from \"../actions/provinsiAction\";\r\nimport FormProvinsiEdit from \"./Component/FormProvinsiEdit\";\r\nimport { reset } from \"redux-form\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { AxiosMasterDelete, AxiosMasterPost, AxiosMasterPut } from \"../Axios\";\r\nimport { berhasil, gagal, LogData, reactive } from \"../Alert\";\r\nimport ModalMasterData from \"./Component/ModalMasterData\";\r\nimport { hideModal, showModal } from \"../actions/ModalAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport TourGuide from \"../TourGuide\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\n\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      AxiosMasterDelete(\"provinsi/delete/\" + kode)\r\n        .then((res) => berhasil(\"Data Berhasil Dihapus\"))\r\n        .then(() => dispatch(getProvinsiLIst()))\r\n        .catch((err) => gagal(\"Data Gagal Dihapus\"));\r\n    }\r\n  });\r\n}\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    provinsiList: state.provinsi.provinsi,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    status: state.provinsi.status,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\n\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"kodeProvinsi\",\r\n    order: \"asc\",\r\n  },\r\n];\r\n\r\nclass Provinsi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      provinsi: [],\r\n      provinsi_array: [],\r\n      response: \"\",\r\n      namaProvinsi: \"\",\r\n      kodeProvinsi: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"kode_provinsi\",\r\n          text: \"Kode Provinsi\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"15%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"nama_provinsi\",\r\n          text: \"Nama Provinsi\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            let data = {\r\n              namaProvinsi: row.nama_provinsi,\r\n              kodeProvinsi: row.kode_provinsi,\r\n              statusAktif: row.statusAktif,\r\n            };\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() => hapus(this.props.dispatch, row.kode_provinsi)}\r\n                  data-tut=\"reactour_3\"\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() => this.editModal(data)}\r\n                  data-tut=\"reactour_4\"\r\n                >\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                  Edit\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      showModal: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getProvinsiLIst());\r\n  }\r\n\r\n  updateStatus = (input) => {\r\n    console.log(input);\r\n    this.setState({\r\n      response: input,\r\n    });\r\n    this.props.dispatch(getProvinsiLIst());\r\n  };\r\n\r\n  edit = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit(hasil) {\r\n    let data = {\r\n      nama_provinsi: hasil.NamaProvinsi,\r\n      kode_provinsi: hasil.KodeProvinsi,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPost(\"provinsi/add\", data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) => berhasil(\"Data Berhasil Disimpan\"))\r\n      .then(() => this.props.dispatch(getProvinsiLIst()))\r\n      .then(() => this.props.dispatch(reset(\"Provinsi\")))\r\n      .catch((err) =>\r\n        this.handleReactive(err, hasil.KodeProvinsi, {\r\n          nama_provinsi: hasil.NamaProvinsi,\r\n        })\r\n      );\r\n  }\r\n  handleEdit(hasil) {\r\n    let data = {\r\n      statusAktif: hasil.status ? hasil.status : \"AKTIF\",\r\n      nama_provinsi: hasil.NamaProvinsi,\r\n      kode_provinsi: hasil.KodeProvinsi,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPut(\"provinsi/edit/\" + hasil.KodeProvinsi, {\r\n      nama_provinsi: hasil.NamaProvinsi,\r\n    })\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Diperbaharui\").then(() =>\r\n          this.props.dispatch(getProvinsiLIst())\r\n        )\r\n      )\r\n      .catch((err) =>\r\n        gagal(\"Data Gagal Ditambahkan\").then(() =>\r\n          LogData(\"Gagal Edit Data Provinsi\", data, err)\r\n        )\r\n      );\r\n  }\r\n\r\n  handleReactive(err, kode, data) {\r\n    this.props.dispatch(hideModal());\r\n    let error = err.response.data;\r\n    let check = error.includes(\"deleted\");\r\n    check\r\n      ? reactive(\r\n          err,\r\n          kode,\r\n          \"provinsi/reactive/\",\r\n          data,\r\n          \"provinsi/edit/\"\r\n        ).then(() => this.props.dispatch(getProvinsiLIst()))\r\n      : gagal(\"Data Gagal Ditambahkan\");\r\n  }\r\n\r\n  tambahModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  editModal(data) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(editProvinsiList(data));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  openTour = () => {\r\n    this.setState({ isTourOpen: true });\r\n  };\r\n  closeTour = () => {\r\n    this.setState({ isTourOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div id=\"notif_alert\" className={this.props.alert} role=\"alert\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n          <strong>Error - </strong> Tidak Bisa Mengambil Data\r\n        </div>\r\n        <TourGuide\r\n          tourConfig={[\r\n            `Untuk Menambahkan Data Provinsi, Tekan Tombol ini Dan Isi kolom yang disediakan`,\r\n            `Ini adalah data provinsi yang sudah tersimpan`,\r\n            `Ini adalah tombol untuk menghapus data pada baris yang dipilih`,\r\n            `Ini adalah tombol untuk mengubah data pada baris yang dipilih`,\r\n          ]}\r\n        />\r\n        <ModalMasterData\r\n          content={\r\n            this.state.isEdit ? (\r\n              <FormProvinsiEdit\r\n                nama=\"Nama Provinsi\"\r\n                kode=\"Kode Provinsi\"\r\n                from=\"provinsi\"\r\n                edit={this.edit}\r\n                updateStatus={this.updateStatus}\r\n                onSubmit={(data) => this.handleEdit(data)}\r\n                onSend={this.props.onSend}\r\n              />\r\n            ) : (\r\n              <AreaProvinsiKota\r\n                nama=\"Nama Provinsi\"\r\n                isiNama={this.state.namaProvinsi}\r\n                kode=\"Kode Provinsi\"\r\n                isikode={this.state.kodeProvinsi}\r\n                status={this.state.status}\r\n                from=\"provinsi\"\r\n                edit={this.edit}\r\n                updateStatus={this.updateStatus}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n                showModal={this.state.showModal}\r\n                onSend={this.props.onSend}\r\n              />\r\n            )\r\n          }\r\n          title={\r\n            this.state.isEdit ? \"Edit Data Provinsi\" : \"Tambah Data Provinsi\"\r\n          }\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Data Provinsi\" />\r\n              <div className=\"card-body\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      name=\"simpan\"\r\n                      id=\"simpan\"\r\n                      className=\"btn btn-info\"\r\n                      onClick={() => this.tambahModal()}\r\n                      data-tut=\"reactour_1\"\r\n                    >\r\n                      Tambah Data Provinsi\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12 mt-5\" data-tut=\"reactour_2\">\r\n                  {this.props.provinsiList ? (\r\n                    <Table\r\n                      columns={this.state.columns}\r\n                      data={this.props.provinsiList}\r\n                      defaultSorted={defaultSorted}\r\n                      namaKey=\"kodeProvinsi\"\r\n                    />\r\n                  ) : (\r\n                    <div>\r\n                      {this.props.error ? (\r\n                        <div className=\"text-center\">\r\n                          <img\r\n                            src={notrespond}\r\n                            style={{ width: \"30%\" }}\r\n                            alt=\"NOT RESPOND\"\r\n                          />\r\n                          <br />\r\n                          <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton width={\"100%\"} height={180} />\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(Provinsi);\r\n","export const validationProvinsi = (values) => {\r\n  const errors = {}\r\n  // PROVINSI\r\n  if (!values.KodeProvinsi) {\r\n    errors.KodeProvinsi = 'Tidak Boleh kosong'\r\n  } else if (values.KodeProvinsi.length > 5) {\r\n    errors.KodeProvinsi = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if (!values.NamaProvinsi) {\r\n    errors.NamaProvinsi = 'Tidak Boleh kosong'\r\n  }\r\n  // Kota\r\n  if (!values.KodeKota) {\r\n    errors.KodeKota = 'Tidak Boleh kosong'\r\n  } else if (values.KodeKota.length > 5) {\r\n    errors.KodeKota = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if(!values.kodeProvinsi){\r\n    errors.kodeProvinsi = \"Tidak Boleh Kosong\"\r\n  } else if(values.kodeProvinsi === \"DEFAULT\"){\r\n    errors.kodeProvinsi = \"Silahkan Pilih Provinsi\"\r\n  }\r\n  if(!values.NamaKota){\r\n    errors.NamaKota = \"Tidak Boleh Kosong\"\r\n  }\r\n  // AREA\r\n  if (!values.KodeArea) {\r\n    errors.KodeArea = 'Tidak Boleh kosong'\r\n  } else if (values.KodeArea.length > 5) {\r\n    errors.KodeArea = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if(!values.kodeKota){\r\n    errors.kodeKota = \"Tidak Boleh Kosong\"\r\n  } else if(values.kodeKota === \"DEFAULT\"){\r\n    errors.kodeKota = \"Silahkan Pilih Provinsi\"\r\n  }\r\n  if(!values.NamaArea){\r\n    errors.NamaArea = \"Tidak Boleh Kosong\"\r\n  }\r\n\r\n  //LOKASI\r\n  if (!values.KodeLokasi) {\r\n    errors.KodeLokasi = 'Tidak Boleh kosong'\r\n  } else if (values.KodeLokasi.length > 5) {\r\n    errors.KodeLokasi = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if(!values.NamaLokasi){\r\n    errors.NamaLokasi = 'Tidak Boleh kosong'\r\n  }\r\n\r\n  return errors\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validationProvinsi } from \"../../Validations/validationProvinsi\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { LogData } from \"../../Alert\";\r\nimport { SkeletonLoading } from \"../../helper\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    limit: state.config.limit,\r\n    error: state.alert.Error,\r\n    editProvinsi: state.provinsi.editProvinsi,\r\n  };\r\n};\r\n\r\nclass AreaProvinsiKota extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      status: \"AKTIF\",\r\n      listProvinsi: [],\r\n      listKota: [],\r\n      isiNama: \"\",\r\n      isikode: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"provinsi/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listProvinsi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    AxiosMasterGet(\"kota/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKota: res.data,\r\n        })\r\n      )\r\n      .catch((err) => LogData(\"Error Get Data Kota\"));\r\n  }\r\n\r\n  render() {\r\n    var kodenya = this.props.kode;\r\n    var namanya = this.props.nama;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <Field\r\n                name={kodenya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                limit={5}\r\n                label={this.props.kode}\r\n              />\r\n            </div>\r\n            {this.props.from === \"kota\" ? (\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group\">\r\n                  {String(this.state.listProvinsi) !== \"\" ? (\r\n                    <Field\r\n                      component={renderFieldSelect}\r\n                      label={this.props.kode_ext}\r\n                      name=\"kodeProvinsi\"\r\n                      value={this.props.status}\r\n                      normalize={(value) => value && value.toUpperCase()}\r\n                      className=\"form-control\"\r\n                      options={this.state.listProvinsi.map((obj) => {\r\n                        var payload = {\r\n                          value: obj.kode_provinsi,\r\n                          name: obj.nama_provinsi,\r\n                        };\r\n                        return payload;\r\n                      })}\r\n                    ></Field>\r\n                  ) : (\r\n                    <SkeletonLoading label={this.props.kode_ext} />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {/* AREA */}\r\n            {this.props.from === \"area\" ? (\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group\">\r\n                  {String(this.state.listKota) !== \"\" ? (\r\n                    <Field\r\n                      component={renderFieldSelect}\r\n                      label={this.props.kode_ext}\r\n                      name={\r\n                        this.props.from === \"kota\" ? \"kodeProvinsi\" : \"kodeKota\"\r\n                      }\r\n                      value={this.props.status}\r\n                      normalize={(value) => value && value.toUpperCase()}\r\n                      className=\"form-control\"\r\n                      options={this.state.listKota.map((obj) => {\r\n                        var payload = {\r\n                          value: obj.kode_kota,\r\n                          name: obj.nama_kota,\r\n                        };\r\n                        return payload;\r\n                      })}\r\n                    ></Field>\r\n                  ) : (\r\n                    <SkeletonLoading label={this.props.kode_ext} />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {/* Lokasi */}\r\n            <div className=\"col-md-3\">\r\n              <Field\r\n                name={namanya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label={this.props.nama}\r\n              />\r\n            </div>\r\n            {this.props.from === \"area\" ? (\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kodePos\"\r\n                  component={renderField}\r\n                  type=\"number\"\r\n                  label=\"Kode Pos\"\r\n                  placeholder=\"Masukan Kode Pos\"\r\n                />\r\n              </div>\r\n            ) : null}\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  id=\"simpan\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Selesai\r\n                <i class=\"fa fa-paper-plane ml-3\" aria-hidden=\"true\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAreaProvinsiKota = reduxForm({\r\n  form: \"Provinsi\", // a unique identifier for this form\r\n  validate: validationProvinsi, // <--- validation function given to redux-form\r\n  enableReinitialize: true,\r\n})(AreaProvinsiKota);\r\nexport default connect(maptoState, null)(AreaProvinsiKota);\r\n"],"sourceRoot":""}