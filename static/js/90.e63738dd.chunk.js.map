{"version":3,"sources":["DataMaster/Component/FormSaldoAwalStok.jsx","DataMaster/SaldoAwalStok.jsx","Validations/validasiSaldoAwalPiutang.js"],"names":["FormSaldoAwalStok","props","state","listSupplier","berat","this","dispatch","getListBarang","data","split","target","value","change","setState","onSubmit","handleSubmit","className","htmlFor","Field","name","component","onChange","setKodeBarang","key","KodeBarangList","filter","list","kode_kelompok","map","kode_jenis","nama_jenis","kadar_cetak","label","renderField","type","readOnly","Component","reduxForm","form","enableReinitialize","validate","validasiSaldoAwalPiutang","connect","provinsi","kodeBarang","SaldoAwalStok","handleChange","input","e","tipeTransksi","listSales","columns","dataField","text","align","headerAlign","csvExport","formatter","rowContent","row","rowIndex","data-tip","data-for","onClick","deleteRow","id","effect","tanggal","sales","loading","gagal","kode_lokasi","localStorage","getItem","progressSend","no_transaksi","noFaktur","jenis_trx","detail_saldo_awal","JSON","parse","AxiosMasterPost","then","finishSend","berhasil","removeItem","getUUID","getListDataSaldoAwalStok","catch","dihapus","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","array","splice","setItem","stringify","timer","showConfirmButton","position","reset","getLokasi","isi","kode_supplier","kode_customer","kode_sales","no_bon","saldo_gr","saldo_rp","titip_gr","titip_rp","toString","bruto","netto","console","log","hasil","push","style","width","height","color","to","aria-hidden","HeaderCard","renderFieldSelect","options","lokasi","nama_lokasi","placeholder","data-target","data-toggle","GlobalTabel","keyField","dataSaldoAwalStok","disabled","onSend","sendSaldoAwal","tabIndex","role","aria-labelledby","data-dismiss","handlerSimpan","tipe","username","errors"],"mappings":"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","file":"static/js/90.e63738dd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport validasiSaldoAwalPiutang from \"../../Validations/validasiSaldoAwalPiutang\";\r\nimport { renderField } from \"../../renderField\";\r\nimport { getListBarang } from \"../../actions/kodeBarangAction\";\r\n\r\nclass FormSaldoAwalStok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listSupplier: [],\r\n      berat : \"Berat (Gr)\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListBarang());\r\n  }\r\n  setKodeBarang(data) {\r\n    var barang = data.target.value || \"DEFAULT|DEFAULT|DEFAULT\";\r\n    var split = barang.split(\"|\");\r\n    this.props.change(\"kadar\", split[2]);\r\n    if(split[3] === \"AKSESORIS\"){\r\n      this.setState({\r\n        berat : \"Qty\"\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            <label htmlFor=\"\">Kode Model</label>\r\n            <Field\r\n              name=\"kode_jenis\"\r\n              component=\"select\"\r\n              className=\"form-control\"\r\n              onChange={(data) => this.setKodeBarang(data)}\r\n            >\r\n              <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                SILAHKAN PILIH\r\n              </option>\r\n              {this.props.KodeBarangList.filter(\r\n                (list) => list.kode_kelompok === \"PERHIASAN\" || list.kode_kelompok === \"AKSESORIS\"\r\n              ).map((list) => (\r\n                <option\r\n                  value={\r\n                    list.kode_jenis +\r\n                    \"|\" +\r\n                    list.nama_jenis +\r\n                    \"|\" +\r\n                    list.kadar_cetak +\r\n                    \"|\" +\r\n                    list.kode_kelompok\r\n                  }\r\n                  key={list.kode_jenis}\r\n                >\r\n                  {list.nama_jenis}\r\n                </option>\r\n              ))}\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              label=\"Kode Tukar\"\r\n              name=\"kadar\"\r\n              component={renderField}\r\n              type=\"number\"\r\n              readOnly={this.state.berat === \"Qty\"}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              label={this.state.berat}\r\n              name=\"bruto\"\r\n              component={renderField}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"text-right\">\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Simpan\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormSaldoAwalStok = reduxForm({\r\n  form: \"FormSaldoAwalStok\",\r\n  enableReinitialize: true,\r\n  validate: validasiSaldoAwalPiutang,\r\n})(FormSaldoAwalStok);\r\nexport default connect((state) => {\r\n  return {\r\n    KodeBarangList: state.provinsi.kodeBarang,\r\n  };\r\n})(FormSaldoAwalStok);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm, reset } from \"redux-form\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { berhasil, gagal } from \"../Alert\";\r\nimport FormSaldoAwalStok from \"./Component/FormSaldoAwalStok\";\r\nimport { getListDataSaldoAwalStok } from \"../actions/transaksuPenjualanLMAction\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport { getLokasi } from \"../actions/lokasiAction\";\r\nimport { renderFieldSelect } from \"../renderField\";\r\nimport { getListBarang } from \"../actions/kodeBarangAction\";\r\nimport GlobalTabel from \"../GlobalComponent/GlobalTabel\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    dataSaldoAwalStok: state.provinsi.dataSaldoAwalStok,\r\n    lokasi: state.provinsi.lokasi,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nclass SaldoAwalStok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tipeTransksi: \"HUTANG\",\r\n      listSales: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Jenis\",\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Kadar \",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() => this.deleteRow(rowIndex, row.kode_jenis)}\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                </button>\r\n                <br />\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      tanggal: \"\",\r\n      sales: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n  sendSaldoAwal() {\r\n    if (this.state.tanggal === \"\") {\r\n      gagal(\"Mohon isi tanggal\");\r\n      return false;\r\n    } else if (this.state.kode_lokasi === \"\") {\r\n      gagal(\"Mohon isi Lokasi\");\r\n      return false;\r\n    } else if (localStorage.getItem(\"SaldoAwalStock\") === null) {\r\n      gagal(\"Data masih Kosong, Silahkan tambahkan dahulu\");\r\n      return false;\r\n    }\r\n    this.props.dispatch(progressSend());\r\n    let data = {\r\n      no_transaksi: this.props.noFaktur,\r\n      jenis_trx: \"STOCK\",\r\n      tanggal: this.state.tanggal,\r\n      kode_lokasi: this.state.kode_lokasi,\r\n      detail_saldo_awal: JSON.parse(localStorage.getItem(\"SaldoAwalStock\")),\r\n    };\r\n    AxiosMasterPost(\"saldo-awal/simpan\", data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => berhasil(\"Saldo Awal Berhasil Disimpan\"))\r\n      .then(() => localStorage.removeItem(\"noFaktur\"))\r\n      .then(() => localStorage.removeItem(\"SaldoAwalStock\"))\r\n      .then(() => this.props.dispatch(getUUID()))\r\n      .then(() => this.props.dispatch(getListDataSaldoAwalStok()))\r\n      .catch(() =>\r\n        gagal(\"Sepertinya ada gangguan, Mohon periksa koneksi anda\").then(() =>\r\n          this.props.dispatch(finishSend())\r\n        )\r\n      );\r\n  }\r\n  deleteRow(rowIndex, dihapus) {\r\n    Swal.fire({\r\n      title: \"Anda Yakin ?\",\r\n      text: \"Anda Akan Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const array = JSON.parse(localStorage.getItem(\"SaldoAwalStock\")) || [];\r\n        array.splice(rowIndex, 1);\r\n        localStorage.setItem(\"SaldoAwalStock\", JSON.stringify(array));\r\n        Swal.fire({\r\n          text: \"Berhasil\",\r\n          timer: 2000,\r\n          showConfirmButton: false,\r\n          position: \"top-right\",\r\n          icon: \"success\",\r\n        }).then(() => this.props.dispatch(getListDataSaldoAwalStok()));\r\n      }\r\n    });\r\n  }\r\n  setTipe(e) {\r\n    this.setState({\r\n      tipeTransksi: e.target.value,\r\n    });\r\n    this.props.dispatch(reset(\"FormSaldoAwalPiutang\"));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getListDataSaldoAwalStok());\r\n    this.props.dispatch(getLokasi());\r\n    this.props.dispatch(getListBarang());\r\n  }\r\n  handleChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handlerSimpan(data) {\r\n    var isi = {\r\n      kode_supplier: \"-\",\r\n      kode_customer: \"-\",\r\n      kode_sales: \"-\",\r\n      no_bon: \"-\",\r\n      saldo_gr: 0,\r\n      saldo_rp: 0,\r\n      titip_gr: 0,\r\n      titip_rp: 0,\r\n      kode_jenis: data.kode_jenis.split(\"|\")[0],\r\n      kadar_cetak: data.kode_jenis.split(\"|\")[2].toString(),\r\n      bruto: data.bruto,\r\n      netto: 0,\r\n    };\r\n    console.log(JSON.stringify(isi));\r\n    var hasil = JSON.parse(localStorage.getItem(\"SaldoAwalStock\")) || [];\r\n    hasil.push(isi);\r\n    localStorage.setItem(\"SaldoAwalStock\", JSON.stringify(hasil));\r\n    berhasil(\"Data Tersimpan\");\r\n    this.props.dispatch(getListDataSaldoAwalStok());\r\n  }\r\n  render() {\r\n    if (this.state.loading === true) {\r\n      return (\r\n        <div\r\n          className=\"d-flex no-block justify-content-center align-items-center position-relative\"\r\n          style={{ width: \"100%\", height: \"90vh\" }}\r\n        >\r\n          <div>\r\n            <Loader type=\"Oval\" color=\"#00BFFF\" height={70} width={70} />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <ol className=\"breadcrumb mb-2\">\r\n            <Link to=\"/saldoawal\">\r\n              <button type=\"button\" className=\"btn btn-secondary\">\r\n                <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i>{\" \"}\r\n                Back\r\n              </button>\r\n            </Link>\r\n          </ol>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"card\">\r\n                <HeaderCard title=\"Saldo Awal Piutang Customer\" />\r\n                <div className=\"card-body\">\r\n                  <div className=\"col-lg-12 mt-3\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-4\">\r\n                        <label htmlFor=\"\">Tanggal</label>\r\n                        <input\r\n                          type=\"date\"\r\n                          className=\"form-control\"\r\n                          onChange={this.handleChange(\"tanggal\")}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-4\">\r\n                        <Field\r\n                          name=\"kode_lokasi\"\r\n                          component={renderFieldSelect}\r\n                          options={this.props.lokasi.map((list) => {\r\n                            let data = {\r\n                              value: list.kode_lokasi,\r\n                              name: list.nama_lokasi,\r\n                            };\r\n                            return data;\r\n                          })}\r\n                          type=\"text\"\r\n                          label=\"Kode Lokasi\"\r\n                          placeholder=\"Masukan Kode Lokasi\"\r\n                          onChange={(data) =>\r\n                            this.setState({\r\n                              kode_lokasi: data,\r\n                            })\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-12 mt-3\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-6\"></div>\r\n                          <div className=\"col-lg-6\">\r\n                            <div className=\"text-right\">\r\n                              <button\r\n                                className=\"btn btn-primary\"\r\n                                data-target=\"#tambahBarang\"\r\n                                data-toggle=\"modal\"\r\n                              >\r\n                                Tambah Data\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-12 mt-3\">\r\n                            <GlobalTabel\r\n                              keyField=\"kode_jenis\"\r\n                              data={this.props.dataSaldoAwalStok}\r\n                              columns={this.state.columns}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-12\">\r\n                        <div className=\"text-right\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-info\"\r\n                            disabled={this.props.onSend}\r\n                            onClick={() => this.sendSaldoAwal()}\r\n                          >\r\n                            {this.props.onSend ? (\r\n                              <span\r\n                                className=\"spinner-border spinner-border-sm mr-3\"\r\n                                aria-hidden=\"true\"\r\n                              ></span>\r\n                            ) : null}\r\n                            Simpan\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            id=\"tambahBarang\"\r\n            className=\"modal fade\"\r\n            tabIndex=\"-1\"\r\n            role=\"dialog\"\r\n            aria-labelledby=\"primary-header-modalLabel\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <div className=\"modal-dialog modal-lg\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header modal-colored-header bg-primary\">\r\n                  <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                    Tambah Data Transaksi\r\n                  </h4>\r\n                  <button\r\n                    id=\"dismiss_modal1\"\r\n                    name=\"dismiss_modal1\"\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-hidden=\"true\"\r\n                  >\r\n                    ×\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <FormSaldoAwalStok\r\n                    onSubmit={(data) => this.handlerSimpan(data)}\r\n                    tipe={this.state.tipeTransksi}\r\n                  />\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-light\"\r\n                    data-dismiss=\"modal\"\r\n                    id=\"close_modal\"\r\n                  >\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nSaldoAwalStok = reduxForm({\r\n  form: \"SaldoAwalStok\",\r\n  enableReinitialize: true,\r\n})(SaldoAwalStok);\r\nexport default connect(maptostate, null)(SaldoAwalStok);\r\n","const validasiSaldoAwalPiutang = (value) => {\r\n  const errors = {};\r\n  if (!value.kode_customer) {\r\n    errors.kode_customer = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.no_bon) {\r\n    errors.no_bon = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.bruto) {\r\n    errors.bruto = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.netto) {\r\n    errors.netto = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.saldo_gr) {\r\n    errors.saldo_gr = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.saldo_rp) {\r\n    errors.saldo_rp = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.titip_gr) {\r\n    errors.titip_gr = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.titip_rp) {\r\n    errors.titip_rp = \"Tidak Boleh kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validasiSaldoAwalPiutang;\r\n"],"sourceRoot":""}