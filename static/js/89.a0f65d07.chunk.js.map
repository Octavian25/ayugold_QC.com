{"version":3,"sources":["DataMaster/Component/FormSaldoAwalPiutang.jsx","DataMaster/SaldoAwalPiutangCustomer.jsx","Validations/validasiSaldoAwalPiutang.js"],"names":["FormSaldoAwalPiutang","props","state","listSupplier","this","dispatch","getcustomerList","getsalesmanList","onSubmit","handleSubmit","className","Field","name","component","renderFieldSelect","options","customer","map","list","value","kode_customer","nama_customer","type","label","placeholder","sales","kode_sales","nama_sales","renderField","disabled","onSend","aria-hidden","Component","reduxForm","form","enableReinitialize","validate","validasiSaldoAwalPiutang","connect","provinsi","salesman","SaldoAwalPiutangCustomer","handleChange","input","e","setState","target","tipeTransksi","listSales","tanggal","columns","dataField","text","align","headerAlign","csvExport","formatter","rowContent","row","index","onClick","hapus","data-tut","hasil","JSON","parse","localStorage","getItem","splice","setItem","stringify","getListDataSaldoAwalPiutangCustomer","gagal","progressSend","data","no_transaksi","noFaktur","jenis_trx","kode_lokasi","detail_saldo_awal","AxiosMasterPost","then","berhasil","removeItem","getUUID","finishSend","catch","err","response","reset","isi","kode_supplier","no_bon","saldo_gr","saldo_rp","titip_gr","titip_rp","kode_jenis","kadar_cetak","bruto","netto","console","log","push","to","HeaderCard","title","htmlFor","onChange","data-target","data-toggle","GlobalTabel","keyField","dataSaldoAwalPiutangCustomer","sendSaldoAwal","id","tabIndex","role","aria-labelledby","data-dismiss","handlerSimpan","tipe","username","errors"],"mappings":"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","file":"static/js/89.a0f65d07.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport validasiSaldoAwalPiutang from \"../../Validations/validasiSaldoAwalPiutang\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { getcustomerList } from \"../../actions/customerAction\";\r\nimport { getsalesmanList } from \"../../actions/salesmanAction\";\r\n\r\nclass FormSaldoAwalPiutang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listSupplier: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getcustomerList());\r\n    this.props.dispatch(getsalesmanList());\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"kode_customer\"\r\n              component={renderFieldSelect}\r\n              options={this.props.customer.map((list) => {\r\n                let data = {\r\n                  value: list.kode_customer,\r\n                  name: list.kode_customer + \" - \" + list.nama_customer,\r\n                };\r\n                return data;\r\n              })}\r\n              type=\"text\"\r\n              label=\"Kode CUstomer\"\r\n              placeholder=\"Masukan Kode CUstomer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"kode_sales\"\r\n              component={renderFieldSelect}\r\n              options={this.props.sales.map((list) => {\r\n                let data = {\r\n                  value: list.kode_sales,\r\n                  name: list.nama_sales,\r\n                };\r\n                return data;\r\n              })}\r\n              type=\"text\"\r\n              label=\"Kode Customer\"\r\n              placeholder=\"Masukan Kode Customer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              label=\"Nomor Bon\"\r\n              name=\"no_bon\"\r\n              component={renderField}\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              label=\"Bruto(Gr)\"\r\n              name=\"bruto\"\r\n              component={renderField}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              label=\"Netto(Gr)\"\r\n              name=\"netto\"\r\n              component={renderField}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              label=\"Saldo(Gr)\"\r\n              name=\"saldo_gr\"\r\n              component={renderField}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              label=\"saldo(Rp)\"\r\n              name=\"saldo_rp\"\r\n              component={renderField}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              label=\"Titip(Gr)\"\r\n              name=\"titip_gr\"\r\n              component={renderField}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              label=\"Titip(Rp)\"\r\n              name=\"titip_rp\"\r\n              component={renderField}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-info\"\r\n                disabled={this.props.onSend}\r\n              >\r\n                {this.props.onSend ? (\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm mr-3\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                ) : null}\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormSaldoAwalPiutang = reduxForm({\r\n  form: \"FormSaldoAwalPiutang\",\r\n  enableReinitialize: true,\r\n  validate: validasiSaldoAwalPiutang,\r\n})(FormSaldoAwalPiutang);\r\nexport default connect((state) => {\r\n  return {\r\n    customer: state.provinsi.customer,\r\n    onSend: state.provinsi.onSend,\r\n    sales: state.provinsi.salesman,\r\n  };\r\n})(FormSaldoAwalPiutang);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, reset } from \"redux-form\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { berhasil, gagal } from \"../Alert\";\r\nimport FormSaldoAwalPiutang from \"./Component/FormSaldoAwalPiutang\";\r\nimport { getListDataSaldoAwalPiutangCustomer } from \"../actions/transaksuPenjualanLMAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport GlobalTabel from \"../GlobalComponent/GlobalTabel\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    dataSaldoAwalPiutangCustomer: state.provinsi.dataSaldoAwalPiutangCustomer,\r\n    customer: state.provinsi.customer,\r\n    sales: state.provinsi.salesman,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nclass SaldoAwalPiutangCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tipeTransksi: \"HUTANG\",\r\n      listSales: [],\r\n      tanggal: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"kode_customer\",\r\n          text: \"Kode Toko\",\r\n        },\r\n        {\r\n          dataField: \"kode_sales\",\r\n          text: \"Kode Sales\",\r\n        },\r\n        {\r\n          dataField: \"no_bon\",\r\n          text: \"Nomor Bon\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"saldo_gr\",\r\n          text: \"Saldo GR\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"saldo_rp\",\r\n          text: \"Saldo RP\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"titip_gr\",\r\n          text: \"Titip rp\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"titip_rp\",\r\n          text: \"Titip RP\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"link\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, index) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() => this.hapus(index)}\r\n                  data-tut=\"reactour_3\"\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  hapus(index) {\r\n    let hasil = JSON.parse(localStorage.getItem(\"SaldoAwalPiutangCustomer\"));\r\n    hasil.splice(index, 1);\r\n    localStorage.setItem(\"SaldoAwalPiutangCustomer\", JSON.stringify(hasil));\r\n    this.props.dispatch(getListDataSaldoAwalPiutangCustomer());\r\n  }\r\n  sendSaldoAwal() {\r\n    if (this.state.tanggal === \"\") {\r\n      gagal(\"Mohon isi tanggal\");\r\n      return false;\r\n    } else if (this.state.sales === []) {\r\n      gagal(\"Mohon isi sales\");\r\n      return false;\r\n    } else if (localStorage.getItem(\"SaldoAwalPiutangCustomer\") === null) {\r\n      gagal(\"Data masih Kosong, Silahkan tambahkan dahulu\");\r\n      return false;\r\n    }\r\n    this.props.dispatch(progressSend());\r\n    let data = {\r\n      no_transaksi: this.props.noFaktur,\r\n      jenis_trx: \"PIUTANG\",\r\n      tanggal: this.state.tanggal,\r\n      kode_lokasi: \"-\",\r\n      detail_saldo_awal: JSON.parse(\r\n        localStorage.getItem(\"SaldoAwalPiutangCustomer\")\r\n      ),\r\n    };\r\n\r\n    AxiosMasterPost(\"saldo-awal/simpan\", data)\r\n      .then(() => berhasil(\"Saldo Awal Berhasil Disimpan\"))\r\n      .then(() => localStorage.removeItem(\"noFaktur\"))\r\n      .then(() => localStorage.removeItem(\"SaldoAwalPiutangCustomer\"))\r\n      .then(() => this.props.dispatch(getUUID()))\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(getListDataSaldoAwalPiutangCustomer()))\r\n      .catch((err) =>\r\n        gagal(`Gagal Simpan Saldo Awal, Error : ${err.response.data}`).then(\r\n          () => this.props.dispatch(finishSend())\r\n        )\r\n      );\r\n  }\r\n\r\n  setTipe(e) {\r\n    this.setState({\r\n      tipeTransksi: e.target.value,\r\n    });\r\n    this.props.dispatch(reset(\"FormSaldoAwalPiutang\"));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getUUID());\r\n\r\n    this.props.dispatch(getListDataSaldoAwalPiutangCustomer());\r\n  }\r\n\r\n  handleChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handlerSimpan(data) {\r\n    var isi = {\r\n      kode_supplier: \"-\",\r\n      kode_customer: data.kode_customer,\r\n      kode_sales: data.kode_sales,\r\n      no_bon: data.no_bon,\r\n      saldo_gr: data.saldo_gr,\r\n      saldo_rp: data.saldo_rp,\r\n      titip_gr: data.titip_gr,\r\n      titip_rp: data.titip_rp,\r\n      kode_jenis: \"-\",\r\n      kadar_cetak: \"0\",\r\n      bruto: data.bruto,\r\n      netto: data.netto,\r\n    };\r\n    console.log(JSON.stringify(isi));\r\n    var hasil =\r\n      JSON.parse(localStorage.getItem(\"SaldoAwalPiutangCustomer\")) || [];\r\n    hasil.push(isi);\r\n    localStorage.setItem(\"SaldoAwalPiutangCustomer\", JSON.stringify(hasil));\r\n    berhasil(\"Data Tersimpan\");\r\n    this.props.dispatch(getListDataSaldoAwalPiutangCustomer());\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <ol className=\"breadcrumb mb-2\">\r\n          <Link to=\"/saldoawal\">\r\n            <button type=\"button\" className=\"btn btn-secondary\">\r\n              <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i> Back\r\n            </button>\r\n          </Link>\r\n        </ol>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Saldo Awal Piutang Customer\" />\r\n              <div className=\"card-body\">\r\n                <div className=\"col-lg-12 mt-3\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                      <label htmlFor=\"\">Tanggal</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        onChange={(e) =>\r\n                          this.setState({\r\n                            tanggal: e.target.value,\r\n                          })\r\n                        }\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-12 mt-3\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6\"></div>\r\n                        <div className=\"col-lg-6\">\r\n                          <div className=\"text-right\">\r\n                            <button\r\n                              className=\"btn btn-primary\"\r\n                              data-target=\"#tambahBarang\"\r\n                              data-toggle=\"modal\"\r\n                            >\r\n                              Tambah Data\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-lg-12 mt-3\">\r\n                          <GlobalTabel\r\n                            keyField=\"id\"\r\n                            data={this.props.dataSaldoAwalPiutangCustomer}\r\n                            columns={this.state.columns}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"btn btn-info\"\r\n                          disabled={this.props.onSend}\r\n                          onClick={() => this.sendSaldoAwal()}\r\n                        >\r\n                          {this.props.onSend ? (\r\n                            <span\r\n                              className=\"spinner-border spinner-border-sm mr-3\"\r\n                              aria-hidden=\"true\"\r\n                            ></span>\r\n                          ) : null}\r\n                          Simpan\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"tambahBarang\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-full-width\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Tambah Data Transaksi\r\n                </h4>\r\n                <button\r\n                  id=\"dismiss_modal1\"\r\n                  name=\"dismiss_modal1\"\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <FormSaldoAwalPiutang\r\n                  onSubmit={(data) => this.handlerSimpan(data)}\r\n                  tipe={this.state.tipeTransksi}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light\"\r\n                  data-dismiss=\"modal\"\r\n                  id=\"close_modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSaldoAwalPiutangCustomer = reduxForm({\r\n  form: \"SaldoAwalPiutangCustomer\",\r\n  enableReinitialize: true,\r\n})(SaldoAwalPiutangCustomer);\r\nexport default connect(maptostate, null)(SaldoAwalPiutangCustomer);\r\n","const validasiSaldoAwalPiutang = (value) => {\r\n  const errors = {};\r\n  if (!value.kode_customer) {\r\n    errors.kode_customer = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.no_bon) {\r\n    errors.no_bon = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.bruto) {\r\n    errors.bruto = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.netto) {\r\n    errors.netto = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.saldo_gr) {\r\n    errors.saldo_gr = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.saldo_rp) {\r\n    errors.saldo_rp = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.titip_gr) {\r\n    errors.titip_gr = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.titip_rp) {\r\n    errors.titip_rp = \"Tidak Boleh kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validasiSaldoAwalPiutang;\r\n"],"sourceRoot":""}