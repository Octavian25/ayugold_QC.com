{"version":3,"sources":["FICO/Element/AccordRongsok.jsx"],"names":["renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","AccordRongsok","props","state","this","change","parseFloat","totalBrutoRongsok","toFixed","totalRongsok","dispatch","setTipeBayarModal","showModal","id","data-toggle","href","aria-expanded","aria-controls","style","color","name","component","aria-labelledby","data-parent","onClick","showRongsokModal","onBlur","setRongsok","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","harga","cash","cashNetto"],"mappings":"2MAKMA,EAAc,SAAC,GAAD,IAClBC,EADkB,EAClBA,MACAC,EAFkB,EAElBA,MACAC,EAHkB,EAGlBA,KACAC,EAJkB,EAIlBA,MACAC,EALkB,EAKlBA,SALkB,IAMlBC,KAAQC,EANU,EAMVA,QAASC,EANC,EAMDA,MAAOC,EANN,EAMMA,QANN,OAQlB,yBAAKC,UAAU,cACb,2BAAOC,QAAQ,GAAGD,UAAU,cACzBR,GAEH,2CACMD,EADN,CAEEE,KAAMA,EACNO,UAAU,eACVE,IAAI,IACJC,KAAK,QACLC,UAAWV,EACXC,SAAUA,KAEXE,IACGC,GAAS,uBAAGE,UAAU,oBAAoBF,IACzCC,GAAW,2BAAIA,MAGlBM,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,gEAKjBC,KAAKF,MAAMG,OACT,eACAC,WAAWF,KAAKF,MAAMK,mBAAmBC,QAAQ,IAEnDJ,KAAKF,MAAMG,OACT,eACAC,WAAWF,KAAKF,MAAMO,cAAcD,QAAQ,M,mCAI9CJ,KAAKF,MAAMG,OACT,eACAC,WAAWF,KAAKF,MAAMK,mBAAmBC,QAAQ,IAEnDJ,KAAKF,MAAMG,OACT,eACAC,WAAWF,KAAKF,MAAMO,cAAcD,QAAQ,M,yCAI9CJ,KAAKF,MAAMQ,SAASC,YAAkB,YACtCP,KAAKF,MAAMQ,SAASE,iB,+BAEZ,IAAD,OACP,OACE,yBAAKhB,UAAU,YACb,yBAAKiB,GAAG,YAAYjB,UAAU,yBAC5B,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,cAAciB,GAAG,cAC9B,yBAAKjB,UAAU,OACb,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,OACZ,uBACEA,UAAU,sDACVkB,cAAY,WACZC,KAAK,mBACLC,gBAAc,OACdC,gBAAc,mBALhB,UAQE,0BAAMrB,UAAU,eACd,uBAAGA,UAAU,6CAKrB,yBAAKA,UAAU,qBACb,2BAAOC,QAAQ,GAAGqB,MAAO,CAAEC,MAAO,UAAlC,SAGA,kBAAC,IAAD,CACEC,KAAK,eACL/B,KAAK,SACLgC,UAAU,QACVzB,UAAU,eACVL,UAAU,OAKlB,yBACEsB,GAAG,kBACHjB,UAAU,WACV0B,kBAAgB,aAChBC,cAAY,cAEZ,yBAAK3B,UAAU,sBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,2BAAOC,QAAQ,IAAf,KACA,4BACED,UAAU,4BACVP,KAAK,SACLmC,QAAS,kBAAM,EAAKC,qBAHtB,MAQF,yBAAK7B,UAAU,qBACb,kBAAC,IAAD,CACEwB,KAAK,eACLhC,MAAM,SACNC,KAAK,SACLgC,UAAWnC,EACXK,UAAU,EACVmC,OAAQtB,KAAKuB,gBAGjB,yBAAK/B,UAAU,qBACb,kBAAC,IAAD,CACEwB,KAAK,eACLhC,MAAM,QACNC,KAAK,SACLgC,UAAWnC,EACXK,UAAU,EACVmC,OAAQtB,KAAKuB,oBAMlB,U,GA3GWC,aAkH5B3B,EAAgB4B,YAAU,CACxBC,KAAM,gBACNC,oBAAoB,GAFNF,CAGb5B,GACH,IAAM+B,EAAWC,YAAkB,iBACpBC,uBAAQ,SAAC/B,GAAW,IAAD,EACR6B,EAAS7B,EAAO,QAAS,QAAzCgC,EADwB,EACxBA,MAAOC,EADiB,EACjBA,KACf,MAAO,CACLC,WAAY/B,WAAW8B,GAAQ9B,WAAW6B,IAAQ3B,QAAQ,MAH/C0B,CAKZjC","file":"static/js/15.9f479982.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { setTipeBayarModal, showModal } from \"../../actions/ModalAction\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nclass AccordRongsok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    this.props.change(\r\n      \"rongsokBruto\",\r\n      parseFloat(this.props.totalBrutoRongsok).toFixed(3)\r\n    );\r\n    this.props.change(\r\n      \"rongsokNetto\",\r\n      parseFloat(this.props.totalRongsok).toFixed(3)\r\n    );\r\n  }\r\n  setRongsok() {\r\n    this.props.change(\r\n      \"rongsokBruto\",\r\n      parseFloat(this.props.totalBrutoRongsok).toFixed(3)\r\n    );\r\n    this.props.change(\r\n      \"rongsokNetto\",\r\n      parseFloat(this.props.totalRongsok).toFixed(3)\r\n    );\r\n  }\r\n  showRongsokModal() {\r\n    this.props.dispatch(setTipeBayarModal(\"RONGSOK\"));\r\n    this.props.dispatch(showModal());\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-6\">\r\n        <div id=\"accordion\" className=\"custom-accordion mb-4\">\r\n          <div className=\"card mb-0 bg-dark\">\r\n            <div className=\"card-header\" id=\"headingOne\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-8 col-md-8\">\r\n                  <h5 className=\"m-0\">\r\n                    <a\r\n                      className=\"custom-accordion-title d-block pt-2 pb-2 text-white\"\r\n                      data-toggle=\"collapse\"\r\n                      href=\"#collapseRongsok\"\r\n                      aria-expanded=\"true\"\r\n                      aria-controls=\"collapseRongsok\"\r\n                    >\r\n                      Rongsok\r\n                      <span className=\"float-right\">\r\n                        <i className=\"mdi mdi-chevron-down accordion-arrow\" />\r\n                      </span>\r\n                    </a>\r\n                  </h5>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\" style={{ color: \"white\" }}>\r\n                    Netto\r\n                  </label>\r\n                  <Field\r\n                    name=\"rongsokNetto\"\r\n                    type=\"number\"\r\n                    component=\"input\"\r\n                    className=\"form-control\"\r\n                    readOnly={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              id=\"collapseRongsok\"\r\n              className=\"collapse\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-parent=\"#accordion\"\r\n            >\r\n              <div className=\"card-body bg-white\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-2\">\r\n                    <label htmlFor=\"\">.</label>\r\n                    <button\r\n                      className=\"btn btn-primary btn-block\"\r\n                      type=\"button\"\r\n                      onClick={() => this.showRongsokModal()}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col-lg-5 col-md-5\">\r\n                    <Field\r\n                      name=\"rongsokBruto\"\r\n                      label=\"Brutto\"\r\n                      type=\"number\"\r\n                      component={renderField}\r\n                      readOnly={true}\r\n                      onBlur={this.setRongsok()}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-lg-5 col-md-5\">\r\n                    <Field\r\n                      name=\"rongsokNetto\"\r\n                      label=\"Netto\"\r\n                      type=\"number\"\r\n                      component={renderField}\r\n                      readOnly={true}\r\n                      onBlur={this.setRongsok()}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>{\" \"}\r\n          {/* end card*/}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAccordRongsok = reduxForm({\r\n  form: \"AccordRongsok\",\r\n  enableReinitialize: true,\r\n})(AccordRongsok);\r\nconst selector = formValueSelector(\"AccordRongsok\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { harga, cash } = selector(state, \"harga\", \"cash\");\r\n  return {\r\n    cashNetto: (parseFloat(cash) / parseFloat(harga)).toFixed(3),\r\n  };\r\n})(AccordRongsok);\r\n"],"sourceRoot":""}