{"version":3,"sources":["DataMaster/Component/FormSaldoAwalStok.jsx","DataMaster/SaldoAwalStok.jsx","HeaderCard.jsx","renderField.jsx","GlobalComponent/EmptyTable.jsx","GlobalComponent/GlobalTabel.jsx","Images/emptyTable.svg","Validations/validasiSaldoAwalPiutang.js"],"names":["FormSaldoAwalStok","props","state","listSupplier","this","dispatch","getListBarang","data","split","target","value","change","onSubmit","handleSubmit","className","htmlFor","Field","name","component","onChange","setKodeBarang","key","KodeBarangList","filter","list","kode_kelompok","map","kode_jenis","nama_jenis","kadar_cetak","label","renderField","type","Component","reduxForm","form","enableReinitialize","validate","validasiSaldoAwalPiutang","connect","provinsi","kodeBarang","SaldoAwalStok","handleChange","input","e","setState","tipeTransksi","listSales","columns","dataField","text","tanggal","sales","loading","gagal","kode_lokasi","localStorage","getItem","progressSend","no_transaksi","noFaktur","jenis_trx","detail_saldo_awal","JSON","parse","AxiosMasterPost","then","finishSend","berhasil","removeItem","getUUID","getListDataSaldoAwalStok","catch","reset","getLokasi","isi","kode_supplier","kode_customer","kode_sales","no_bon","saldo_gr","saldo_rp","titip_gr","titip_rp","bruto","netto","console","log","stringify","hasil","push","setItem","style","width","height","color","to","aria-hidden","HeaderCard","title","renderFieldSelect","options","lokasi","nama_lokasi","placeholder","data-target","data-toggle","GlobalTabel","keyField","dataSaldoAwalStok","disabled","onSend","onClick","sendSaldoAwal","id","tabIndex","role","aria-labelledby","data-dismiss","handlerSimpan","tipe","username","fontSize","backgroundColor","borderTopLeftRadius","borderTopRightRadius","effect","data-tip","data-for","window","location","reload","limit","readOnly","search","meta","touched","error","warning","maxLength","onKeyPress","preventDefault","autoComplete","emptyMessage","EmptyTable","src","empty","alt","undefined","link","replace","SearchBar","Search","ExportCSVButton","CSVExport","textEmpty","handleClick","tambahData","expandRow","selectRow","exportCSV","searchProps","bootstrap4","pagination","paginationFactory","baseProps","striped","noDataIndication","csvProps","module","exports","errors"],"mappings":"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","file":"static/js/86.5a39257a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport validasiSaldoAwalPiutang from \"../../Validations/validasiSaldoAwalPiutang\";\r\nimport { renderField } from \"../../renderField\";\r\nimport { getListBarang } from \"../../actions/kodeBarangAction\";\r\n\r\nclass FormSaldoAwalStok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listSupplier: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListBarang());\r\n  }\r\n  setKodeBarang(data) {\r\n    var barang = data.target.value || \"DEFAULT|DEFAULT|DEFAULT\";\r\n    var split = barang.split(\"|\");\r\n    this.props.change(\"kadar\", split[2]);\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            <label htmlFor=\"\">Kode Barang</label>\r\n            <Field\r\n              name=\"kode_jenis\"\r\n              component=\"select\"\r\n              className=\"form-control\"\r\n              onChange={(data) => this.setKodeBarang(data)}\r\n            >\r\n              <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                SILAHKAN PILIH\r\n              </option>\r\n              {this.props.KodeBarangList.filter(\r\n                (list) => list.kode_kelompok === \"PERHIASAN\"\r\n              ).map((list) => (\r\n                <option\r\n                  value={\r\n                    list.kode_jenis +\r\n                    \"|\" +\r\n                    list.nama_jenis +\r\n                    \"|\" +\r\n                    list.kadar_cetak\r\n                  }\r\n                  key={list.kode_jenis}\r\n                >\r\n                  {list.nama_jenis}\r\n                </option>\r\n              ))}\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              label=\"Kadar (%)\"\r\n              name=\"kadar\"\r\n              component={renderField}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              label=\"Berat (Gr)\"\r\n              name=\"bruto\"\r\n              component={renderField}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"text-right\">\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Simpan\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormSaldoAwalStok = reduxForm({\r\n  form: \"FormSaldoAwalStok\",\r\n  enableReinitialize: true,\r\n  validate: validasiSaldoAwalPiutang,\r\n})(FormSaldoAwalStok);\r\nexport default connect((state) => {\r\n  return {\r\n    KodeBarangList: state.provinsi.kodeBarang,\r\n  };\r\n})(FormSaldoAwalStok);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm, reset } from \"redux-form\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { berhasil, gagal } from \"../Alert\";\r\nimport FormSaldoAwalStok from \"./Component/FormSaldoAwalStok\";\r\nimport { getListDataSaldoAwalStok } from \"../actions/transaksuPenjualanLMAction\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport { getLokasi } from \"../actions/lokasiAction\";\r\nimport { renderFieldSelect } from \"../renderField\";\r\nimport { getListBarang } from \"../actions/kodeBarangAction\";\r\nimport GlobalTabel from \"../GlobalComponent/GlobalTabel\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    dataSaldoAwalStok: state.provinsi.dataSaldoAwalStok,\r\n    lokasi: state.provinsi.lokasi,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nclass SaldoAwalStok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tipeTransksi: \"HUTANG\",\r\n      listSales: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Jenis\",\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Kadar \",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat\",\r\n        },\r\n      ],\r\n      tanggal: \"\",\r\n      sales: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n  sendSaldoAwal() {\r\n    if (this.state.tanggal === \"\") {\r\n      gagal(\"Mohon isi tanggal\");\r\n      return false;\r\n    } else if (this.state.kode_lokasi === \"\") {\r\n      gagal(\"Mohon isi Lokasi\");\r\n      return false;\r\n    } else if (localStorage.getItem(\"SaldoAwalStock\") === null) {\r\n      gagal(\"Data masih Kosong, Silahkan tambahkan dahulu\");\r\n      return false;\r\n    }\r\n    this.props.dispatch(progressSend());\r\n    let data = {\r\n      no_transaksi: this.props.noFaktur,\r\n      jenis_trx: \"STOCK\",\r\n      tanggal: this.state.tanggal,\r\n      kode_lokasi: this.state.kode_lokasi,\r\n      detail_saldo_awal: JSON.parse(localStorage.getItem(\"SaldoAwalStock\")),\r\n    };\r\n    AxiosMasterPost(\"saldo-awal/simpan\", data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => berhasil(\"Saldo Awal Berhasil Disimpan\"))\r\n      .then(() => localStorage.removeItem(\"noFaktur\"))\r\n      .then(() => localStorage.removeItem(\"SaldoAwalStock\"))\r\n      .then(() => this.props.dispatch(getUUID()))\r\n      .then(() => this.props.dispatch(getListDataSaldoAwalStok()))\r\n      .catch(() =>\r\n        gagal(\"Sepertinya ada gangguan, Mohon periksa koneksi anda\").then(() =>\r\n          this.props.dispatch(finishSend())\r\n        )\r\n      );\r\n  }\r\n\r\n  setTipe(e) {\r\n    this.setState({\r\n      tipeTransksi: e.target.value,\r\n    });\r\n    this.props.dispatch(reset(\"FormSaldoAwalPiutang\"));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getListDataSaldoAwalStok());\r\n    this.props.dispatch(getLokasi());\r\n    this.props.dispatch(getListBarang());\r\n  }\r\n  handleChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handlerSimpan(data) {\r\n    var isi = {\r\n      kode_supplier: \"-\",\r\n      kode_customer: \"-\",\r\n      kode_sales: \"-\",\r\n      no_bon: \"-\",\r\n      saldo_gr: 0,\r\n      saldo_rp: 0,\r\n      titip_gr: 0,\r\n      titip_rp: 0,\r\n      kode_jenis: data.kode_jenis.split(\"|\")[0],\r\n      kadar_cetak: data.kode_jenis.split(\"|\")[2],\r\n      bruto: data.bruto,\r\n      netto: 0,\r\n    };\r\n    console.log(JSON.stringify(isi));\r\n    var hasil = JSON.parse(localStorage.getItem(\"SaldoAwalStock\")) || [];\r\n    hasil.push(isi);\r\n    localStorage.setItem(\"SaldoAwalStock\", JSON.stringify(hasil));\r\n    berhasil(\"Data Tersimpan\");\r\n    this.props.dispatch(getListDataSaldoAwalStok());\r\n  }\r\n  render() {\r\n    if (this.state.loading === true) {\r\n      return (\r\n        <div\r\n          className=\"d-flex no-block justify-content-center align-items-center position-relative\"\r\n          style={{ width: \"100%\", height: \"90vh\" }}\r\n        >\r\n          <div>\r\n            <Loader type=\"Oval\" color=\"#00BFFF\" height={70} width={70} />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <ol className=\"breadcrumb mb-2\">\r\n            <Link to=\"/saldoawal\">\r\n              <button type=\"button\" className=\"btn btn-secondary\">\r\n                <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i>{\" \"}\r\n                Back\r\n              </button>\r\n            </Link>\r\n          </ol>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"card\">\r\n                <HeaderCard title=\"Saldo Awal Piutang Customer\" />\r\n                <div className=\"card-body\">\r\n                  <div className=\"col-lg-12 mt-3\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-4\">\r\n                        <label htmlFor=\"\">Tanggal</label>\r\n                        <input\r\n                          type=\"date\"\r\n                          className=\"form-control\"\r\n                          onChange={this.handleChange(\"tanggal\")}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-4\">\r\n                        <Field\r\n                          name=\"kode_lokasi\"\r\n                          component={renderFieldSelect}\r\n                          options={this.props.lokasi.map((list) => {\r\n                            let data = {\r\n                              value: list.kode_lokasi,\r\n                              name: list.nama_lokasi,\r\n                            };\r\n                            return data;\r\n                          })}\r\n                          type=\"text\"\r\n                          label=\"Kode Lokasi\"\r\n                          placeholder=\"Masukan Kode Lokasi\"\r\n                          onChange={(data) =>\r\n                            this.setState({\r\n                              kode_lokasi: data,\r\n                            })\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-12 mt-3\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-6\"></div>\r\n                          <div className=\"col-lg-6\">\r\n                            <div className=\"text-right\">\r\n                              <button\r\n                                className=\"btn btn-primary\"\r\n                                data-target=\"#tambahBarang\"\r\n                                data-toggle=\"modal\"\r\n                              >\r\n                                Tambah Data\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-12 mt-3\">\r\n                            <GlobalTabel\r\n                              keyField=\"kode_jenis\"\r\n                              data={this.props.dataSaldoAwalStok}\r\n                              columns={this.state.columns}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-12\">\r\n                        <div className=\"text-right\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-info\"\r\n                            disabled={this.props.onSend}\r\n                            onClick={() => this.sendSaldoAwal()}\r\n                          >\r\n                            {this.props.onSend ? (\r\n                              <span\r\n                                className=\"spinner-border spinner-border-sm mr-3\"\r\n                                aria-hidden=\"true\"\r\n                              ></span>\r\n                            ) : null}\r\n                            Simpan\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            id=\"tambahBarang\"\r\n            className=\"modal fade\"\r\n            tabIndex=\"-1\"\r\n            role=\"dialog\"\r\n            aria-labelledby=\"primary-header-modalLabel\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <div className=\"modal-dialog modal-lg\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header modal-colored-header bg-primary\">\r\n                  <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                    Tambah Data Transaksi\r\n                  </h4>\r\n                  <button\r\n                    id=\"dismiss_modal1\"\r\n                    name=\"dismiss_modal1\"\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-hidden=\"true\"\r\n                  >\r\n                    ×\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <FormSaldoAwalStok\r\n                    onSubmit={(data) => this.handlerSimpan(data)}\r\n                    tipe={this.state.tipeTransksi}\r\n                  />\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-light\"\r\n                    data-dismiss=\"modal\"\r\n                    id=\"close_modal\"\r\n                  >\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nSaldoAwalStok = reduxForm({\r\n  form: \"SaldoAwalStok\",\r\n  enableReinitialize: true,\r\n})(SaldoAwalStok);\r\nexport default connect(maptostate, null)(SaldoAwalStok);\r\n","import React, { Component } from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nclass HeaderCard extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"card-header mb-3\"\r\n        style={{\r\n          fontSize: 30,\r\n          backgroundColor: \"#394867\",\r\n          borderTopLeftRadius: 10,\r\n          borderTopRightRadius: 10,\r\n          color: \"#ffffff\",\r\n        }}\r\n      >\r\n        <div className=\"row my-auto\">\r\n          <div className=\"col-lg-10 my-auto\">\r\n            <h4\r\n              style={{\r\n                fontSize: 25,\r\n                color: \"#ffffff\",\r\n              }}\r\n            >\r\n              {this.props.title}\r\n            </h4>\r\n          </div>\r\n          <div className=\"col-lg-2 text-right my-auto\">\r\n            <ReactTooltip id=\"reload\" type=\"dark\" effect=\"solid\">\r\n              <span>Reload</span>\r\n            </ReactTooltip>\r\n            <button\r\n              data-tip\r\n              data-for=\"reload\"\r\n              className=\"btn btn-success btn-small btn-circle my-auto\"\r\n              onClick={() => window.location.reload()}\r\n            >\r\n              <i className=\"fa fa-retweet\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderCard;\r\n","import React from \"react\";\r\nimport SelectSearch from \"react-select-search\";\r\n\r\nexport const renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  name,\r\n  limit,\r\n  readOnly,\r\n  placeholder,\r\n  search,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      id={label}\r\n      className=\"form-control\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n      placeholder={placeholder}\r\n      onKeyPress={(e) => {\r\n        e.key === \"Enter\" && e.preventDefault();\r\n      }}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nexport const renderFieldSelect = ({\r\n  input,\r\n  label,\r\n  options,\r\n  placeholder,\r\n  name,\r\n  disabled,\r\n  value,\r\n  readOnly,\r\n  autoComplete,\r\n  search,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <SelectSearch\r\n      {...input}\r\n      options={options}\r\n      search={search}\r\n      emptyMessage=\"Tidak Ada Data\"\r\n      id={label}\r\n      placeholder={placeholder || \"Silahkan Pilih\"}\r\n      disabled={disabled}\r\n      onKeyPress={(e) => {\r\n        e.key === \"Enter\" && e.preventDefault();\r\n      }}\r\n      autoComplete={autoComplete}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport empty from \"../Images/emptyTable.svg\";\r\n\r\nfunction EmptyTable(props) {\r\n  return (\r\n    <div className=\"col-lg-12\">\r\n      <div className=\"text-center\">\r\n        <img src={empty} width=\"250\" height=\"250\" alt=\"Empty\"></img>\r\n        <h5>{props.text}</h5>\r\n        {props.link !== undefined ? (\r\n          <Link to={props.link} replace>\r\n            <button className=\"btn btn-primary\">\r\n              <i className=\"fa fa-chevron-left mr-2\"></i>\r\n              {props.location}\r\n            </button>\r\n          </Link>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmptyTable;\r\n","import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport EmptyTable from \"./EmptyTable\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\nfunction GlobalTabel(props) {\r\n  let text = props.textEmpty;\r\n  let handleClick = props.handleClick;\r\n  let tambahData = props.tambahData;\r\n  let expandRow = props.expandRow;\r\n  let selectRow = props.selectRow;\r\n  let exportCSV = props.exportCSV;\r\n  let link = props.link;\r\n  let location = props.location;\r\n  return (\r\n    <ToolkitProvider\r\n      keyField={props.keyField}\r\n      data={props.data || []}\r\n      columns={props.columns}\r\n      search\r\n    >\r\n      {(props) => (\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <div className=\"text-left\">\r\n              <SearchBar {...props.searchProps} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <div className=\"text-right\">\r\n              {tambahData && (\r\n                <button\r\n                  onClick={handleClick}\r\n                  className=\"btn btn-primary\"\r\n                  type=\"button\"\r\n                >\r\n                  Tambah Data\r\n                  <i className=\"fa fa-plus ml-3\"></i>\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"col-12\">\r\n            <BootstrapTable\r\n              bootstrap4\r\n              pagination={paginationFactory()}\r\n              selectRow={selectRow}\r\n              expandRow={expandRow}\r\n              {...props.baseProps}\r\n              striped\r\n              noDataIndication={\r\n                <EmptyTable\r\n                  text={text || \"Tidak Ada Data\"}\r\n                  link={link}\r\n                  location={location}\r\n                />\r\n              }\r\n            />\r\n            <br />\r\n            {exportCSV && (\r\n              <ExportCSVButton {...props.csvProps}>\r\n                Export CSV!!\r\n              </ExportCSVButton>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </ToolkitProvider>\r\n  );\r\n}\r\n\r\nexport default GlobalTabel;\r\n","module.exports = __webpack_public_path__ + \"static/media/emptyTable.ffc2d7dc.svg\";","const validasiSaldoAwalPiutang = (value) => {\r\n  const errors = {};\r\n  if (!value.kode_customer) {\r\n    errors.kode_customer = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.no_bon) {\r\n    errors.no_bon = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.bruto) {\r\n    errors.bruto = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.netto) {\r\n    errors.netto = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.saldo_gr) {\r\n    errors.saldo_gr = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.saldo_rp) {\r\n    errors.saldo_rp = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.titip_gr) {\r\n    errors.titip_gr = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.titip_rp) {\r\n    errors.titip_rp = \"Tidak Boleh kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validasiSaldoAwalPiutang;\r\n"],"sourceRoot":""}