{"version":3,"sources":["Supervisory/FormCetakBarcodeModel.jsx","Supervisory/CetakBarcodeModel.jsx"],"names":["currencyMask","createNumberMask","prefix","suffix","locale","FormCetakBarcodeModel","props","state","kodeBarang","non_aksesoris","aksesoris","image","this","dispatch","getListBarang","change","netto","noFaktur","gross","discGlobalGr","toFixed","data","param","hasil","KodeBarangList","filter","kode_jenis","kode_kelompok","setState","kodeJenis","namaJenis","nama_jenis","kadarCetak","kadar_cetak","kadarJual","kadar_jual","harga_jual","kode_kategori","kode_intern","setKadar","AxiosMasterGet","then","res","setFocus","localStorage","getItem","onSubmit","handleSubmit","className","Field","name","label","type","readOnly","component","renderField","defaultValue","normalize","value","toUpperCase","String","renderFieldSelect","onChange","pilihBarang","onBlur","options","map","kode","width","height","src","alt","onclick1","htmlFor","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","bruto","kadarTransaksi","pkg","discGlobalPr","parseFloat","provinsi","initialValues","p","k","CetakBarcodeModel","str","substring","length","replace","simpan","qty","ongkos_rp","undefined","rp","disc_persen","kode_barang","AxiosMasterPost","NotifSucces","feedback","kode_barcode","document","getElementById","element","createElement","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","catch","err","NotifError","HeaderCard","title","id"],"mappings":"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","file":"static/js/113.bf16d78b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { renderField, renderFieldSelect } from \"../renderField\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getListBarang } from \"../actions/kodeBarangAction\";\r\nimport { setFocus } from \"../helper\";\r\nimport { AxiosMasterGet } from \"../Axios\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\n\r\nclass FormCetakBarcodeModel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      non_aksesoris: \"col-lg-12 row\",\r\n      aksesoris: \"col-lg-12 row d-none\",\r\n      image: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListBarang());\r\n    // getTimbangan(this.props.change);\r\n  }\r\n\r\n  onclick1() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n    this.props.change(\"gross\", this.props.gross);\r\n    this.props.change(\"discGlobalGr\", this.props.discGlobalGr);\r\n    this.props.change(\r\n      \"nettoDiscGlobalExt\",\r\n      (this.props.netto - this.props.discGlobalGr).toFixed(3)\r\n    );\r\n  }\r\n\r\n  pilihBarang(data) {\r\n    let param = data;\r\n    let hasil = this.props.KodeBarangList.filter(\r\n      (data) => data.kode_jenis === param\r\n    );\r\n    if (hasil[0].kode_kelompok === \"AKSESORIS\") {\r\n      this.setState({\r\n        non_aksesoris: \"col-lg-12 row d-none\",\r\n        aksesoris: \"col-lg-12 row \",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        non_aksesoris: \"col-lg-12 row \",\r\n        aksesoris: \"col-lg-12 row d-none\",\r\n      });\r\n    }\r\n    this.setState({\r\n      kodeJenis: hasil[0].kode_jenis,\r\n      namaJenis: hasil[0].nama_jenis,\r\n      kadarCetak: hasil[0].kadar_cetak,\r\n      kadarJual: hasil[0].kadar_jual,\r\n      harga_jual: hasil[0].harga_jual,\r\n    });\r\n    this.props.change(\"nama_model\", hasil[0].nama_jenis);\r\n    this.props.change(\"jenis_model\", hasil[0].kode_kategori);\r\n    this.props.change(\"kode_intern\", hasil[0].kode_intern);\r\n    this.props.change(\"kode_kelompok\", hasil[0].kode_kelompok);\r\n    this.setKadar();\r\n    AxiosMasterGet(\"jenis/get/by-kode-jenis/\" + param).then((res) => {\r\n      this.setState({\r\n        image: res.data.image,\r\n      });\r\n    });\r\n    setFocus(\"Plastik\");\r\n  }\r\n\r\n  setKadar() {\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarJual);\r\n    this.props.change(\"harga_jual\", this.state.harga_jual);\r\n  }\r\n\r\n  setBruto() {\r\n    this.props.change(\"bruto\", localStorage.getItem(\"Timbangan\"));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-lg-12 d-none\">\r\n            <Field\r\n              name=\"noFaktur\"\r\n              label={this.props.noFaktur}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              component={renderField}\r\n              defaultValue={this.props.noFaktur}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            {String(this.props.KodeBarangList) !== \"\" ? (\r\n              <Field\r\n                name=\"kode_barang\"\r\n                label=\"Kode Model\"\r\n                component={renderFieldSelect}\r\n                className=\"form-control\"\r\n                onChange={(data) => this.pilihBarang(data)}\r\n                onBlur={this.setKadar()}\r\n                options={this.props.KodeBarangList.filter(\r\n                  (data) =>\r\n                    data.kode_kelompok === \"PERHIASAN\" ||\r\n                    data.kode_kelompok === \"AKSESORIS\"\r\n                ).map((kode) => {\r\n                  let data = {\r\n                    value: kode.kode_jenis,\r\n                    name: kode.nama_jenis,\r\n                  };\r\n                  return data;\r\n                })}\r\n              />\r\n            ) : (\r\n              <Skeleton width={\"100%\"} height={50} />\r\n            )}\r\n          </div>\r\n          <div className=\"col-lg-6\"></div>\r\n          <div className=\"col-lg-12 row\">\r\n            <div className=\"col-lg-4\"></div>\r\n            <div className=\"col-lg-4 text-center\">\r\n              <img src={this.state.image} width=\"50%\" alt=\"Foto Barang\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12 row\">\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"nama_model\"\r\n                label=\"Nama Model\"\r\n                type=\"text\"\r\n                readOnly\r\n                component={renderField}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"jenis_model\"\r\n                label=\"Jenis\"\r\n                type=\"text\"\r\n                readOnly\r\n                component={renderField}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"kode_intern\"\r\n                label=\"Kode Intern\"\r\n                type=\"text\"\r\n                readOnly\r\n                component={renderField}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"kode_kelompok\"\r\n                label=\"Kode Kelompok\"\r\n                type=\"text\"\r\n                readOnly\r\n                component={renderField}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={this.state.non_aksesoris}>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"kadar\"\r\n                label=\"Cap Kode\"\r\n                type=\"number\"\r\n                component={renderField}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"p\"\r\n                label=\"Plastik\"\r\n                type=\"number\"\r\n                component={renderField}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"k\"\r\n                label=\"Kertas\"\r\n                type=\"number\"\r\n                component={renderField}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"pkg\"\r\n                label=\"Pkg (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                onBlur={() => this.onclick1()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"bruto\"\r\n                label=\"Berat (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                onChange={this.onclick1()}\r\n                // onChange={this.setBruto()}\r\n                // onBlur={this.setBruto()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"kadarTransaksi\"\r\n                label=\"Kode Tukar\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                onBlur={() => this.onclick1()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"netto\"\r\n                label=\"Netto (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"gross\"\r\n                label=\"Gross (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"discGlobalPr\"\r\n                label=\"Diskon (%)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                onBlur={() => this.onclick1()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"discGlobalGr\"\r\n                label=\"Diskon (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"nettoDiscGlobalExt\"\r\n                label=\"Netto - Diskon (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <label htmlFor=\"\">Ongkos (Rp)</label>\r\n              <Field\r\n                name=\"rp\"\r\n                component=\"input\"\r\n                type=\"tel\"\r\n                className=\"form-control\"\r\n                {...currencyMask}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={this.state.aksesoris}>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"qty\"\r\n                label=\"Qty\"\r\n                type=\"number\"\r\n                component={renderField}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <label htmlFor=\"\">Harga Jual</label>\r\n              <Field\r\n                name=\"harga_jual\"\r\n                component=\"input\"\r\n                type=\"tel\"\r\n                className=\"form-control\"\r\n                {...currencyMask}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormCetakBarcodeModel = reduxForm({\r\n  form: \"FormCetakBarcodeModel\",\r\n  enableReinitialize: true,\r\n})(FormCetakBarcodeModel);\r\nconst selector = formValueSelector(\"FormCetakBarcodeModel\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi, pkg, discGlobalPr } = selector(\r\n    state,\r\n    \"bruto\",\r\n    \"kadarTransaksi\",\r\n    \"pkg\",\r\n    \"discGlobalPr\"\r\n  );\r\n  return {\r\n    netto: (\r\n      parseFloat(bruto || 0) *\r\n      (parseFloat(kadarTransaksi || 0) / 100)\r\n    ).toFixed(3),\r\n    gross: parseFloat(bruto || 0) + parseFloat(pkg || 0),\r\n    discGlobalGr: (\r\n      parseFloat(bruto || 0) *\r\n      (parseFloat(discGlobalPr || 0) / 100)\r\n    ).toFixed(3),\r\n    KodeBarangList: state.provinsi.kodeBarang,\r\n    initialValues: {\r\n      discGlobalPr: 0,\r\n      p: 0,\r\n      k: 0,\r\n      pkg: 0,\r\n      bruto: 0,\r\n    },\r\n  };\r\n})(FormCetakBarcodeModel);\r\n","import React, { Component } from \"react\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport { getListBarang } from \"../actions/kodeBarangAction\";\r\nimport { connect } from \"react-redux\";\r\nimport FormCetakBarcodeModel from \"./FormCetakBarcodeModel\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\nimport { NotifError, NotifSucces } from \"../GlobalComponent/notification\";\r\n\r\nclass CetakBarcodeModel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListBarang());\r\n  }\r\n\r\n  paddingNumberGW(str) {\r\n    var pad = \"0000000\";\r\n    var ans = pad.substring(0, pad.length - str.length) + str;\r\n    return ans.replace(\".\", \"\");\r\n  }\r\n  paddingNumberNW(str) {\r\n    var pad = \"000000\";\r\n    var ans = pad.substring(0, pad.length - str.length) + str;\r\n    return ans.replace(\".\", \"\");\r\n  }\r\n  handleSubmit(data) {\r\n    var simpan = {\r\n      qty: data.qty || 1,\r\n      k: parseFloat(data.k || 0) || 0,\r\n      ongkos_rp: parseFloat(data.rp === undefined ? 0 : data.rp), //ongkos\r\n      bruto: parseFloat(data.bruto) || 0,\r\n      disc_persen: data.discGlobalPr || 0,\r\n      kode_jenis: data.kode_barang, //kodebarang\r\n      p: parseFloat(data.p || 0),\r\n      pkg: parseFloat(data.pkg || 0),\r\n      harga_jual : data.harga_jual === \"undefined\" ? 0 : data.harga_jual || 0\r\n    };\r\n    AxiosMasterPost(\"barcode-model/add\", simpan).then((res)=> {\r\n      NotifSucces(\"Barcode Berhasil Disimpan\")\r\n      let feedback = `\u0002\u001bA\u001bEX0\u001bAR\u001bA3H001V001\u001bCS3\u001b#E5A\u001bPM0\u001bPO3+00\u001bYE0\u001bIG1\u001bPH0\u001bA102000671\u001bZ\u0003\u001b##\u0003\u001c     \u0001                       \u0002\u001bA\u001bPS\u001bWKesther grosir LB`;\r\n      feedback += `\u001b%2\u001bH0637\u001bV0187\u001bL0102\u001bP02\u001bS${res.data.nama_jenis}`;\r\n      // BARCODE\r\n      feedback += `\u001b%2\u001bH0622\u001bV0158\u001bBG01067>H${res.data.kode_barcode}`;\r\n      feedback += `\u001b%2\u001bH0622\u001bV0087\u001bL0101\u001bP02\u001bS${res.data.kode_barcode}`;\r\n      // BARCODE\r\n      // feedback += `\u001b%2\u001bH0650\u001bV0058\u001bL0101\u001bP02\u001bS${\"KC\"}\u001b%2\u001bH0622\u001bV0065\u001bL0102\u001bP02\u001bS${parseFloat(\r\n      //   data.kadar_cetak || 0\r\n      // )}`;\r\n      feedback += `\u001b%2\u001bH0650\u001bV0028\u001bL0101\u001bP02\u001bS${\"Bruto\"}\u001b%2\u001bH0622\u001bV0038\u001bL0102\u001bP02\u001bS${parseFloat(\r\n        data.bruto || 0\r\n      )}`;\r\n      feedback += `\u001b&01NiceOvl\u001bZ\u0003\u0002\u001bA\u001b/01\u001b~A0\u001bQ1\u001bZ\u0003\u001b##\u0004  \u001b##\u0005`;\r\n      document.getElementById(\"myInput\").value = feedback;\r\n      const element = document.createElement(\"a\");\r\n      const file = new Blob([document.getElementById(\"myInput\").value], {\r\n        type: \"text/plain;charset=utf-8\",\r\n      });\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = \"autoprint_barcode.txt\";\r\n      document.body.appendChild(element);\r\n      element.click();\r\n    }).catch((err)=> NotifError(\"Terjadi Kesalahan saat menyimpan data\"))\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"card\">\r\n          <HeaderCard title=\"Cetak Barcode Model\" />\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                {/* BARCODE 1 */}\r\n                {/* <CetakBarcodeModelHead\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                /> */}\r\n                <FormCetakBarcodeModel onSubmit={(data) => this.handleSubmit(data)} />\r\n              </div>\r\n              <div className=\"d-none\">\r\n                <textarea id=\"myInput\"></textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state) => {\r\n  return {\r\n    kodeBarang: state.provinsi.kodeBarang,\r\n  }\r\n})(CetakBarcodeModel);\r\n"],"sourceRoot":""}