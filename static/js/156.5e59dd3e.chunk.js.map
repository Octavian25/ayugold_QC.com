{"version":3,"sources":["Transaksi/Component/FormTranskasiReturn.jsx"],"names":["currencyMask","createNumberMask","prefix","suffix","locale","FormTransaksiReturn","props","handleBarcode","e","clearTimeout","delay","setTimeout","hasil","target","value","length","AxiosMasterGet","then","res","data","detail_barang","forEach","handleBarcodeSet","kode_barcode_set","split","change","setState","kodeJenis","kadarCetak","kadarJual","state","kodeBarang","no_aksesoris","aksesoris","isBarangToko","this","dispatch","getListBarang","netto","noFaktur","gross","discGlobalGr","toFixed","undefined","kondisi_barang","warning","param","KodeBarangList","filter","kode_jenis","customer","localStorage","getItem","return_normal","kode_kelompok","namaJenis","nama_jenis","kode_tukar_normal","return_rongsok","kodeKategori","kode_kategori","namaKategori","nama_kategori","harga_jual","harga_aksesoris","setKadar","setFocus","barcode","simpan","netto_disc","parseFloat","qty","k","ongkos_rp","kadar_cetak","toString","disc_persen","kadar_jual","kadar_level2","level2","kadar_level3","level3","kadar_modal","kadar_beli","kode_barcode","p","disc","pkg","bruto","simpan_level2","calculate_barcode_level2","simpan_level3","calculate_barcode_level3","array","JSON","parse","array_level2","array_level3","push","GrandTotalNetto","map","list","reduce","a","b","setItem","stringify","Swal","fire","position","icon","text","showConfirmButton","timer","getListTransaksiPenjualan","getTotalNW","reset","hideModal","getNetto","discGlobalPr","catch","err","gagal","onSubmit","handleSubmit","className","data-for","type","data-tip","onClick","class","aria-hidden","id","effect","name","label","readOnly","component","renderField","defaultValue","normalize","toUpperCase","String","renderFieldSelect","onChange","options","width","height","pilihBarang","onBlur","kode","placeholder","onclick1","htmlFor","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","kadarTransaksi","provinsi","initialValues","type_barang"],"mappings":"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","file":"static/js/156.5e59dd3e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm, formValueSelector, reset } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getListBarang } from \"../../actions/kodeBarangAction\";\r\nimport {\r\n  calculate_barcode_level2,\r\n  calculate_barcode_level3,\r\n  setFocus,\r\n} from \"../../helper\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getListTransaksiPenjualan } from \"../../actions/transaksiPenjualanAction\";\r\nimport { getTotalNW } from \"../../actions/returnPenjualanAction\";\r\nimport { gagal, warning } from \"../../Alert\";\r\nimport { getNetto } from \"../../actions/LogicAction\";\r\nimport { hideModal } from \"../../actions/ModalAction\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\n\r\nclass FormTransaksiReturn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      no_aksesoris: \"col-lg-12 row\",\r\n      aksesoris: \"col-lg-12 row d-none\",\r\n      isBarangToko : true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListBarang());\r\n    // getTimbangan(this.props.change);\r\n  }\r\n\r\n  onclick1() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n    this.props.change(\"gross\", this.props.gross);\r\n    this.props.change(\"discGlobalGr\", this.props.discGlobalGr);\r\n    this.props.change(\r\n      \"nettoDiscGlobalExt\",\r\n      (this.props.netto - this.props.discGlobalGr).toFixed(3)\r\n    );\r\n  }\r\n\r\n  pilihBarang(data) {\r\n    if (\r\n      this.state.kondisi_barang === undefined ||\r\n      this.state.kondisi_barang === \"\"\r\n    ) {\r\n      warning(\"Mohon pilih kondisi barang dahulu\");\r\n      return false;\r\n    }\r\n    let param = data;\r\n    let hasil = this.props.KodeBarangList.filter(\r\n      (data) => data.kode_jenis === param\r\n    );\r\n    let customer = localStorage.getItem(\"customer_1\") || \"-\";\r\n    AxiosMasterGet(\r\n      `/kelompok-harga/get/by-jenis-and-customer/${customer}&${data}&PUSAT`\r\n    ).then((res) => {\r\n      if (res.data?.return_normal === undefined) {\r\n        warning(\r\n          \"Kadar return belum ditentukan, silahkan tentukan di kelompok harga\"\r\n        );\r\n        this.props.change(\"kodeBarang\");\r\n        return false;\r\n      }\r\n      if (res.data?.kode_kelompok === \"AKSESORIS\") {\r\n        this.setState({\r\n          no_aksesoris: \"col-lg-12 row d-none\",\r\n          aksesoris: \"col-lg-12 row\",\r\n        });\r\n      } else {\r\n        this.setState({\r\n          no_aksesoris: \"col-lg-12 row\",\r\n          aksesoris: \"col-lg-12 row d-none\",\r\n        });\r\n      }\r\n      this.setState({\r\n        kodeJenis: hasil[0].kode_jenis,\r\n        namaJenis: hasil[0].nama_jenis,\r\n        kadarCetak: res.data?.kode_tukar_normal,\r\n        kadarJual:\r\n          this.state.kondisi_barang === \"NORMAL\"\r\n            ? res.data?.return_normal\r\n            : res.data?.return_rongsok,\r\n        kodeKategori: res.data?.kode_kategori,\r\n        namaKategori: res.data?.nama_kategori,\r\n        harga_jual: res.data?.harga_aksesoris,\r\n      });\r\n      this.setKadar();\r\n      setFocus(\"P\");\r\n    });\r\n  }\r\n\r\n  setKadar() {\r\n    this.props.change(\"keterangan\", this.state.namaKategori);\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarJual);\r\n    this.props.change(\"kodeKategori\", this.state.kodeKategori);\r\n    this.props.change(\"namaKategori\", this.state.namaKategori);\r\n    this.props.change(\"harga_jual\", this.state.harga_jual);\r\n  }\r\n\r\n  setBruto() {\r\n    this.props.change(\"bruto\", localStorage.getItem(\"Timbangan\"));\r\n  }\r\n\r\n  handleBarcode = () => (e) => {\r\n    clearTimeout(this.delay);\r\n    this.delay = setTimeout(() => {\r\n      let hasil = e.target.value;\r\n      if (hasil.length === 14) {\r\n        AxiosMasterGet(\r\n          \"barang-set/get-by-kode-barcode-set-active/\" + hasil\r\n        ).then((res) => {\r\n          res.data.detail_barang.forEach((data) => {\r\n            this.handleBarcodeSet(data, res.data.kode_barcode_set);\r\n          });\r\n        });\r\n        return true;\r\n      } else {\r\n        let split = hasil.split(\"X\");\r\n        this.props.change(\"kodeBarang\", split[0]);\r\n        this.setState({\r\n          kodeJenis: split[0],\r\n          kadarCetak: split[1],\r\n          kadarJual: split[2],\r\n        });\r\n      }\r\n    }, 1500);\r\n  };\r\n\r\n  handleBarcodeSet(data, barcode) {\r\n    let param = data.kode_jenis;\r\n    let hasil = this.props.KodeBarangList.filter(\r\n      (data) => data.kode_jenis === param\r\n    );\r\n    AxiosMasterGet(`jenis/get/by-kode-jenis/${data.kode_jenis}`)\r\n      .then((res) => {\r\n        var simpan = {\r\n          netto_disc: parseFloat(data.netto_disc || 0).toFixed(3),\r\n          gross: parseFloat(data.gross || 0).toFixed(3), //berat + bungkus\r\n          netto: parseFloat(data.netto || 0).toFixed(3), //murni\r\n          qty: 1,\r\n          k: parseFloat(data.k || 0),\r\n          ongkos_rp: parseFloat(data.ongkos_rp || 0), //ongkos\r\n          kadar_cetak: (hasil[0].kadar_cetak || 0).toString(),\r\n          disc_persen: data.disc_persen || 0,\r\n          kadar_jual: parseFloat(data.kadar_jual || 0), //harga%\r\n          kadar_level2: res.data.level2,\r\n          kadar_level3: res.data.level3,\r\n          kadar_modal: hasil[0].kadar_beli, //harga%\r\n          kode_jenis: hasil[0].kode_jenis, //kodebarang\r\n          kode_barcode: \"-\",\r\n          kode_barcode_set: barcode,\r\n          p: parseFloat(data.p || 0),\r\n          disc: data.disc || 0,\r\n          pkg: parseFloat(data.pkg || 0),\r\n          bruto: parseFloat(data.bruto || 0).toFixed(3), //berat\r\n        };\r\n        var simpan_level2 = calculate_barcode_level2({\r\n          data: data,\r\n          hasil: hasil,\r\n          res: res,\r\n          kode_barcode_set: barcode,\r\n        });\r\n        var simpan_level3 = calculate_barcode_level3({\r\n          data: data,\r\n          res: res,\r\n          hasil: hasil,\r\n          kode_barcode_set: barcode,\r\n        });\r\n\r\n        var array =\r\n          JSON.parse(localStorage.getItem(\"transaksiPenjualan\")) || [];\r\n        var array_level2 =\r\n          JSON.parse(localStorage.getItem(\"transaksiPenjualan_level2\")) || [];\r\n        var array_level3 =\r\n          JSON.parse(localStorage.getItem(\"transaksiPenjualan_level3\")) || [];\r\n        array.push(simpan);\r\n        array_level2.push(simpan_level2);\r\n        array_level3.push(simpan_level3);\r\n        var GrandTotalNetto = array\r\n          .map((list) => parseFloat(list.netto_disc))\r\n          .reduce((a, b) => a + b, 0);\r\n        localStorage.setItem(\"GrandTotalNetto\", GrandTotalNetto);\r\n        localStorage.setItem(\"transaksiPenjualan\", JSON.stringify(array));\r\n        localStorage.setItem(\r\n          \"transaksiPenjualan_level2\",\r\n          JSON.stringify(array_level2)\r\n        );\r\n        localStorage.setItem(\r\n          \"transaksiPenjualan_level3\",\r\n          JSON.stringify(array_level3)\r\n        );\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Data Berhasil Ditambahkan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n        this.props.dispatch(getListTransaksiPenjualan());\r\n        this.props.dispatch(getTotalNW());\r\n        this.props.dispatch(reset(\"FormTransaksiReturn\"));\r\n        this.props.dispatch(hideModal());\r\n        this.props.dispatch(getNetto(\"transaksiPenjualan\"));\r\n        this.setState({\r\n          discGlobalGr:\r\n            (parseFloat(0) / 100) *\r\n            parseFloat(localStorage.getItem(\"GrandTotalNetto\")),\r\n          discGlobalPr: 0,\r\n          GrandTotalNetto: (\r\n            parseFloat(localStorage.getItem(\"GrandTotalNetto\")) - 0\r\n          ).toFixed(3),\r\n        });\r\n      })\r\n      .catch((err) =>\r\n        gagal(\"Kode Kelompok Belum Disesuaikan, Mohon Sesuaikan Dahulu\")\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                data-for=\"refresh\"\r\n                className=\"btn btn-circle btn-primary\"\r\n                type=\"button\"\r\n                data-tip\r\n                onClick={() =>\r\n                  this.props.dispatch(reset(\"FormTransaksiReturn\"))\r\n                }\r\n              >\r\n                <i class=\"fa fa-retweet\" aria-hidden=\"true\"></i>\r\n                <ReactTooltip id=\"refresh\" type=\"dark\" effect=\"solid\">\r\n                  <span>Refresh</span>\r\n                </ReactTooltip>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12 col-lg-12 d-none\">\r\n            <Field\r\n              name=\"noFaktur\"\r\n              label={this.props.noFaktur}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              component={renderField}\r\n              defaultValue={this.props.noFaktur}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 mb-5 justify-content-center\">\r\n          <div className=\"col-md-3 col-lg-4\">\r\n            {String(this.props.KodeBarangList) !== \"\" ? (\r\n              <Field\r\n                name=\"type_barang\"\r\n                label=\"Type Barang\"\r\n                component={renderFieldSelect}\r\n                className=\"form-control\"\r\n                onChange={(data) =>\r\n                  {\r\n                    if(data === \"BARANG NON AYU\"){\r\n                      this.props.dispatch(reset(\"FormTransaksiReturn\"))\r\n                    }\r\n                    this.setState({\r\n                      isBarangToko: data === \"BARANG AYU\",\r\n                    })\r\n                   }\r\n                }\r\n                options={[\r\n                  {\r\n                    value: \"BARANG AYU\",\r\n                    name: \"BARANG AYU\",\r\n                  },\r\n                  {\r\n                    value: \"BARANG NON AYU\",\r\n                    name: \"BARANG NON AYU\",\r\n                  },\r\n                ]}\r\n              />\r\n            ) : (\r\n              <Skeleton width={\"100%\"} height={50} />\r\n            )}\r\n          </div>\r\n          </div>\r\n          <div  className={\r\n                  this.state.isBarangToko\r\n                    ? \"col-md-3 form-group\"\r\n                    : \"col-md-3 form-group d-none\"\r\n                }>\r\n            {String(this.props.KodeBarangList) !== \"\" ? (\r\n              <Field\r\n                name=\"kondisi_barang\"\r\n                label=\"Kondisi Barang\"\r\n                component={renderFieldSelect}\r\n                className=\"form-control\"\r\n                onChange={(data) =>\r\n                  this.setState({\r\n                    kondisi_barang: data,\r\n                  })\r\n                }\r\n                options={[\r\n                  {\r\n                    value: \"NORMAL\",\r\n                    name: \"NORMAL\",\r\n                  },\r\n                  {\r\n                    value: \"RONGSOK\",\r\n                    name: \"RONGSOK\",\r\n                  },\r\n                ]}\r\n              />\r\n            ) : (\r\n              <Skeleton width={\"100%\"} height={50} />\r\n            )}\r\n          </div>\r\n          <div  className={\r\n                  this.state.isBarangToko\r\n                    ? \"col-md-4 form-group\"\r\n                    : \"col-md-4 form-group d-none\"\r\n                }>\r\n            {String(this.props.KodeBarangList) !== \"\" ? (\r\n              <Field\r\n                name=\"kodeBarang\"\r\n                label=\"Kode Model\"\r\n                component={renderFieldSelect}\r\n                className=\"form-control\"\r\n                onChange={(data) => this.pilihBarang(data)}\r\n                onBlur={this.setKadar()}\r\n                options={this.props.KodeBarangList.filter(\r\n                  (data) =>\r\n                    data.kode_kelompok === \"PERHIASAN\" ||\r\n                    data.kode_kelompok === \"AKSESORIS\"\r\n                ).map((kode) => {\r\n                  let data = {\r\n                    value: kode.kode_jenis,\r\n                    name: kode.nama_jenis,\r\n                  };\r\n                  return data;\r\n                })}\r\n              />\r\n            ) : (\r\n              <Skeleton width={\"100%\"} height={50} />\r\n            )}\r\n          </div>\r\n          <div\r\n            className={\r\n              this.state.no_aksesoris !== \"col-lg-12 row\"\r\n                ? \"col-md-3 col-lg-3 d-none\"\r\n                : this.state.isBarangToko ? \"col-md-3 col-lg-3\" : \"col-md-3 col-lg-3 d-none\"\r\n            }\r\n          >\r\n            <Field\r\n              name=\"kode_barocde\"\r\n              label=\"Kode Barcode\"\r\n              type=\"text\"\r\n              component={renderField}\r\n              placeholder=\"Biarkan Kosong jika Tidak Digunakan\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              onChange={this.handleBarcode()}\r\n            />\r\n          </div>\r\n          <div\r\n            className={\r\n              this.state.no_aksesoris === \"col-lg-12 row\"\r\n                ? \"col-md-2 col-lg-2 d-none\"\r\n                : \"col-md-2 col-lg-2 d-none\"\r\n            }\r\n          >\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kode Tukar\"\r\n              type=\"number\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3 d-none\">\r\n            <Field\r\n              name=\"kodeKategori\"\r\n              label=\"Kode Tukar\"\r\n              type=\"number\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3 d-none\">\r\n            <Field\r\n              name=\"namaKategori\"\r\n              label=\"Kode Tukar\"\r\n              type=\"number\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className={this.state.no_aksesoris}>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field name=\"p\" label=\"P\" type=\"number\" component={renderField} />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field name=\"k\" label=\"K\" type=\"number\" component={renderField} />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"pkg\"\r\n                label=\"Pkg (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                onBlur={() => this.onclick1()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"bruto\"\r\n                label=\"Berat (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                onChange={this.onclick1()}\r\n                // onChange={this.setBruto()}\r\n                // onBlur={this.setBruto()}\r\n              />\r\n            </div>\r\n            <div  className={\r\n                  this.state.isBarangToko\r\n                    ? \"col-md-3 form-group\"\r\n                    : \"col-md-3 form-group d-none\"\r\n                }>\r\n              <Field\r\n                name=\"kadarTransaksi\"\r\n                label=\"Kode Tukar\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                onBlur={() => this.onclick1()}\r\n              />\r\n            </div>\r\n            <div className={\r\n                  this.state.isBarangToko\r\n                    ? \"col-md-3 form-group\"\r\n                    : \"col-md-3 form-group d-none\"\r\n                }>\r\n              <Field\r\n                name=\"netto\"\r\n                label=\"Netto (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className={\r\n                  this.state.isBarangToko\r\n                    ? \"col-md-3 form-group\"\r\n                    : \"col-md-3 form-group d-none\"\r\n                }>\r\n              <Field\r\n                name=\"gross\"\r\n                label=\"Gross (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className={\r\n                  this.state.isBarangToko\r\n                    ? \"col-md-3 form-group\"\r\n                    : \"col-md-3 form-group d-none\"\r\n                }>\r\n              <Field\r\n                name=\"discGlobalPr\"\r\n                label=\"Diskon (%)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                onBlur={() => this.onclick1()}\r\n              />\r\n            </div>\r\n            <div className={\r\n                  this.state.isBarangToko\r\n                    ? \"col-md-3 form-group\"\r\n                    : \"col-md-3 form-group d-none\"\r\n                }>\r\n              <Field\r\n                name=\"discGlobalGr\"\r\n                label=\"Diskon (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className={\r\n                  this.state.isBarangToko\r\n                    ? \"col-md-3 form-group\"\r\n                    : \"col-md-3 form-group d-none\"\r\n                }>\r\n              <Field\r\n                name=\"nettoDiscGlobalExt\"\r\n                label=\"Netto - Diskon (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className={\r\n                  this.state.isBarangToko\r\n                    ? \"col-md-3 form-group\"\r\n                    : \"col-md-3 form-group d-none\"\r\n                }>\r\n              <label htmlFor=\"\">Ongkos (Rp)</label>\r\n              <Field\r\n                name=\"rp\"\r\n                component=\"input\"\r\n                type=\"tel\"\r\n                className=\"form-control\"\r\n                {...currencyMask}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={this.state.aksesoris}>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"qty\"\r\n                label=\"Qty\"\r\n                type=\"number\"\r\n                component={renderField}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <label htmlFor=\"\">Harga Jual</label>\r\n              <Field\r\n                name=\"harga_jual\"\r\n                component=\"input\"\r\n                type=\"tel\"\r\n                className=\"form-control\"\r\n                {...currencyMask}\r\n              />\r\n            </div>\r\n          </div>\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormTransaksiReturn = reduxForm({\r\n  form: \"FormTransaksiReturn\",\r\n  enableReinitialize: true,\r\n})(FormTransaksiReturn);\r\nconst selector = formValueSelector(\"FormTransaksiReturn\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi, pkg, discGlobalPr } = selector(\r\n    state,\r\n    \"bruto\",\r\n    \"kadarTransaksi\",\r\n    \"pkg\",\r\n    \"discGlobalPr\"\r\n  );\r\n  return {\r\n    netto: (\r\n      parseFloat(bruto || 0) *\r\n      (parseFloat(kadarTransaksi || 0) / 100)\r\n    ).toFixed(3),\r\n    gross: parseFloat(bruto || 0) + parseFloat(pkg || 0),\r\n    discGlobalGr: (\r\n      parseFloat(bruto || 0) *\r\n      (parseFloat(discGlobalPr || 0) / 100)\r\n    ).toFixed(3),\r\n    KodeBarangList: state.provinsi.kodeBarang,\r\n    initialValues: {\r\n      discGlobalPr: 0,\r\n      p: 0,\r\n      k: 0,\r\n      pkg: 0,\r\n      bruto: 0,\r\n      type_barang: \"BARANG AYU\"\r\n    },\r\n  };\r\n})(FormTransaksiReturn);\r\n"],"sourceRoot":""}