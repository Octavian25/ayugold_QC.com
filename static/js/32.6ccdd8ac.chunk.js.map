{"version":3,"sources":["DataMaster/Component/FormAreaEdit.jsx","DataMaster/Area.jsx","Validations/validationProvinsi.js","DataMaster/Component/AreaProvinsiKota.jsx"],"names":["FormAreaEdit","props","state","response","status","listKota","AxiosMasterGet","then","res","setState","data","catch","err","console","log","kodenya","this","kode","namanya","nama","onSubmit","handleSubmit","className","Field","name","replace","type","normalize","value","toUpperCase","component","renderField","readOnly","label","String","renderFieldSelect","kode_ext","from","options","map","obj","kode_kota","nama_kota","placeholder","id","disabled","onSend","aria-hidden","class","Component","reduxForm","form","validate","validationProvinsi","enableReinitialize","connect","initialValues","kodePos","provinsi","editArea","Status","KodeKecamatan","kodeArea","NamaKecamatan","namaArea","kodeKota","defaultSorted","dataField","order","Area","updateStatus","input","dispatch","getareaList","AreaArray","isEdit","columns","text","sort","headerStyle","width","csvExport","formatter","rowContent","row","data-tut","onClick","kode_kecamatan","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","AxiosMasterDelete","hideModal","berhasil","gagal","editarea","nama_kecamatan","kode_pos","editModal","hasil","dataEdit","progressSend","AxiosMasterPost","finishSend","reset","handleReactive","AxiosMasterPut","includes","reactive","showModal","style","color","alert","role","data-dismiss","aria-label","TourGuide","tourConfig","HeaderCard","content","handleEdit","AreaProvinsiKota","tambahModal","areaList","Table","namaKey","error","src","notrespond","alt","height","area","values","errors","KodeProvinsi","length","NamaProvinsi","KodeKota","kodeProvinsi","NamaKota","KodeArea","NamaArea","KodeLokasi","NamaLokasi","listProvinsi","isiNama","isikode","LogData","limit","kode_provinsi","nama_provinsi","config","Error","editProvinsi"],"mappings":"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","file":"static/js/32.6ccdd8ac.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validationProvinsi } from \"../../Validations/validationProvinsi\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { SkeletonLoading } from \"../../helper\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    initialValues: {\r\n      kodePos: state.provinsi.editArea.Status,\r\n      KodeKecamatan: state.provinsi.editArea.kodeArea,\r\n      NamaKecamatan: state.provinsi.editArea.namaArea,\r\n      kodeKota: state.provinsi.editArea.kodeKota,\r\n    },\r\n  };\r\n};\r\nclass FormAreaEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      status: \"AKTIF\",\r\n      listKota: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"kota/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKota: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    var kodenya = this.props.kode;\r\n    var namanya = this.props.nama;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <Field\r\n                name={kodenya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                readOnly={true}\r\n                label={this.props.kode}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div className=\"form-group\">\r\n                {String(this.state.listKota) !== \"\" ? (\r\n                  <Field\r\n                    component={renderFieldSelect}\r\n                    label={this.props.kode_ext}\r\n                    name={\r\n                      this.props.from === \"kota\" ? \"kodeProvinsi\" : \"kodeKota\"\r\n                    }\r\n                    value={this.props.status}\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    options={this.state.listKota.map((obj) => {\r\n                      var payload = {\r\n                        value: obj.kode_kota,\r\n                        name: obj.nama_kota,\r\n                      };\r\n                      return payload;\r\n                    })}\r\n                  ></Field>\r\n                ) : (\r\n                  <SkeletonLoading label={this.props.kode_ext} />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <Field\r\n                name={namanya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label={this.props.nama}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"kodePos\"\r\n                component={renderField}\r\n                type=\"text\"\r\n                label=\"Kode Pos\"\r\n                placeholder=\"Masukan Kode Pos\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  id=\"simpan\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Selesai\r\n                  <i class=\"fa fa-paper-plane ml-3\" aria-hidden=\"true\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormAreaEdit = reduxForm({\r\n  form: \"KotaEdit\", // a unique identifier for this form\r\n  validate: validationProvinsi, // <--- validation function given to redux-form\r\n  enableReinitialize: true,\r\n})(FormAreaEdit);\r\nexport default connect(maptoState, null)(FormAreaEdit);\r\n","import React, { Component } from \"react\";\r\nimport AreaProvinsiKota from \"./Component/AreaProvinsiKota\";\r\nimport Table from \"./Component/Table\";\r\nimport { connect } from \"react-redux\";\r\nimport notrespond from \"../Images/500.svg\";\r\nimport { editarea, getareaList } from \"../actions/areaAction\";\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport FormAreaEdit from \"./Component/FormAreaEdit\";\r\nimport { reset } from \"redux-form\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { AxiosMasterDelete, AxiosMasterPost, AxiosMasterPut } from \"../Axios\";\r\nimport { berhasil, gagal, reactive } from \"../Alert\";\r\nimport { hideModal, showModal } from \"../actions/ModalAction\";\r\nimport ModalGlobal from \"./Component/ModalMasterData\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport TourGuide from \"../TourGuide\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\n\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      AxiosMasterDelete(\"kecamatan/delete/\" + kode)\r\n        .then(() => dispatch(hideModal()))\r\n        .then((res) => berhasil(\"Data Berhasil Dihapus!\"))\r\n        .catch((err) => gagal(\"Data Gagal Dihapus!\"))\r\n        .then(() => dispatch(getareaList()));\r\n    }\r\n  });\r\n}\r\n\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"kodeArea\",\r\n    order: \"asc\",\r\n  },\r\n];\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    areaList: state.provinsi.area,\r\n    alert: state.provinsi.alert,\r\n    onSend: state.provinsi.onSend,\r\n    error: state.provinsi.error,\r\n  };\r\n};\r\n\r\nclass Area extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Area: [],\r\n      AreaArray: [],\r\n      response: \"\",\r\n      isEdit: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_kecamatan\",\r\n          text: \"Kode Kecamatan\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"15%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"nama_kecamatan\",\r\n          text: \"Nama Kecamatan\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"kode_pos\",\r\n          text: \"Kode Pos\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"kode_kota\",\r\n          text: \"Kode Kota\",\r\n          sort: true,\r\n        },\r\n\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  data-tut=\"reactour_3\"\r\n                  onClick={() => hapus(this.props.dispatch, row.kode_kecamatan)}\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-tut=\"reactour_4\"\r\n                  onClick={() =>\r\n                    this.props.dispatch(\r\n                      editarea(\r\n                        row.kode_kecamatan,\r\n                        row.nama_kecamatan,\r\n                        row.kode_kota,\r\n                        row.kode_pos,\r\n                        this.editModal()\r\n                      )\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                  EDIT\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getareaList());\r\n  }\r\n\r\n  updateStatus = (input) => {\r\n    console.log(input);\r\n    this.setState({\r\n      response: input,\r\n    });\r\n    this.props.dispatch(getareaList());\r\n  };\r\n\r\n  handleSubmit(hasil) {\r\n    let data = {\r\n      nama_kecamatan: hasil.NamaKecamatan,\r\n      kode_kecamatan: hasil.KodeKecamatan,\r\n      kode_kota: hasil.kodeKota,\r\n      kode_pos: hasil.kodePos,\r\n    };\r\n    let dataEdit = {\r\n      nama_kecamatan: hasil.NamaKecamatan,\r\n      kode_kota: hasil.kodeKota,\r\n      kode_pos: hasil.kodePos,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    console.log(data);\r\n    AxiosMasterPost(\"kecamatan/add\", data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Disimpan!\")\r\n          .then(() => this.props.dispatch(getareaList()))\r\n          .then(() => this.props.dispatch(reset(\"Provinsi\")))\r\n      )\r\n      .catch((err) => this.handleReactive(err, hasil.KodeKecamatan, dataEdit));\r\n  }\r\n\r\n  handleEdit(hasil) {\r\n    const data = {\r\n      nama_kecamatan: hasil.NamaKecamatan,\r\n      kode_kota: hasil.kodeKota,\r\n      kode_pos: hasil.kodePos,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    // return false;\r\n    AxiosMasterPut(\"kecamatan/edit/\" + hasil.KodeKecamatan, data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Diubah\")\r\n          .then(() => this.props.dispatch(getareaList()))\r\n          .then(() => this.props.dispatch(reset(\"Provinsi\")))\r\n      )\r\n      .catch((err) => gagal(err?.response.data));\r\n  }\r\n  handleReactive(err, kode, data) {\r\n    this.props.dispatch(hideModal());\r\n    let error = err.response.data;\r\n    let check = error.includes(\"deleted\");\r\n    check\r\n      ? reactive(\r\n          err,\r\n          kode,\r\n          \"kecamatan/reactive/\",\r\n          data,\r\n          \"kecamatan/edit/\"\r\n        ).then(() => this.props.dispatch(getareaList()))\r\n      : gagal(\"Data Gagal Ditambahkan\");\r\n  }\r\n  tambahModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  editModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div id=\"notif_alert\" className={this.props.alert} role=\"alert\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n          <strong>Error - </strong> Tidak Bisa Mengambil Data\r\n        </div>\r\n        <TourGuide\r\n          tourConfig={[\r\n            `Untuk Menambahkan Data Kecamatan, Tekan Tombol ini Dan Isi kolom yang disediakan`,\r\n            `Ini adalah data Kecamatan yang sudah tersimpan`,\r\n            `Ini adalah tombol untuk menghapus data pada baris yang dipilih`,\r\n            `Ini adalah tombol untuk mengubah data pada baris yang dipilih`,\r\n          ]}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\" Data Kecamatan\" />\r\n              <div className=\"card-body\">\r\n                <ModalGlobal\r\n                  content={\r\n                    this.state.isEdit ? (\r\n                      <FormAreaEdit\r\n                        nama=\"Nama Kecamatan\"\r\n                        kode=\"Kode Kecamatan\"\r\n                        kode_ext=\"Nama Kota\"\r\n                        onSubmit={(data) => this.handleEdit(data)}\r\n                        from=\"area\"\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    ) : (\r\n                      <AreaProvinsiKota\r\n                        nama=\"Nama Kecamatan\"\r\n                        kode=\"Kode Kecamatan\"\r\n                        kode_ext=\"Nama Kota\"\r\n                        updateStatus={this.updateStatus}\r\n                        onSubmit={(data) => this.handleSubmit(data)}\r\n                        from=\"area\"\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    )\r\n                  }\r\n                  title={\r\n                    this.state.isEdit\r\n                      ? \"Edit Data Kecamatan\"\r\n                      : \"Tambah Data Kecamatan\"\r\n                  }\r\n                />\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      name=\"simpan\"\r\n                      id=\"simpan\"\r\n                      type=\"button\"\r\n                      className=\"btn btn-info\"\r\n                      onClick={() => this.tambahModal()}\r\n                      data-tut=\"reactour_1\"\r\n                    >\r\n                      Tambah Data Kecamatan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-12\" data-tut=\"reactour_2\">\r\n                  {this.props.areaList ? (\r\n                    <Table\r\n                      data={this.props.areaList}\r\n                      columns={this.state.columns}\r\n                      defaultSorted={defaultSorted}\r\n                      namaKey=\"kodeArea\"\r\n                    />\r\n                  ) : (\r\n                    <div>\r\n                      {this.props.error ? (\r\n                        <div className=\"text-center\">\r\n                          <img\r\n                            src={notrespond}\r\n                            style={{ width: \"30%\" }}\r\n                            alt=\"NOT RESPOND\"\r\n                          />\r\n                          <br />\r\n                          <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton width={\"100%\"} height={180} />\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(Area);\r\n","export const validationProvinsi = (values) => {\r\n  const errors = {}\r\n  // PROVINSI\r\n  if (!values.KodeProvinsi) {\r\n    errors.KodeProvinsi = 'Tidak Boleh kosong'\r\n  } else if (values.KodeProvinsi.length > 5) {\r\n    errors.KodeProvinsi = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if (!values.NamaProvinsi) {\r\n    errors.NamaProvinsi = 'Tidak Boleh kosong'\r\n  }\r\n  // Kota\r\n  if (!values.KodeKota) {\r\n    errors.KodeKota = 'Tidak Boleh kosong'\r\n  } else if (values.KodeKota.length > 5) {\r\n    errors.KodeKota = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if(!values.kodeProvinsi){\r\n    errors.kodeProvinsi = \"Tidak Boleh Kosong\"\r\n  } else if(values.kodeProvinsi === \"DEFAULT\"){\r\n    errors.kodeProvinsi = \"Silahkan Pilih Provinsi\"\r\n  }\r\n  if(!values.NamaKota){\r\n    errors.NamaKota = \"Tidak Boleh Kosong\"\r\n  }\r\n  // AREA\r\n  if (!values.KodeArea) {\r\n    errors.KodeArea = 'Tidak Boleh kosong'\r\n  } else if (values.KodeArea.length > 5) {\r\n    errors.KodeArea = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if(!values.kodeKota){\r\n    errors.kodeKota = \"Tidak Boleh Kosong\"\r\n  } else if(values.kodeKota === \"DEFAULT\"){\r\n    errors.kodeKota = \"Silahkan Pilih Provinsi\"\r\n  }\r\n  if(!values.NamaArea){\r\n    errors.NamaArea = \"Tidak Boleh Kosong\"\r\n  }\r\n\r\n  //LOKASI\r\n  if (!values.KodeLokasi) {\r\n    errors.KodeLokasi = 'Tidak Boleh kosong'\r\n  } else if (values.KodeLokasi.length > 5) {\r\n    errors.KodeLokasi = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if(!values.NamaLokasi){\r\n    errors.NamaLokasi = 'Tidak Boleh kosong'\r\n  }\r\n\r\n  return errors\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validationProvinsi } from \"../../Validations/validationProvinsi\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { LogData } from \"../../Alert\";\r\nimport { SkeletonLoading } from \"../../helper\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    limit: state.config.limit,\r\n    error: state.alert.Error,\r\n    editProvinsi: state.provinsi.editProvinsi,\r\n  };\r\n};\r\n\r\nclass AreaProvinsiKota extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      status: \"AKTIF\",\r\n      listProvinsi: [],\r\n      listKota: [],\r\n      isiNama: \"\",\r\n      isikode: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"provinsi/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listProvinsi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    AxiosMasterGet(\"kota/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKota: res.data,\r\n        })\r\n      )\r\n      .catch((err) => LogData(\"Error Get Data Kota\"));\r\n  }\r\n\r\n  render() {\r\n    var kodenya = this.props.kode;\r\n    var namanya = this.props.nama;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <Field\r\n                name={kodenya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                limit={5}\r\n                label={this.props.kode}\r\n              />\r\n            </div>\r\n            {this.props.from === \"kota\" ? (\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group\">\r\n                  {String(this.state.listProvinsi) !== \"\" ? (\r\n                    <Field\r\n                      component={renderFieldSelect}\r\n                      label={this.props.kode_ext}\r\n                      name=\"kodeProvinsi\"\r\n                      value={this.props.status}\r\n                      normalize={(value) => value && value.toUpperCase()}\r\n                      className=\"form-control\"\r\n                      options={this.state.listProvinsi.map((obj) => {\r\n                        var payload = {\r\n                          value: obj.kode_provinsi,\r\n                          name: obj.nama_provinsi,\r\n                        };\r\n                        return payload;\r\n                      })}\r\n                    ></Field>\r\n                  ) : (\r\n                    <SkeletonLoading label={this.props.kode_ext} />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {/* AREA */}\r\n            {this.props.from === \"area\" ? (\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group\">\r\n                  {String(this.state.listKota) !== \"\" ? (\r\n                    <Field\r\n                      component={renderFieldSelect}\r\n                      label={this.props.kode_ext}\r\n                      name={\r\n                        this.props.from === \"kota\" ? \"kodeProvinsi\" : \"kodeKota\"\r\n                      }\r\n                      value={this.props.status}\r\n                      normalize={(value) => value && value.toUpperCase()}\r\n                      className=\"form-control\"\r\n                      options={this.state.listKota.map((obj) => {\r\n                        var payload = {\r\n                          value: obj.kode_kota,\r\n                          name: obj.nama_kota,\r\n                        };\r\n                        return payload;\r\n                      })}\r\n                    ></Field>\r\n                  ) : (\r\n                    <SkeletonLoading label={this.props.kode_ext} />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {/* Lokasi */}\r\n            <div className=\"col-md-3\">\r\n              <Field\r\n                name={namanya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label={this.props.nama}\r\n              />\r\n            </div>\r\n            {this.props.from === \"area\" ? (\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kodePos\"\r\n                  component={renderField}\r\n                  type=\"number\"\r\n                  label=\"Kode Pos\"\r\n                  placeholder=\"Masukan Kode Pos\"\r\n                />\r\n              </div>\r\n            ) : null}\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  id=\"simpan\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Selesai\r\n                <i class=\"fa fa-paper-plane ml-3\" aria-hidden=\"true\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAreaProvinsiKota = reduxForm({\r\n  form: \"Provinsi\", // a unique identifier for this form\r\n  validate: validationProvinsi, // <--- validation function given to redux-form\r\n  enableReinitialize: true,\r\n})(AreaProvinsiKota);\r\nexport default connect(maptoState, null)(AreaProvinsiKota);\r\n"],"sourceRoot":""}