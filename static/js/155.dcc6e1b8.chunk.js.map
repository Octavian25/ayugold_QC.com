{"version":3,"sources":["Transaksi/Component/FormTranskasiReparasi.jsx"],"names":["currencyMask","createNumberMask","prefix","suffix","locale","FormTransaksiReparasi","props","state","kodeBarang","qty","isEmpty","columns","dataField","text","formatter","data","formatRp","row","type_reparasi","csvExport","rowContent","rowIndex","className","data-tip","data-for","type","onClick","deleteRow","id","effect","editRow","class","aria-hidden","this","change","kode_reparasi","ongkos_reparasi","setState","array","JSON","parse","localStorage","getItem","splice","setItem","stringify","dispatch","getListReparasi","getkategoriList","getParameterReparasi","length","netto","noFaktur","gross","discGlobalGr","toFixed","customer","level_customer","kode_customer","AxiosMasterGet","then","res","kode_kategori","catch","err","warning","setFocus","split","Number","bruto","undefined","initData","kode_jenis","detail_reparasi","kodeReparasi","position","findIndex","find","push","isExist","onSubmit","handleSubmit","name","label","readOnly","component","renderField","defaultValue","normalize","value","toUpperCase","String","KategoriList","renderFieldSelect","options","map","kode","nama_kategori","width","height","onChange","onclick1","ParameterReparasi","handleReparasi","filter","fil","addReparasi","keyField","reparasi_list","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","rp","provinsi","kategori","reparasi_barang","initialValues","discGlobalPr","p","k","pkg"],"mappings":"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","file":"static/js/155.dcc6e1b8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { formatRp, setFocus } from \"../../helper\";\r\nimport { warning } from \"../../Alert\";\r\nimport { getkategoriList } from \"../../actions/kategoriAction\";\r\nimport { getParameterReparasi } from \"../../actions/parameterReparasiAction\";\r\nimport GlobalTabel from \"../../GlobalComponent/GlobalTabel\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { getListReparasi } from \"../../actions/reparasiAction\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\n\r\nclass FormTransaksiReparasi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      qty: false,\r\n      isEmpty: true,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_reparasi\",\r\n          text: \"Kode Reparasi\",\r\n        },\r\n        {\r\n          dataField: \"ongkos_reparasi\",\r\n          text: \"Ongkos Reparasi\",\r\n          formatter: (data) => formatRp(data),\r\n        },\r\n        {\r\n          dataField: \"qty\",\r\n          text: \"Qty\",\r\n          formatter: (data, row) => (row.type_reparasi === \"QTY\" ? data : 0),\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"justify-content-center row\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() => this.deleteRow(rowIndex)}\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                </button>\r\n                <br />\r\n                <button\r\n                  data-tip\r\n                  data-for=\"edit\"\r\n                  type=\"button\"\r\n                  className=\"btn btn-warning mr-2\"\r\n                  onClick={() => this.editRow(row, rowIndex)}\r\n                >\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Edit</span>\r\n                  </ReactTooltip>\r\n                  <i class=\"fa fa-recycle\" aria-hidden=\"true\"></i>\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  editRow(row, rowIndex) {\r\n    this.props.change(\r\n      \"kodeReparasi\",\r\n      row.kode_reparasi + \"|\" + row.ongkos_reparasi + \"|\" + row.type_reparasi\r\n    );\r\n    this.props.change(\"qty\", row.qty);\r\n    this.props.change(\"ongkos_reparasi\", row.ongkos_reparasi);\r\n    this.setState({\r\n      qty: row.type_reparasi === \"QTY\",\r\n      type_reparasi: row.type_reparasi,\r\n    });\r\n  }\r\n\r\n  deleteRow(rowIndex) {\r\n    const array = JSON.parse(localStorage.getItem(\"temp_data_reparasi\")) || [];\r\n    array.splice(rowIndex, 1);\r\n    localStorage.setItem(\"temp_data_reparasi\", JSON.stringify(array));\r\n    this.props.dispatch(getListReparasi());\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListReparasi());\r\n    this.props.dispatch(getkategoriList());\r\n    this.props.dispatch(getParameterReparasi());\r\n    let isInit = JSON.parse(localStorage.getItem(\"temp_data_reparasi\") || \"[]\");\r\n    if (isInit.length < 1) {\r\n      this.setState({ isEmpty: true });\r\n    } else {\r\n      this.setState({ isEmpty: false });\r\n    }\r\n    // getTimbangan(this.props.change);\r\n  }\r\n\r\n  onclick1() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n    this.props.change(\"gross\", this.props.gross);\r\n    this.props.change(\"discGlobalGr\", this.props.discGlobalGr);\r\n    this.props.change(\r\n      \"nettoDiscGlobalExt\",\r\n      (this.props.netto - this.props.discGlobalGr).toFixed(3)\r\n    );\r\n  }\r\n\r\n  pilihBarang(data) {\r\n    let customer =\r\n      this.props.level_customer === \"LEVEL2\"\r\n        ? localStorage.getItem(\"customer_1\")\r\n        : this.props.kode_customer;\r\n    AxiosMasterGet(\r\n      `ongkos-reparasi/get/:kode_customer&:kode_reparasi${customer}&${data}`\r\n    )\r\n      .then((res) => {\r\n        this.props.change(\"rp\", res.data?.ongkos_reparasi);\r\n        this.props.change(\"kodeKategori\", res.data?.kode_kategori);\r\n      })\r\n      .catch((err) => warning(err.data));\r\n    setFocus(\"qty\");\r\n  }\r\n\r\n  setBruto() {\r\n    this.props.change(\"bruto\", localStorage.getItem(\"Timbangan\"));\r\n  }\r\n\r\n  handleReparasi(data) {\r\n    const split = data.split(\"|\");\r\n    const type = split[2];\r\n    this.setState({\r\n      qty: type === \"QTY\",\r\n      type_reparasi: type,\r\n    });\r\n    this.props.change(\"ongkos_reparasi\", split[1]);\r\n  }\r\n\r\n  addReparasi() {\r\n    if (Number(this.props.bruto) === 0) {\r\n      warning(\"Silahkan isi Bruto\");\r\n      return false;\r\n    } else if (this.props.kodeBarang === undefined) {\r\n      warning(\"Silahkan Pilih Kategori\");\r\n      return false;\r\n    }\r\n    const initData = JSON.parse(\r\n      localStorage.getItem(\"temp_data_reparasi\") || \"[]\"\r\n    );\r\n    let data = \"\";\r\n    if (initData.length < 1) {\r\n      data = [\r\n        {\r\n          kode_jenis: this.props.kodeBarang,\r\n          bruto: this.props.bruto,\r\n          detail_reparasi: [\r\n            {\r\n              kode_reparasi: this.props.kodeReparasi.split(\"|\")[0],\r\n              ongkos_reparasi: this.props.ongkos_reparasi,\r\n              type_reparasi: this.state.type_reparasi,\r\n              qty: this.props.qty,\r\n            },\r\n          ],\r\n        },\r\n      ];\r\n    } else {\r\n      let kode_jenis = this.props.kodeBarang;\r\n      const position = initData.findIndex(\r\n        (find) => find.kode_jenis === kode_jenis\r\n      );\r\n      if (position < 0) {\r\n        data = {\r\n          kode_jenis: this.props.kodeBarang,\r\n          bruto: this.props.bruto,\r\n          detail_reparasi: [\r\n            {\r\n              kode_reparasi: this.props.kodeReparasi.split(\"|\")[0],\r\n              ongkos_reparasi: this.props.ongkos_reparasi,\r\n              type_reparasi: this.state.type_reparasi,\r\n              qty: this.props.qty,\r\n            },\r\n          ],\r\n        };\r\n        initData.push(data);\r\n        data = initData;\r\n      } else {\r\n        let isExist = initData[position].detail_reparasi.findIndex(\r\n          (find) => find.kode_reparasi === this.props.kodeReparasi.split(\"|\")[0]\r\n        );\r\n        if (isExist < 0) {\r\n          initData[position].detail_reparasi.push({\r\n            kode_reparasi: this.props.kodeReparasi.split(\"|\")[0],\r\n            ongkos_reparasi: this.props.ongkos_reparasi,\r\n            type_reparasi: this.state.type_reparasi,\r\n            qty: this.props.qty,\r\n          });\r\n        } else {\r\n          initData[position].detail_reparasi.splice(isExist, 1);\r\n          initData[position].detail_reparasi.push({\r\n            kode_reparasi: this.props.kodeReparasi.split(\"|\")[0],\r\n            ongkos_reparasi: this.props.ongkos_reparasi,\r\n            type_reparasi: this.state.type_reparasi,\r\n            qty: this.props.qty,\r\n          });\r\n        }\r\n\r\n        data = initData;\r\n      }\r\n    }\r\n    localStorage.setItem(\"temp_data_reparasi\", JSON.stringify(data));\r\n    this.props.dispatch(getListReparasi());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-lg-12 d-none\">\r\n            <Field\r\n              name=\"noFaktur\"\r\n              label={this.props.noFaktur}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              component={renderField}\r\n              defaultValue={this.props.noFaktur}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            {String(this.props.KategoriList) !== \"\" ? (\r\n              <Field\r\n                name=\"kodeBarang\"\r\n                label=\"Kode Model\"\r\n                component={renderFieldSelect}\r\n                className=\"form-control\"\r\n                options={this.props.KategoriList.map((kode) => {\r\n                  let data = {\r\n                    value: kode.kode_kategori,\r\n                    name: kode.nama_kategori,\r\n                  };\r\n                  return data;\r\n                })}\r\n              />\r\n            ) : (\r\n              <Skeleton width={\"100%\"} height={50} />\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Berat (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onChange={this.onclick1()}\r\n              // onChange={this.setBruto()}\r\n              // onBlur={this.setBruto()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3 d-none\">\r\n            <Field\r\n              name=\"kodeKategori\"\r\n              label=\"Berat (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onChange={this.onclick1()}\r\n              // onChange={this.setBruto()}\r\n              // onBlur={this.setBruto()}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <hr />\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                {String(this.props.ParameterReparasi) !== \"\" ? (\r\n                  <Field\r\n                    name=\"kodeReparasi\"\r\n                    label=\"Kode Reparasi\"\r\n                    component={renderFieldSelect}\r\n                    className=\"form-control\"\r\n                    onChange={(data) => this.handleReparasi(data)}\r\n                    options={this.props.ParameterReparasi.filter(\r\n                      (fil) => fil.kode_customer === this.props.kode_customer\r\n                    ).map((kode) => {\r\n                      let data = {\r\n                        value:\r\n                          kode.kode_reparasi +\r\n                          \"|\" +\r\n                          kode.ongkos_reparasi +\r\n                          \"|\" +\r\n                          kode.type_reparasi,\r\n                        name: kode.kode_reparasi,\r\n                      };\r\n                      return data;\r\n                    })}\r\n                  />\r\n                ) : (\r\n                  <Skeleton width={\"100%\"} height={50} />\r\n                )}\r\n              </div>\r\n              <div\r\n                className={\r\n                  this.state.qty\r\n                    ? \"col-md-3 col-lg-3\"\r\n                    : \"col-md-3 col-lg-3 d-none\"\r\n                }\r\n              >\r\n                <Field\r\n                  name=\"qty\"\r\n                  label=\"Qty\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  // onChange={this.setBruto()}\r\n                  // onBlur={this.setBruto()}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-3 col-lg-3\">\r\n                <Field\r\n                  name=\"ongkos_reparasi\"\r\n                  label=\"Ongkos reparasi\"\r\n                  type=\"telp\"\r\n                  component={renderField}\r\n                  {...currencyMask}\r\n                  // onChange={this.setBruto()}\r\n                  // onBlur={this.setBruto()}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 row justify-content-end\">\r\n                <div className=\"col-lg-2\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => this.addReparasi()}\r\n                  >\r\n                    Tambah Reparasi\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <br />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <GlobalTabel\r\n                  keyField=\"id\"\r\n                  data={\r\n                    this.props.reparasi_list.filter(\r\n                      (fil) => fil.kode_jenis === this.props.kodeBarang\r\n                    )[0]?.detail_reparasi\r\n                  }\r\n                  columns={this.state.columns}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormTransaksiReparasi = reduxForm({\r\n  form: \"FormTransaksiReparasi\",\r\n  enableReinitialize: true,\r\n})(FormTransaksiReparasi);\r\nconst selector = formValueSelector(\"FormTransaksiReparasi\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, rp, kodeReparasi, ongkos_reparasi, qty, kodeBarang } =\r\n    selector(\r\n      state,\r\n      \"bruto\",\r\n      \"rp\",\r\n      \"kodeReparasi\",\r\n      \"ongkos_reparasi\",\r\n      \"qty\",\r\n      \"kodeBarang\",\r\n      \"bruto\"\r\n    );\r\n  return {\r\n    bruto: bruto,\r\n    rp: rp,\r\n    KategoriList: state.provinsi.kategori,\r\n    reparasi_list: state.provinsi.reparasi_barang,\r\n    kodeReparasi: kodeReparasi,\r\n    ongkos_reparasi: ongkos_reparasi,\r\n    qty: qty,\r\n    kodeBarang: kodeBarang,\r\n    ParameterReparasi: state.provinsi.ParameterReparasi || [],\r\n    initialValues: {\r\n      discGlobalPr: 0,\r\n      p: 0,\r\n      k: 0,\r\n      pkg: 0,\r\n      bruto: 0,\r\n    },\r\n  };\r\n})(FormTransaksiReparasi);\r\n"],"sourceRoot":""}