{"version":3,"sources":["Validations/validationCustomer.js","DataMaster/Component/FormCustomer.jsx","DataMaster/Component/FormCustomerEdit.jsx","DataMaster/Component/FormTambahInduk.jsx","DataMaster/Customer.jsx","../node_modules/react-stepper-horizontal/lib/index.js"],"names":["validationCustomer","value","errors","namaCustomer","kodeCustomer","namaToko","level_customer","kodeArea","kodeKota","kodeProvinsi","kodeKecamatan","FormCustomer","props","nextStep","step","state","setState","step2","step1","step3","prevStep","inputProvinsi","input","e","kotaPilihan","listKota","filter","list","kode_provinsi","target","pilihanKota","inputKota","areaPilihan","listArea","kode_kota","pilihanArea","inputArea","result_explode","split","namaArea","setKodePos","customer_induk","listProvinsi","list_customer_induk","today","Date","getFullYear","getMonth","slice","getDate","AxiosMasterGet","then","res","data","catch","err","console","log","this","change","getToday","param","kodepos","kode_kecamatan","kode_pos","customer","className","onSubmit","handleSubmit","steps","title","activeStep","Field","name","type","normalize","toUpperCase","component","renderField","label","renderFieldSelect","options","placeholder","onChange","setIndukCustomer","map","hasil","kode_customer","nama_customer","id","onClick","htmlFor","kota","key","nama_provinsi","nama_kota","area","nama_kecamatan","disabled","onSend","aria-hidden","Component","reduxForm","form","validate","enableReinitialize","connect","provinsi","FormCustomerEdit","step4","namaKota","autoComplete","undefined","user_id","password","warning","selector","formValueSelector","initialValues","alamat","editCustomer","email","handPhone","kodeExt","kodePos","status","tanggalDaftar","telepon","fax","contactPerson","level","SearchBar","Search","FormTambahInduk","columns","dataField","text","headerStyle","width","csvExport","formatter","rowContent","row","hapus","data-tut","dispatch","getcustomerList","kode","Swal","fire","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","AxiosMasterDelete","berhasil","getcustomerInduk","gagal","listCustomer","fil","keyField","listCustomerInduk","search","searchProps","style","margin","top","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","customerInduk","ExportCSVButton","CSVExport","rowExpand","renderer","no_telp","no_hp","kode_ext","Customer","updateStatus","response","LogData","editcustomer","nama_toko","contact_person","editModal","data-toggle","data-target","tanggal_daftar","dataEdit","progressSend","AxiosMasterPost","finishSend","hideModal","reset","handleReactive","kirim","AxiosMasterPut","showModal","isEdit","includes","reactive","color","alert","role","data-dismiss","aria-label","TourGuide","tourConfig","ModalMasterData","content","handleEdit","HeaderCard","action","tambahModal","customerList","expandRow","csvProps","error","src","notrespond","alt","height","tabIndex","aria-labelledby","handleTambahInduk","Object","defineProperty","exports","obj","_Stepper","require","_Stepper2","__esModule","default"],"mappings":"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","file":"static/js/47.39d988ad.chunk.js","sourcesContent":["const validationCustomer = (value) => {\r\n  const errors = {};\r\n  if (!value.namaCustomer) {\r\n    errors.namaCustomer = \"Tidak Boleh kosong\";\r\n  }\r\n  if(!value.kodeCustomer){\r\n    errors.kodeCustomer = \"Tidak Boleh Kosong\";\r\n  }\r\n  if (!value.namaToko) {\r\n    errors.namaToko = \"Tidak Boleh kosong\";\r\n  }\r\n  if(!value.level_customer){\r\n    errors.level_customer = \"Tidak Boleh Kosong\";\r\n  }\r\n  if (!value.kodeArea) {\r\n    errors.kodeArea = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.kodeKota) {\r\n    errors.kodeKota = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.kodeProvinsi) {\r\n    errors.kodeProvinsi = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.kodeKecamatan) {\r\n    errors.kodeKecamatan = \"Tidak Boleh kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validationCustomer;\r\n","import React, { Component } from \"react\";\r\nimport Stepper from \"react-stepper-horizontal\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validationCustomer from \"../../Validations/validationCustomer\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { getToday } from \"../../getDate\";\r\n\r\nclass FormCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      step: 0,\r\n      step1: \"row\",\r\n      step2: \"row d-none\",\r\n      step3: \"row d-none\",\r\n      customer_induk: \"col-lg-5 d-none\",\r\n      listKota: [],\r\n      listArea: [],\r\n      listProvinsi: [],\r\n      pilihanArea: [],\r\n      pilihanKota: [],\r\n      list_customer_induk: [],\r\n      today:\r\n        new Date().getFullYear() +\r\n        \"-\" +\r\n        (\"0\" + (new Date().getMonth() + 1)).slice(-2) +\r\n        \"-\" +\r\n        (\"0\" + new Date().getDate()).slice(-2),\r\n    };\r\n  }\r\n\r\n  nextStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 0) {\r\n      this.setState({ step: step + 1, step2: \"row\", step1: \"row d-none\" });\r\n    } else if (step === 1) {\r\n      this.setState({ step: step + 1, step2: \"row d-none\", step3: \"row\" });\r\n    }\r\n  };\r\n\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 1) {\r\n      this.setState({ step: step - 1, step2: \"row d-none\", step1: \"row\" });\r\n    } else if (step === 2) {\r\n      this.setState({ step: step - 1, step3: \"row d-none\", step2: \"row\" });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"kota/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKota: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n\r\n    AxiosMasterGet(\"kecamatan/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listArea: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    AxiosMasterGet(\"provinsi/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listProvinsi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    this.props.change(\"tanggalDaftar\", getToday);\r\n  }\r\n\r\n  inputProvinsi = (input) => (e) => {\r\n    var kotaPilihan = this.state.listKota.filter(\r\n      (list) => list.kode_provinsi === e.target.value\r\n    );\r\n    this.setState({\r\n      pilihanKota: kotaPilihan,\r\n    });\r\n  };\r\n  inputKota = (input) => (e) => {\r\n    var areaPilihan = this.state.listArea.filter(\r\n      (list) => list.kode_kota === e.target.value\r\n    );\r\n    this.setState({\r\n      pilihanArea: areaPilihan,\r\n    });\r\n  };\r\n  inputArea = (input) => (e) => {\r\n    var result_explode = e.target.value.split(\"|\");\r\n    this.setState({\r\n      kodeArea: result_explode[0],\r\n      namaArea: result_explode[1],\r\n    });\r\n    this.setKodePos(result_explode[0]);\r\n  };\r\n\r\n  setKodePos(data) {\r\n    let param = data;\r\n    let kodepos = this.state.listArea.filter(\r\n      (data) => data.kode_kecamatan === param\r\n    );\r\n    this.props.change(\"kodePos\", kodepos[0].kode_pos);\r\n  }\r\n\r\n  setIndukCustomer(data) {\r\n    console.log(data);\r\n    switch (data) {\r\n      case \"LEVEL1\":\r\n        this.setState({\r\n          customer_induk: \"col-lg-5 d-none\",\r\n        });\r\n        break;\r\n      case \"LEVEL2\":\r\n        this.setState({\r\n          customer_induk: \"col-lg-5 d-none\",\r\n          list_customer_induk: this.props.customer.filter(\r\n            (data) => data.level_customer === \"LEVEL1\"\r\n          ),\r\n        });\r\n        break;\r\n      case \"LEVEL3\":\r\n        this.setState({\r\n          customer_induk: \"col-lg-5 d-none\",\r\n          list_customer_induk: this.props.customer.filter(\r\n            (data) => data.level_customer === \"LEVEL2\"\r\n          ),\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { step } = this.state;\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12\">\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <Stepper\r\n                steps={[\r\n                  { title: \"Data Diri\" },\r\n                  { title: \"Data Lokasi\" },\r\n                  { title: \"Data Nomor\" },\r\n                  // { title: \"Data Rekening\" },\r\n                ]}\r\n                activeStep={step}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className={this.state.step1}>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"kodeCustomer\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    component={renderField}\r\n                    label=\"Kode Customer\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"kodeExt\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    component={renderField}\r\n                    label=\"Kode Ext\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"namaToko\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    component={renderField}\r\n                    label=\"Nama Toko\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"namaCustomer\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    component={renderField}\r\n                    label=\"Nama Customer\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"tanggalDaftar\"\r\n                    type=\"date\"\r\n                    component={renderField}\r\n                    label=\"Tanggal Daftar\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-5\">\r\n                  <Field\r\n                    name=\"level_customer\"\r\n                    component={renderFieldSelect}\r\n                    options={[\r\n                      {\r\n                        value: \"LEVEL1\",\r\n                        name: \"LEVEL 1\",\r\n                      },\r\n                      {\r\n                        value: \"LEVEL2\",\r\n                        name: \"LEVEL 2\",\r\n                      },\r\n                      {\r\n                        value: \"LEVEL3\",\r\n                        name: \"LEVEL 3\",\r\n                      },\r\n                    ]}\r\n                    type=\"text\"\r\n                    label=\"Level Customer\"\r\n                    placeholder=\"Masukan Level Customer\"\r\n                    onChange={(data) => {\r\n                      this.setIndukCustomer(data);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className={this.state.customer_induk}>\r\n                  <Field\r\n                    name=\"kode_customer_induk\"\r\n                    component={renderFieldSelect}\r\n                    options={this.state.list_customer_induk.map((hasil) => {\r\n                      let data = {\r\n                        value: hasil.kode_customer,\r\n                        name: hasil.nama_customer,\r\n                      };\r\n                      return data;\r\n                    })}\r\n                    type=\"text\"\r\n                    label=\"Customer Induk\"\r\n                    placeholder=\"Masukan Customer Induk\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      id=\"next_1\"\r\n                      name=\"next_1\"\r\n                      className=\"btn btn-primary\"\r\n                      type=\"button\"\r\n                      onClick={() => this.nextStep()}\r\n                    >\r\n                      Next\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className={this.state.step2}>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\">Provinsi</label>\r\n                  <Field\r\n                    name=\"kodeProvinsi\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    component=\"select\"\r\n                    label=\"Nama Customer\"\r\n                    onChange={this.inputProvinsi()}\r\n                  >\r\n                    <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                    {this.state.listProvinsi.map((kota) => (\r\n                      <option\r\n                        value={kota.kode_provinsi}\r\n                        key={kota.kode_provinsi}\r\n                      >\r\n                        {kota.nama_provinsi}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\">Kota</label>\r\n                  <Field\r\n                    name=\"kodeKota\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    component=\"select\"\r\n                    label=\"Nama Customer\"\r\n                    onChange={this.inputKota()}\r\n                  >\r\n                    <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                    {this.state.pilihanKota.map((kota) => (\r\n                      <option value={kota.kode_kota} key={kota.kode_kota}>\r\n                        {kota.nama_kota}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\">Kecamatan</label>\r\n                  <Field\r\n                    name=\"kodeKecamatan\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    component=\"select\"\r\n                    label=\"Nama Customer\"\r\n                    onChange={this.inputArea()}\r\n                  >\r\n                    <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                    {this.state.pilihanArea.map((area) => (\r\n                      <option\r\n                        value={area.kode_kecamatan}\r\n                        key={area.kode_kecamatan}\r\n                      >\r\n                        {area.nama_kecamatan}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"kodePos\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Kode Pos\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6 col-lg-6\">\r\n                  <Field\r\n                    name=\"alamat\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    component={renderField}\r\n                    label=\"Alamat\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"text-left col-md-6\">\r\n                      <button\r\n                        id=\"back_1\"\r\n                        name=\"back_1\"\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                        onClick={() => this.prevStep()}\r\n                      >\r\n                        Back\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"text-right col-md-6\">\r\n                      <button\r\n                        id=\"next_2\"\r\n                        name=\"next_2\"\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                        onClick={() => this.nextStep()}\r\n                      >\r\n                        Next\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className={this.state.step3}>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    component={renderField}\r\n                    label=\"Email\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"telepon\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Nomor Telepon\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"contactPerson\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Contact Person\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"fax\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Fax\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"handPhone\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Handphone\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"text-left col-md-6\">\r\n                      <button\r\n                        id=\"back_2\"\r\n                        name=\"back_2\"\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                        onClick={() => this.prevStep()}\r\n                      >\r\n                        Back\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"text-right col-md-6\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        disabled={this.props.onSend}\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() =>\r\n                          this.setState({\r\n                            step: 0,\r\n                            step1: \"row\",\r\n                            step2: \"row d-none\",\r\n                            step3: \"row d-none\",\r\n                          })\r\n                        }\r\n                      >\r\n                        {this.props.onSend ? (\r\n                          <span\r\n                            className=\"spinner-border spinner-border-sm mr-3\"\r\n                            aria-hidden=\"true\"\r\n                          ></span>\r\n                        ) : null}\r\n                        Selesai\r\n                        <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormCustomer = reduxForm({\r\n  form: \"Customer\",\r\n  validate: validationCustomer,\r\n  enableReinitialize: true,\r\n})(FormCustomer);\r\nexport default connect((state) => {\r\n  return {\r\n    customer: state.provinsi.customer,\r\n  };\r\n})(FormCustomer);\r\n","import React, { Component } from \"react\";\r\nimport Stepper from \"react-stepper-horizontal\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validationCustomer from \"../../Validations/validationCustomer\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { getToday } from \"../../getDate\";\r\nimport { warning } from \"../../Alert\";\r\n\r\nclass FormCustomerEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      step: 0,\r\n      step1: \"row\",\r\n      step2: \"row d-none\",\r\n      step3: \"row d-none\",\r\n      step4: \"row d-none\",\r\n      customer_induk: \"col-lg-4 d-none\",\r\n      list_customer_induk: [],\r\n      listKota: [],\r\n      listArea: [],\r\n      listProvinsi: [],\r\n      pilihanArea: [],\r\n      pilihanKota: [],\r\n      level_customer: \"\",\r\n    };\r\n  }\r\n\r\n  nextStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 0) {\r\n      this.setState({\r\n        step: step + 1,\r\n        step2: \"row\",\r\n        step1: \"row d-none\",\r\n        step3: \"row d-none\",\r\n        step4: \"row d-none\",\r\n      });\r\n    } else if (step === 1) {\r\n      this.setState({\r\n        step: step + 1,\r\n        step2: \"row d-none\",\r\n        step3: \"row\",\r\n        step4: \"row d-none\",\r\n      });\r\n    } else if (step === 2) {\r\n      this.setState({\r\n        step: step + 1,\r\n        step2: \"row d-none\",\r\n        step4: \"row\",\r\n        step1: \"row d-none\",\r\n        step3: \"row d-none\",\r\n      });\r\n    }\r\n  };\r\n\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 1) {\r\n      this.setState({\r\n        step: step - 1,\r\n        step2: \"row d-none\",\r\n        step1: \"row\",\r\n        step3: \"row d-none\",\r\n        step4: \"row d-none\",\r\n      });\r\n    } else if (step === 2) {\r\n      this.setState({\r\n        step: step - 1,\r\n        step3: \"row d-none\",\r\n        step2: \"row\",\r\n        step4: \"row d-none\",\r\n        step1: \"row d-none\",\r\n      });\r\n    } else if (step === 3) {\r\n      this.setState({\r\n        step: step - 1,\r\n        step4: \"row d-none\",\r\n        step3: \"row\",\r\n        step2: \"row d-none\",\r\n        step1: \"row d-none\",\r\n      });\r\n    }\r\n  };\r\n\r\n  inputKota = (input) => (e) => {\r\n    var result_explode = e.target.value.split(\"|\");\r\n    this.setState({\r\n      kodeKota: result_explode[0],\r\n      namaKota: result_explode[1],\r\n    });\r\n  };\r\n  inputArea = (input) => (e) => {\r\n    var result_explode = e.target.value.split(\"|\");\r\n    this.setState({\r\n      kodeArea: result_explode[0],\r\n      namaArea: result_explode[1],\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"kota/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKota: res.data,\r\n          pilihanKota: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n\r\n    AxiosMasterGet(\"kecamatan/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listArea: res.data,\r\n          pilihanArea: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    AxiosMasterGet(\"provinsi/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listProvinsi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    this.props.change(\"tanggalDaftar\", getToday);\r\n  }\r\n\r\n  inputProvinsi = (input) => (e) => {\r\n    console.log(e.target.value);\r\n    var kotaPilihan = this.state.listKota.filter(\r\n      (list) => list.kode_provinsi === e.target.value\r\n    );\r\n    this.setState({\r\n      pilihanKota: kotaPilihan,\r\n    });\r\n  };\r\n  inputKota = (input) => (e) => {\r\n    var areaPilihan = this.state.listArea.filter(\r\n      (list) => list.kode_kota === e.target.value\r\n    );\r\n    this.setState({\r\n      pilihanArea: areaPilihan,\r\n    });\r\n  };\r\n\r\n  setIndukCustomer(data) {\r\n    this.setState({\r\n      level_customer: data,\r\n    });\r\n    switch (data) {\r\n      case \"LEVEL1\":\r\n        this.setState({\r\n          customer_induk: \"col-lg-4 d-none\",\r\n        });\r\n        break;\r\n      case \"LEVEL2\":\r\n        this.setState({\r\n          customer_induk: \"col-lg-4 d-none\",\r\n          list_customer_induk: this.props.customer.filter(\r\n            (data) => data.level_customer === \"LEVEL1\"\r\n          ),\r\n        });\r\n        break;\r\n      case \"LEVEL3\":\r\n        this.setState({\r\n          customer_induk: \"col-lg-4 d-none\",\r\n          list_customer_induk: this.props.customer.filter(\r\n            (data) => data.level_customer === \"LEVEL2\"\r\n          ),\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    const { step } = this.state;\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12\">\r\n        <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <Stepper\r\n                steps={[\r\n                  { title: \"Data Diri\" },\r\n                  { title: \"Data Lokasi\" },\r\n                  { title: \"Data Nomor\" },\r\n                  { title: \"Verifikasi Data\" },\r\n                ]}\r\n                activeStep={step}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className={this.state.step1}>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"kodeExt\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    component={renderField}\r\n                    label=\"Kode Ext\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"namaToko\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    component={renderField}\r\n                    label=\"Nama Toko\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"namaCustomer\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    component={renderField}\r\n                    label=\"Nama Customer\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"tanggalDaftar\"\r\n                    type=\"date\"\r\n                    component={renderField}\r\n                    label=\"Tanggal Daftar\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"level_customer\"\r\n                    component={renderFieldSelect}\r\n                    options={[\r\n                      {\r\n                        value: \"LEVEL1\",\r\n                        name: \"LEVEL 1\",\r\n                      },\r\n                      {\r\n                        value: \"LEVEL2\",\r\n                        name: \"LEVEL 2\",\r\n                      },\r\n                      {\r\n                        value: \"LEVEL3\",\r\n                        name: \"LEVEL 3\",\r\n                      },\r\n                    ]}\r\n                    type=\"text\"\r\n                    label=\"Level Customer\"\r\n                    placeholder=\"Masukan Level Customer\"\r\n                    onChange={(data) => {\r\n                      this.setIndukCustomer(data);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className={this.state.customer_induk}>\r\n                  <Field\r\n                    name=\"kode_customer_induk\"\r\n                    component={renderFieldSelect}\r\n                    options={this.state.list_customer_induk.map((hasil) => {\r\n                      let data = {\r\n                        value: hasil.kode_customer,\r\n                        name: hasil.nama_customer,\r\n                      };\r\n                      return data;\r\n                    })}\r\n                    type=\"text\"\r\n                    label=\"Customer Induk\"\r\n                    placeholder=\"Masukan Customer Induk\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      id=\"next_1\"\r\n                      name=\"next_1\"\r\n                      className=\"btn btn-primary\"\r\n                      type=\"button\"\r\n                      onClick={() => this.nextStep()}\r\n                    >\r\n                      Next\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className={this.state.step2}>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\">Provinsi</label>\r\n                  <Field\r\n                    name=\"kodeProvinsi\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    component=\"select\"\r\n                    label=\"Nama Customer\"\r\n                    onChange={this.inputProvinsi()}\r\n                  >\r\n                    <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                    {this.state.listProvinsi.map((kota) => (\r\n                      <option\r\n                        value={kota.kode_provinsi}\r\n                        key={kota.kode_provinsi}\r\n                      >\r\n                        {kota.nama_provinsi}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\">Kota</label>\r\n                  <Field\r\n                    name=\"kodeKota\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    component=\"select\"\r\n                    label=\"Nama Customer\"\r\n                    onChange={this.inputKota()}\r\n                  >\r\n                    <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                    {this.state.pilihanKota.map((kota) => (\r\n                      <option value={kota.kode_kota} key={kota.kode_kota}>\r\n                        {kota.nama_kota}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\">Kecamatan</label>\r\n                  <Field\r\n                    name=\"kodeKecamatan\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    component=\"select\"\r\n                    label=\"Nama Customer\"\r\n                    onChange={this.inputArea()}\r\n                  >\r\n                    <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                    {this.state.pilihanArea.map((area) => (\r\n                      <option\r\n                        value={area.kode_kecamatan}\r\n                        key={area.kode_kecamatan}\r\n                      >\r\n                        {area.nama_kecamatan}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"kodePos\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Kode Pos\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6 col-lg-6\">\r\n                  <Field\r\n                    name=\"alamat\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    component={renderField}\r\n                    label=\"Alamat\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"text-left col-md-6\">\r\n                      <button\r\n                        id=\"back_1\"\r\n                        name=\"back_1\"\r\n                        className=\"btn btn-outline-primary\"\r\n                        type=\"button\"\r\n                        onClick={() => this.prevStep()}\r\n                      >\r\n                        Back\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"text-right col-md-6\">\r\n                      <button\r\n                        id=\"next_2\"\r\n                        name=\"next_2\"\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                        onClick={() => this.nextStep()}\r\n                      >\r\n                        Next\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className={this.state.step3}>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    component={renderField}\r\n                    label=\"Email\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"telepon\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Nomor Telepon\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"contactPerson\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Contact Person\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"fax\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Fax\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"handPhone\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Handphone\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"text-left col-md-6\">\r\n                      <button\r\n                        id=\"back_2\"\r\n                        name=\"back_2\"\r\n                        className=\"btn btn-outline-primary\"\r\n                        type=\"button\"\r\n                        onClick={() => this.prevStep()}\r\n                      >\r\n                        Back\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"text-right col-md-6\">\r\n                      <button\r\n                        id=\"next_2\"\r\n                        name=\"next_2\"\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                        onClick={() => this.nextStep()}\r\n                      >\r\n                        Next\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className={this.state.step4}>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"user_id\"\r\n                    type=\"text\"\r\n                    component={renderField}\r\n                    label=\"User ID\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    component={renderField}\r\n                    label=\"Password\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"text-left col-md-6\">\r\n                      <button\r\n                        id=\"back_2\"\r\n                        name=\"back_2\"\r\n                        className=\"btn btn-outline-primary\"\r\n                        type=\"button\"\r\n                        onClick={() => this.prevStep()}\r\n                      >\r\n                        Back\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"text-right col-md-6\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        onSubmit={this.props.onSend}\r\n                        onClick={() => {\r\n                          if (\r\n                            this.props.user_id === undefined &&\r\n                            this.props.password === undefined\r\n                          ) {\r\n                            warning(\r\n                              \"Mohon isi Username dan password untuk Verifikasi\"\r\n                            );\r\n                          } else {\r\n                            this.setState({\r\n                              step: 0,\r\n                              step1: \"row\",\r\n                              step2: \"row d-none\",\r\n                              step3: \"row d-none\",\r\n                            });\r\n                          }\r\n                        }}\r\n                      >\r\n                        {this.props.onSend ? (\r\n                          <span\r\n                            className=\"spinner-border spinner-border-sm mr-3\"\r\n                            aria-hidden=\"true\"\r\n                          ></span>\r\n                        ) : null}\r\n                        Selesai\r\n                        <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormCustomerEdit = reduxForm({\r\n  form: \"CustomerEdit\",\r\n  validate: validationCustomer,\r\n  enableReinitialize: true,\r\n})(FormCustomerEdit);\r\nconst selector = formValueSelector(\"CustomerEdit\");\r\nexport default connect((state) => {\r\n  const { user_id, password } = selector(state, \"user_id\", \"password\");\r\n  return {\r\n    initialValues: {\r\n      alamat: state.provinsi.editCustomer.alamat,\r\n      email: state.provinsi.editCustomer.email,\r\n      handPhone: state.provinsi.editCustomer.handPhone,\r\n      kodeProvinsi: state.provinsi.editCustomer.kodeProvinsi,\r\n      kodeKecamatan: state.provinsi.editCustomer.kodeArea,\r\n      kodeCustomer: state.provinsi.editCustomer.kodeCustomer,\r\n      kodeExt: state.provinsi.editCustomer.kodeExt,\r\n      kodeKota: state.provinsi.editCustomer.kodeKota,\r\n      kodePos: state.provinsi.editCustomer.kodePos,\r\n      namaCustomer: state.provinsi.editCustomer.namaCustomer,\r\n      namaToko: state.provinsi.editCustomer.namaToko,\r\n      status: state.provinsi.editCustomer.status,\r\n      tanggalDaftar: state.provinsi.editCustomer.tanggalDaftar,\r\n      telepon: state.provinsi.editCustomer.telepon,\r\n      fax: state.provinsi.editCustomer.fax,\r\n      contactPerson: state.provinsi.editCustomer.contactPerson,\r\n      level_customer: state.provinsi.editCustomer.level\r\n    },\r\n    customer: state.provinsi.customer,\r\n    user_id: user_id,\r\n    password: password,\r\n  };\r\n})(FormCustomerEdit);\r\n","import React, { Component } from 'react'\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider, {\r\n    Search,\r\n  } from 'react-bootstrap-table2-toolkit';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport Swal from 'sweetalert2';\r\nimport {  getcustomerInduk, getcustomerList } from '../../actions/customerAction';\r\nimport { berhasil, gagal } from '../../Alert';\r\nimport { AxiosMasterDelete } from '../../Axios';\r\nimport { renderFieldSelect } from '../../renderField';\r\n\r\n  const { SearchBar } = Search;\r\n\r\nclass FormTambahInduk extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            columns : [\r\n                {\r\n                    dataField: \"nama_customer\",\r\n                    text: \"Nama Customer\",\r\n                    headerStyle: () => {\r\n                      return { width: \"15%\" };\r\n                    },\r\n                  },\r\n                  {\r\n                    dataField: \"tanggal_daftar\",\r\n                    text: \"Tanggal Daftar\",\r\n                    headerStyle: () => {\r\n                      return { width: \"15%\" };\r\n                    },\r\n                  },\r\n                  {\r\n                    dataField: \"nama_toko\",\r\n                    text: \"Nama Toko\",\r\n                    headerStyle: () => {\r\n                      return { width: \"15%\" };\r\n                    },\r\n                  },\r\n                  {\r\n                    dataField: \"level_customer\",\r\n                    text: \"Level Customer\",\r\n                    headerStyle: () => {\r\n                      return { width: \"10%\" };\r\n                    },\r\n                  },\r\n                  {\r\n                    dataField: \"Aksi\",\r\n                    text: \"Aksi\",\r\n                    csvExport: false,\r\n                    formatter: (rowContent, row) => {\r\n                      return (\r\n                        <div className=\"row justify-content-center\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger mr-2\"\r\n                            onClick={() => this.hapus(row.kode_customer)}\r\n                            data-tut=\"reactour_3\"\r\n                          >\r\n                            <i className=\"fa fa-times mr-1\"></i>\r\n                            Delete \r\n                          </button>\r\n                        </div>\r\n                      );\r\n                    },\r\n                  },\r\n            ]\r\n         }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.dispatch(getcustomerList())\r\n    }\r\n\r\n    hapus( kode) {\r\n        Swal.fire({\r\n          title: \"Anda Yakin ?\",\r\n          text: \"Anda Akan Menghapus Data Ini ?\",\r\n          icon: \"warning\",\r\n          showCancelButton: true,\r\n          confirmButtonColor: \"#3085d6\",\r\n          cancelButtonColor: \"#d33\",\r\n          confirmButtonText: \"Yes, delete it!\",\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            AxiosMasterDelete(`customer/induk/${this.props.customer}&${kode}`)\r\n              .then((res) =>\r\n                berhasil(\"Data Berhasil Dihapus!\")\r\n                  .then(() => this.props.dispatch(getcustomerInduk(this.props.customer)))\r\n              )\r\n              .catch((err) =>\r\n                gagal(\"Data Gagal Dihapus!\")\r\n              );\r\n          }\r\n        });\r\n      }\r\n    render() { \r\n        return ( \r\n        <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"col-lg-12 row\">\r\n                <div className=\"col-lg-3\"></div>\r\n                <div className=\"col-lg-4\">\r\n                        <Field\r\n                        label=\"Pilih Kode Customer\"\r\n                        name=\"kodeCustomer\"\r\n                        component={renderFieldSelect}\r\n                        options={this.props.listCustomer.filter((fil) => fil.level_customer === this.props.level).map((data) => {\r\n                            return {\r\n                                value : data.kode_customer,\r\n                                name :data.nama_customer\r\n                            }\r\n                        })}\r\n                        />\r\n                </div>\r\n                <div className=\"col-lg-2\">\r\n               <div className=\"form-group\">\r\n                   <label htmlFor=\"\">&nbsp;</label>\r\n               <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary form-control\"\r\n                        disabled={this.props.onSend}\r\n                        >\r\n                        {this.props.onSend ? (\r\n                            <span\r\n                            className=\"spinner-border spinner-border-sm mr-3\"\r\n                            aria-hidden=\"true\"\r\n                            ></span>\r\n                        ) : null}\r\n                        Tambah\r\n                        <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                        </button>\r\n               </div>\r\n                </div>\r\n                <div className=\"col-lg-3\"></div>\r\n                <ToolkitProvider\r\n                      keyField=\"kode_customer\"\r\n                      data={this.props.listCustomerInduk || []}\r\n                      columns={this.state.columns}\r\n                      search\r\n                      >\r\n                      {(props) => (\r\n                          <div className=\"text-left mt-5 mb-3\">\r\n                          <div className=\"text-right\">\r\n                            <SearchBar\r\n                              {...props.searchProps}\r\n                              className=\"form-control\"\r\n                              placeholder=\"Pencarian\"\r\n                              style={{ margin: 0, top: \"50%\" }}\r\n                              />\r\n                          </div>\r\n                          <hr />\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            pagination={paginationFactory()}\r\n                            />\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n            </div>\r\n            </form> \r\n         );\r\n    }\r\n}\r\n \r\nFormTambahInduk = reduxForm({\r\n    form:\"FormTambahInduk\"\r\n})(FormTambahInduk)\r\nexport default connect((state) => {\r\n    return {\r\n        listCustomer : state.provinsi.customer,\r\n        listCustomerInduk : state.provinsi.customerInduk\r\n    }\r\n})(FormTambahInduk);","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\n\r\nimport FormCustomer from \"./Component/FormCustomer\";\r\nimport { connect } from \"react-redux\";\r\nimport { editcustomer, getcustomerInduk, getcustomerList } from \"../actions/customerAction\";\r\nimport notrespond from \"../Images/500.svg\";\r\nimport Swal from \"sweetalert2\";\r\nimport FormCustomerEdit from \"./Component/FormCustomerEdit\";\r\nimport { reset } from \"redux-form\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { berhasil, gagal, LogData, reactive, warning } from \"../Alert\";\r\nimport { AxiosMasterDelete, AxiosMasterPost, AxiosMasterPut } from \"../Axios\";\r\nimport { hideModal, showModal } from \"../actions/ModalAction\";\r\nimport ModalMasterData from \"./Component/ModalMasterData\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport TourGuide from \"../TourGuide\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\nimport FormTambahInduk from \"./Component/FormTambahInduk\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      let data = {\r\n        data: {\r\n          kodeCustomer: kode,\r\n        },\r\n      };\r\n      AxiosMasterDelete(\"customer/delete/\" + kode)\r\n        .then((res) =>\r\n          berhasil(\"Data Berhasil Dihapus!\")\r\n            .then(() => LogData(\"Data Berhasil Dihapus Di Customer\", data))\r\n            .then(() => dispatch(getcustomerList()))\r\n        )\r\n        .catch((err) =>\r\n          gagal(\"Data Gagal Dihapus!\").then(() =>\r\n            LogData(\"Data Gagal Dihapus Di Customer\", data, err)\r\n          )\r\n        );\r\n    }\r\n  });\r\n}\r\n\r\nconst rowExpand = {\r\n  renderer: (row) => (\r\n    <div>\r\n      <p>{`Nama Kota: ${row.kode_kota}`}</p>\r\n      <p>{`Email: ${row.email == null ? \"-\" : row.email} | Alamat : ${\r\n        row.alamat == null ? \"-\" : row.alamat\r\n      } | Kode Pos : ${row.kode_pos == null ? \"-\" : row.kode_pos} | Telepon : ${\r\n        row.no_telp == null ? \"-\" : row.no_telp\r\n      }| Handphone: ${row.no_hp == null ? \"-\" : row.no_hp}`}</p>\r\n      <p>{`Kode Ext : ${row.kode_ext == null ? \"-\" : row.kode_ext}`}</p>\r\n    </div>\r\n  ),\r\n};\r\n\r\nconst maptoStae = (state) => {\r\n  return {\r\n    customerList: state.provinsi.customer,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n  };\r\n};\r\n\r\nclass Customer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Customer: [],\r\n      response: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"nama_customer\",\r\n          text: \"Nama Customer\",\r\n          headerStyle: () => {\r\n            return { width: \"15%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"tanggal_daftar\",\r\n          text: \"Tanggal Daftar\",\r\n          headerStyle: () => {\r\n            return { width: \"15%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"nama_toko\",\r\n          text: \"Nama Toko\",\r\n          headerStyle: () => {\r\n            return { width: \"15%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"level_customer\",\r\n          text: \"Level Customer\",\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"row justify-content-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() => hapus(this.props.dispatch, row.kode_customer)}\r\n                  data-tut=\"reactour_3\"\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n                <button\r\n                  data-tut=\"reactour_4\"\r\n                  className=\"btn btn-warning mr-2\"\r\n                  onClick={() =>\r\n                    this.props.dispatch(\r\n                      editcustomer(\r\n                        row.alamat,\r\n                        row.email,\r\n                        row.no_hp,\r\n                        row.kode_kecamatan,\r\n                        row.kode_customer,\r\n                        row.kode_ext,\r\n                        row.kode_kota,\r\n                        row.kode_pos,\r\n                        row.nama_customer,\r\n                        row.nama_toko,\r\n                        row.tanggalDaftar,\r\n                        row.no_telp,\r\n                        row.kode_provinsi,\r\n                        row.fax,\r\n                        row.contact_person,\r\n                        row.level_customer,\r\n                        this.editModal()\r\n                      )\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-edit mr-2\"></i>\r\n                  EDIT\r\n                </button>\r\n                <button\r\n                disabled={row.level_customer === \"LEVEL1\"}\r\n                  className=\"btn btn-primary mr-2\"\r\n                  onClick={() => {\r\n                  this.props.dispatch(getcustomerInduk(row.kode_customer))\r\n                    this.setState({\r\n                    customer : row.kode_customer\r\n                  })}}\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#level1Modal\"\r\n                  data-tut=\"reactour_3\"\r\n                >\r\n                  <i className=\"fa fa-users mr-1\"></i>\r\n                  Level 1\r\n                </button>\r\n                <button\r\n                disabled={row.level_customer === \"LEVEL1\" || row.level_customer === \"LEVEL2\"}\r\n                  className=\"btn btn-primary mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#level2Modal\"\r\n                onClick={() => {\r\n                  this.props.dispatch(getcustomerInduk(row.kode_customer))\r\n                  this.setState({\r\n                  customer : row.kode_customer\r\n                })}}\r\n                  data-tut=\"reactour_3\"\r\n                >\r\n                  <i className=\"fa fa-users mr-1\"></i>\r\n                  Level 2\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getcustomerList());\r\n  }\r\n\r\n  updateStatus = (input) => {\r\n    console.log(input);\r\n    this.setState({\r\n      response: input,\r\n    });\r\n    this.props.dispatch(getcustomerList());\r\n  };\r\n\r\n  handleSubmit(hasil) {\r\n    let data = {\r\n      tanggal_daftar: hasil.tanggalDaftar,\r\n      kode_customer: hasil.kodeCustomer,\r\n      nama_customer: hasil.namaCustomer,\r\n      nama_toko: hasil.namaToko,\r\n      kode_ext: hasil.kodeExt || \"-\",\r\n      kode_provinsi: hasil.kodeProvinsi,\r\n      level_customer: hasil.level_customer,\r\n      kode_kota: hasil.kodeKota,\r\n      kode_kecamatan: hasil.kodeKecamatan,\r\n      alamat: hasil.alamat || \"-\",\r\n      kode_pos: hasil.kodePos || 0,\r\n      contact_person: hasil.contactPerson || \"-\",\r\n      no_telp: hasil.telepon || \"-\",\r\n      no_hp: hasil.handPhone || \"-\",\r\n      fax: hasil.fax || \"-\",\r\n      email: hasil.email || \"-\",\r\n    };\r\n    let dataEdit = {\r\n      tanggal_daftar: hasil.tanggalDaftar,\r\n      nama_customer: hasil.namaCustomer,\r\n      nama_toko: hasil.namaToko,\r\n      kode_ext: hasil.kodeExt || \"-\",\r\n      kode_provinsi: hasil.kodeProvinsi,\r\n      level_customer: hasil.level_customer,\r\n      kode_kota: hasil.kodeKota,\r\n      kode_kecamatan: hasil.kodeKecamatan,\r\n      alamat: hasil.alamat || \"-\",\r\n      kode_pos: hasil.kodePos || 0,\r\n      contact_person: hasil.contactPerson || 0,\r\n      no_telp: hasil.telepon || \"-\",\r\n      no_hp: hasil.handPhone || \"-\",\r\n      fax: hasil.fax || \"-\",\r\n      email: hasil.email || \"-\",\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPost(\"customer/add\", data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Ditambah!\")\r\n          .then(() => LogData(\"Data Berhasil Ditambah Di Customer\", data))\r\n          .then(() => this.props.dispatch(getcustomerList()))\r\n          .then(() => this.props.dispatch(reset(\"Customer\")))\r\n      )\r\n      .catch((err) =>\r\n        this.handleReactive(\r\n          err,\r\n          hasil.kodeCustomer,\r\n          dataEdit,\r\n          this.props.dispatch(finishSend())\r\n        )\r\n      );\r\n  }\r\n\r\n  handleEdit(hasil) {\r\n    let kirim = {\r\n      user_id: hasil.user_id,\r\n      password: hasil.password,\r\n    };\r\n    AxiosMasterPost(\"users/check\", kirim)\r\n      .then(() => {\r\n        let data = {\r\n          tanggal_daftar: hasil.tanggalDaftar,\r\n          nama_customer: hasil.namaCustomer,\r\n          nama_toko: hasil.namaToko,\r\n          kode_ext: hasil.kodeExt,\r\n          level_customer: hasil.level_customer,\r\n          kode_provinsi: hasil.kodeProvinsi,\r\n          kode_kota: hasil.kodeKota,\r\n          kode_kecamatan: hasil.kodeKecamatan,\r\n          alamat: hasil.alamat,\r\n          kode_pos: hasil.kodePos,\r\n          contact_person: hasil.contactPerson,\r\n          no_telp: hasil.telepon,\r\n          no_hp: hasil.handPhone,\r\n          fax: hasil.fax,\r\n          email: hasil.email,\r\n        };\r\n        this.props.dispatch(progressSend());\r\n        AxiosMasterPut(\"customer/edit/\" + hasil.kodeCustomer, data)\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => this.props.dispatch(hideModal()))\r\n          .then((res) =>\r\n            berhasil(\"Data Berhasil Diubah!\")\r\n              .then(() => LogData(\"Data Berhasil Diubah Di Customer\", data))\r\n              .then(() => this.props.dispatch(getcustomerList()))\r\n          )\r\n          .catch((err) =>\r\n            gagal(\"Data Gagal Diubah!\")\r\n              .then(() => this.props.dispatch(finishSend()))\r\n              .then(() => LogData(\"Data Gagal Diubah Di Customer\", data, err))\r\n              .then(() => this.props.dispatch(hideModal()))\r\n          );\r\n      })\r\n      .catch(() => {\r\n        warning(\"Gagal Verifikasi Account\");\r\n        return false;\r\n      });\r\n  }\r\n\r\n  tambahModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({ isEdit: false });\r\n  }\r\n  editModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  handleReactive(err, kode, data) {\r\n    this.props.dispatch(hideModal());\r\n    let error = err.response.data;\r\n    let check = error.includes(\"deleted\");\r\n    check\r\n      ? reactive(\r\n          err,\r\n          kode,\r\n          \"customer/reactive/\",\r\n          data,\r\n          \"customer/edit/\"\r\n        ).then(() => this.props.dispatch(getcustomerList()))\r\n      : gagal(\"Data Gagal Ditambahkan\");\r\n  }\r\n  handleTambahInduk(data){\r\n    this.props.dispatch(progressSend())\r\n    AxiosMasterPost(`/customer/induk/${this.state.customer}&${data.kodeCustomer}`).then((res) => {\r\n      berhasil(\"Berhasi Tambah Data Induk\")\r\n    })\r\n    .then(()=> this.props.dispatch(finishSend()))\r\n    .then(()=> this.props.dispatch(getcustomerInduk(this.state.customer)))\r\n    .catch((err) =>  {\r\n      this.props.dispatch(finishSend())\r\n      warning(err.response.data) \r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div id=\"notif_alert\" className={this.props.alert} role=\"alert\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n          <strong>Error - </strong> Tidak Bisa Mengambil Data\r\n        </div>\r\n        <TourGuide\r\n          tourConfig={[\r\n            `Untuk Menambahkan Data Customer, Tekan Tombol ini Dan Isi kolom yang disediakan`,\r\n            `Ini adalah Data Customer yang sudah tersimpan`,\r\n            `Ini adalah tombol untuk menghapus data pada baris yang dipilih`,\r\n            `Ini adalah tombol untuk mengubah data pada baris yang dipilih`,\r\n          ]}\r\n        />\r\n        <ModalMasterData\r\n          content={\r\n            this.state.isEdit ? (\r\n              <FormCustomerEdit\r\n                onSubmit={(data) => this.handleEdit(data)}\r\n                onSend={this.props.onSend}\r\n              />\r\n            ) : (\r\n              <FormCustomer\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n                onSend={this.props.onSend}\r\n              />\r\n            )\r\n          }\r\n          title={\r\n            this.state.isEdit ? \"Edit Data Customer\" : \"Tambah Data Customer\"\r\n          }\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Data Customer\" />\r\n              <div className=\"card-body\">\r\n                <form action=\"#\">\r\n                  <div className=\"form-body\">\r\n                    <div className=\"col-lg-12 col-md-12\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          name=\"simpan\"\r\n                          id=\"simpan\"\r\n                          type=\"button\"\r\n                          className=\"btn btn-info\"\r\n                          onClick={() => this.tambahModal()}\r\n                          data-tut=\"reactour_1\"\r\n                        >\r\n                          Tambah Data Customer\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <div data-tut=\"reactour_2\">\r\n                  {this.props.customerList ? (\r\n                    <ToolkitProvider\r\n                      keyField=\"kode_customer\"\r\n                      data={this.props.customerList}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"text-left mt-5 mb-3\">\r\n                          <div className=\"text-right\">\r\n                            <SearchBar\r\n                              {...props.searchProps}\r\n                              className=\"form-control\"\r\n                              placeholder=\"Pencarian\"\r\n                              style={{ margin: 0, top: \"50%\" }}\r\n                            />\r\n                          </div>\r\n                          <hr />\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            expandRow={rowExpand}\r\n                            pagination={paginationFactory()}\r\n                          />\r\n                          <ExportCSVButton\r\n                            {...props.csvProps}\r\n                            className=\"btn btn-primary\"\r\n                          >\r\n                            Export CSV\r\n                          </ExportCSVButton>\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  ) : (\r\n                    <div>\r\n                      {this.props.error ? (\r\n                        <div className=\"text-center\">\r\n                          <img\r\n                            src={notrespond}\r\n                            style={{ width: \"30%\" }}\r\n                            alt=\"Not Respond\"\r\n                          />\r\n                          <br />\r\n                          <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton width={\"100%\"} height={180} />\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n          id=\"level1Modal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-xl\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Daftar Customer Level 1\r\n                </h4>\r\n                <button\r\n                  type=\"button\"\r\n                  id=\"dismissModal\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <FormTambahInduk\r\n                customer = {this.state.customer}\r\n                level=\"LEVEL1\"\r\n                onSubmit={(data) => this.handleTambahInduk(data)}/>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"level2Modal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-xl\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Daftar Customer Level 2\r\n                </h4>\r\n                <button\r\n                  type=\"button\"\r\n                  id=\"dismissModal\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n              <FormTambahInduk\r\n                customer = {this.state.customer}\r\n                level=\"LEVEL2\"\r\n                onSubmit={(data) => this.handleTambahInduk(data)}/>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoStae, null)(Customer);\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Stepper = require('./Stepper');\n\nvar _Stepper2 = _interopRequireDefault(_Stepper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Stepper2.default;"],"sourceRoot":""}