{"version":3,"sources":["Stocking/KirimBahan.jsx","Stocking/Component/FormKirimMasak.jsx","Validations/validationKirimMasak.js","Stocking/Component/FormKirimMasakBarang.jsx"],"names":["kirimBahan","props","inputChange","input","e","setState","target","value","state","products","response","tanggal","tukang","columns","dataField","text","footer","align","headerAlign","columnData","reduce","acc","item","parseFloat","csvExport","formatter","rowContent","row","rowIndex","className","data-tip","data-for","onClick","deleteIndex","dispatch","getListKirimBahan","id","type","effect","this","getUUID","getBruto","getNetto","getQty","Swal","fire","position","icon","showConfirmButton","timer","simpan","noFaktur","noBon","kodeLokasi","barangDetails","JSON","parse","localStorage","getItem","footerItem","totalNetto","sumNetto","totalBruto","sumBruto","totalNettoExt","totalP","totalGross","totalQty","sumQty","totalpkg","totalRp","totalK","footerDocument","inputBy","username","console","log","data","split","kodeBarang","nama","netto","bruto","rp","kadarTransaksi","nettoDiscGlobalExt","keterangan","pkg","gross","p","kodeKategori","qty","k","kadarCetak","noBarcode","kodeJenis","discGlobalGr","nettoDiscGlobal","discGlobalPr","array","push","setItem","stringify","style","color","title","htmlFor","name","onChange","key","marginLeft","data-toggle","data-target","onSubmit","handleSubmit","listBarang","keyField","bordered","headerClasses","width","height","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","Component","connect","provinsi","perhitungan","renderField","label","limit","readOnly","meta","touched","error","warning","min","step","maxLength","SearchBar","Search","FormKirimMasak","submit","kode_tukang","nama_tukang","listTukang","getListTukang","component","search","searchProps","placeholder","margin","top","baseProps","striped","hover","condensed","pagination","paginationFactory","reduxForm","form","enableReinitialize","validationKirimMasak","values","errors","FormKirimMasakBarang","handleChange","result_explode","kadarBeli","namaJenis","change","Axios","get","server","then","res","catch","err","getTimbangan","Field","onBlur","setKadar","map","list","setNetto","validate","selector","formValueSelector","toFixed"],"mappings":"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","file":"static/js/39.f2337c0c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport FormKirimMasak from \"./Component/FormKirimMasak\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport FormKirimMasakBarang from \"./Component/FormKirimMasakBarang\";\r\nimport Swal from \"sweetalert2\";\r\nimport { connect } from \"react-redux\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getListKirimBahan } from \"../actions/kirimBahanAction\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { getBruto, getNetto, getQty } from \"../actions/LogicAction\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { deleteIndex } from \"../deleteLocalStorage\";\r\nimport HeaderCard from \"../HeaderCard\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    listBarang: state.provinsi.kirimBahan,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumNetto: state.perhitungan.sumNetto,\r\n    sumQty: state.perhitungan.sumQty,\r\n  };\r\n};\r\n\r\nclass kirimBahan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      products: [],\r\n      response: \"\",\r\n      tanggal: \"\",\r\n      tukang: \"DEFAULT|DEFAULT\",\r\n      columns: [\r\n        {\r\n          dataField: \"kodeJenis\",\r\n          text: \"Kode Jenis\",\r\n          footer: \"\",\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi\",\r\n          text: \"Cap Kode\",\r\n          footer: \"\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          footer: (columnData) =>\r\n            columnData.reduce(\r\n              (acc, item) => parseFloat(acc) + parseFloat(item),\r\n              0\r\n            ),\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          footer: (columnData) =>\r\n            columnData.reduce(\r\n              (acc, item) => parseFloat(acc) + parseFloat(item),\r\n              0\r\n            ),\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() =>\r\n                    deleteIndex(\r\n                      \"kirimBahan\",\r\n                      rowIndex,\r\n                      this.props.dispatch,\r\n                      getListKirimBahan()\r\n                    )\r\n                  }\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                </button>\r\n                <br />\r\n                {/* <button\r\n                  data-tip\r\n                  data-for=\"edit\"\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() => console.log(\"EDIT\")}\r\n                >\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Edit</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                </button> */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListKirimBahan());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getBruto(\"kirimBahan\"));\r\n    this.props.dispatch(getNetto(\"kirimBahan\"));\r\n    this.props.dispatch(getQty(\"kirimBahan\"));\r\n  }\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  kirimBahan() {\r\n    if (this.state.tukang === \"DEFAULT|DEFAULT\") {\r\n      Swal.fire({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        text: \"Data Harap isi Tukang\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n      return false;\r\n    } else if (this.state.tanggal === \"\") {\r\n      Swal.fire({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        text: \"Data Harap isi Tanggal\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n      return false;\r\n    }\r\n    var simpan = {\r\n      noFaktur: this.props.noFaktur,\r\n      noBon: this.props.noFaktur,\r\n      tanggal: this.state.tanggal,\r\n      kodeLokasi: \"PUSAT\",\r\n      barangDetails: JSON.parse(localStorage.getItem(\"kirimBahan\")),\r\n      footerItem: {\r\n        totalNetto: this.props.sumNetto,\r\n        totalBruto: this.props.sumBruto,\r\n        totalNettoExt: 0,\r\n        totalP: 0,\r\n        totalGross: 0,\r\n        totalQty: this.props.sumQty,\r\n        totalpkg: 0,\r\n        totalRp: 0,\r\n        totalK: 0,\r\n      },\r\n      footerDocument: {\r\n        inputBy: this.props.username, //INPUT BY DEFAULT\r\n      },\r\n    };\r\n    console.log(simpan);\r\n  }\r\n  handleSubmit(data) {\r\n    var supp = data.kodeBarang\r\n      ? data.kodeBarang\r\n      : \"DEFAULT|DEFAULT|DEFAULT|DEFAULT\";\r\n    var split = supp.split(\"|\");\r\n    var nama = {\r\n      noFaktur: this.props.noFaktur,\r\n      netto: parseFloat(data.netto),\r\n      bruto: parseFloat(data.bruto),\r\n      rp: 0,\r\n      kadarTransaksi: parseFloat(data.kadarTransaksi),\r\n      nettoDiscGlobalExt: 0,\r\n      keterangan: split[3],\r\n      pkg: 0,\r\n      gross: 0,\r\n      p: 0,\r\n      kodeKategori: \"-\",\r\n      qty: 1,\r\n      k: 0,\r\n      kadarCetak: 0,\r\n      noBarcode: \"-\",\r\n      kodeJenis: split[0],\r\n      discGlobalGr: 0,\r\n      nettoDiscGlobal: 0,\r\n      discGlobalPr: 0,\r\n    };\r\n    var array = JSON.parse(localStorage.getItem(\"kirimBahan\")) || [];\r\n    array.push(nama);\r\n    localStorage.setItem(\"kirimBahan\", JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Transaksi berhasil\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n    this.props.dispatch(getListKirimBahan());\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Kirim Bahan\" />\r\n              <div className=\"card-body\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-3 col-lg-3\">\r\n                      <label htmlFor=\"\">Tanggal</label>\r\n                      <input\r\n                        name=\"tanggal\"\r\n                        id=\"tanggal\"\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"tanggal\")}\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-3\">\r\n                      <label htmlFor=\"\">Tukang</label>\r\n                      <select\r\n                        name=\"tukang\"\r\n                        id=\"tukang\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"tukang\")}\r\n                      >\r\n                        <option value=\"DEFAULT|DEFAULT\" key=\"DEFAULT\">\r\n                          SILAHKAN PILIH\r\n                        </option>\r\n                        <option value=\"ANGGUN|ANGGUN\" key=\"ANGGUN\">\r\n                          ANGGUN\r\n                        </option>\r\n                      </select>\r\n                    </div>\r\n                    <div\r\n                      className=\"col-lg-1 col-md-1 no-gutters form-group\"\r\n                      style={{ marginLeft: -30 }}\r\n                    >\r\n                      <label htmlFor=\"\" className=\"text-white\">\r\n                        .\r\n                      </label>\r\n                      <button\r\n                        className=\"btn btn-primary form-control\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#primary-header-modal\"\r\n                      >\r\n                        +\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"col-md-5 col-lg-5\"></div>\r\n                  </div>\r\n                  <FormKirimMasakBarang\r\n                    onSubmit={(data) => this.handleSubmit(data)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"col-lg-12 col-md-12 mb-2\">\r\n                  <div className=\"text-left\">\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      onClick={() => this.kirimBahan()}\r\n                    >\r\n                      Simpan Data\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"col-lg-12\">\r\n                  {this.props.listBarang ? (\r\n                    <BootstrapTable\r\n                      keyField=\"id\"\r\n                      data={this.props.listBarang}\r\n                      columns={this.state.columns}\r\n                      bordered={true}\r\n                      headerClasses=\"header-table\"\r\n                    />\r\n                  ) : (\r\n                    <Skeleton width={\"100%\"} height={100} />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"primary-header-modal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Tukang Masak\r\n                </h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <FormKirimMasak />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(kirimBahan);\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { getListTukang } from \"../../actions/listTukang\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nconst { SearchBar } = Search;\r\nconst columns = [\r\n  {\r\n    dataField: \"kodeLokasi\",\r\n    text: \"Kode Tukang\",\r\n  },\r\n  {\r\n    dataField: \"namaLokasi\",\r\n    text: \"Nama Tukang\",\r\n  },\r\n];\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    listTukang: state.provinsi.listTukang,\r\n  };\r\n};\r\n\r\nclass FormKirimMasak extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      kode_tukang: null,\r\n      nama_tukang: null,\r\n      listTukang: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListTukang());\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  submit = () => {\r\n    console.log(JSON.stringify(this.state));\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <form onSubmit={this.props.handleSubmit} className=\"col-lg-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <div className=\"form-group\">\r\n                <Field\r\n                  name=\"kodeLokasi\"\r\n                  label=\"Kode Tukang\"\r\n                  component={renderField}\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-10\">\r\n              <div className=\"form-group\">\r\n                <Field\r\n                  name=\"namaLokasi\"\r\n                  label=\"Nama Tukang\"\r\n                  component={renderField}\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  name=\"submit\"\r\n                  id=\"simpan\"\r\n                  type=\"submit\"\r\n                  className=\"btn btn-info\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          {this.props.listTukang ? (\r\n            <ToolkitProvider\r\n              keyField=\"id\"\r\n              data={this.props.listTukang}\r\n              columns={columns}\r\n              search\r\n            >\r\n              {(props) => (\r\n                <div className=\"form-group\">\r\n                  <h3 className=\"mt-2\">Kolom Pencarian</h3>\r\n                  <div>\r\n                    <SearchBar\r\n                      {...props.searchProps}\r\n                      className=\"form-control\"\r\n                      placeholder=\"Tuliskan Kode / Nama\"\r\n                      style={{ margin: 0, top: \"50%\" }}\r\n                    />\r\n                  </div>\r\n                  <hr />\r\n                  <BootstrapTable\r\n                    {...props.baseProps}\r\n                    striped\r\n                    hover\r\n                    condensed\r\n                    bordered={true}\r\n                    headerClasses=\"header-table\"\r\n                    pagination={paginationFactory()}\r\n                  />\r\n                </div>\r\n              )}\r\n            </ToolkitProvider>\r\n          ) : (\r\n            <Skeleton width={\"100%\"} height={300} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormKirimMasak = reduxForm({\r\n  form: \"FormKirimMasak\",\r\n  enableReinitialize: true,\r\n})(FormKirimMasak);\r\nexport default connect(maptostate, null)(FormKirimMasak);\r\n","const validationKirimMasak = (values) => {\r\n  const errors = {};\r\n  if (!values.kodeBarang) {\r\n    errors.kodeBarang = \"Tidak Boleh Kosong\";\r\n  }\r\n  if (!values.kadarTransaksi) {\r\n    errors.kadarTransaksi = \"Tidak Boleh Kosong\";\r\n  }\r\n  if (!values.bruto) {\r\n    errors.bruto = \"Tidak Boleh Kosong\";\r\n  }\r\n  if (!values.netto) {\r\n    errors.netto = \"Tidak Boleh Kosong\";\r\n  }\r\n};\r\n\r\nexport default validationKirimMasak;\r\n","import React, { Component } from \"react\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport validationKirimMasak from \"../../Validations/validationKirimMasak\";\r\nimport { getTimbangan } from \"../../GetTimbangan\";\r\n\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nclass FormKirimMasakBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listBarang: [],\r\n    };\r\n  }\r\n\r\n  handleChange = (input) => (e) => {\r\n    var supp = e.target.value\r\n      ? e.target.value\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      kadarCetak: result_explode[1],\r\n      kadarBeli: result_explode[2],\r\n      namaJenis: result_explode[3],\r\n    });\r\n  };\r\n\r\n  setKadar() {\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarBeli);\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n  }\r\n  setNetto() {\r\n    this.props.change(\r\n      \"netto\",\r\n      this.props.netto === \"NaN\" ? 0 : this.props.netto\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(server + \"subcategorys2?kodeKelompok=PERHIASAN\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listBarang: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    getTimbangan(this.props.change);\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <label htmlFor=\"\">Kode Model</label>\r\n            <Field\r\n              name=\"kodeBarang\"\r\n              component=\"select\"\r\n              className=\"form-control\"\r\n              onChange={this.handleChange()}\r\n              onBlur={this.setKadar()}\r\n            >\r\n              <option value=\"DEFAULT|DEFAULT|DEFAULT\" key=\"DEFAULT\">\r\n                SILAHKAN PILIH\r\n              </option>\r\n              {this.state.listBarang.map((list) => (\r\n                <option\r\n                  value={\r\n                    list.kodeJenis +\r\n                    \"|\" +\r\n                    list.kadarCetak +\r\n                    \"|\" +\r\n                    list.kadarBeli +\r\n                    \"|\" +\r\n                    list.namaJenis\r\n                  }\r\n                  key={list.kodeJenis}\r\n                >\r\n                  {list.namaJenis}\r\n                </option>\r\n              ))}\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"kadarTransaksi\"\r\n              label=\"Kode Tukar\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              onBlur={this.setNetto()}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Bruto (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              onBlur={this.setNetto()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Netto (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              onBlur={this.setNetto()}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary mb-3 mt-3\"\r\n                onClick={this.submit}\r\n              >\r\n                Tambah data\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormKirimMasakBarang = reduxForm({\r\n  form: \"FormKirimMasakBarang\",\r\n  enableReinitialize: true,\r\n  validate: validationKirimMasak,\r\n})(FormKirimMasakBarang);\r\nconst selector = formValueSelector(\"FormKirimMasakBarang\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi } = selector(state, \"bruto\", \"kadarTransaksi\");\r\n  return {\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n  };\r\n})(FormKirimMasakBarang);\r\n"],"sourceRoot":""}