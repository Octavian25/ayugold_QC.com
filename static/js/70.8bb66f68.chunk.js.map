{"version":3,"sources":["Stocking/Component/FormMutasiCiok.jsx","Validations/validasiMutasiCiok.js"],"names":["renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","FormMutasiCiok","props","inputChange","e","setState","target","value","state","listBarang","Axios","get","server","then","res","data","catch","err","console","log","getTimbangan","this","change","result_explode","split","kodeJenis","kadarCetak","kadarBeli","namaJenis","noFaktur","netto","onSubmit","handleSubmit","name","component","renderFieldSelect","onChange","handleChange","onBlur","setKadar","options","map","list","setNetto","normalize","toUpperCase","Component","reduxForm","form","enableReinitialize","validate","validasiMutasiCiok","selector","formValueSelector","connect","bruto","kadarTransaksi","parseFloat","toFixed","errors","noBon","transaksi","tanggal"],"mappings":"wPASMA,EAAc,SAAC,GAAD,IAClBC,EADkB,EAClBA,MACAC,EAFkB,EAElBA,MACAC,EAHkB,EAGlBA,KACAC,EAJkB,EAIlBA,MACAC,EALkB,EAKlBA,SALkB,IAMlBC,KAAQC,EANU,EAMVA,QAASC,EANC,EAMDA,MAAOC,EANN,EAMMA,QANN,OAQlB,yBAAKC,UAAU,cACb,2BAAOC,QAAQ,GAAGD,UAAU,cACzBR,GAEH,2CACMD,EADN,CAEEE,KAAMA,EACNO,UAAU,eACVE,IAAI,IACJC,KAAK,QACLC,UAAWV,EACXC,SAAUA,KAEXE,IACGC,GAAS,uBAAGE,UAAU,oBAAoBF,IACzCC,GAAW,2BAAIA,MAGlBM,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAKRC,YAAc,SAAChB,GAAD,OAAW,SAACiB,GACxB,EAAKC,SAAL,eACGlB,EAAQiB,EAAEE,OAAOC,UANpB,EAAKC,MAAQ,CACXC,WAAY,IAHG,E,qDAWnB,WAAqB,IAAD,OAClBC,IAAMC,IAAIC,4EACPC,MAAK,SAACC,GAAD,OACJ,EAAKT,SAAS,CACZI,WAAYK,EAAIC,UAGnBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC9BG,YAAaC,KAAKnB,MAAMoB,U,0BAG1B,SAAaP,GACX,IACIQ,GADOR,GAAc,0CACCS,MAAM,KAChCH,KAAKhB,SAAS,CACZoB,UAAWF,EAAe,GAC1BG,WAAYH,EAAe,GAC3BI,UAAWJ,EAAe,GAC1BK,UAAWL,EAAe,KAE5BF,KAAKnB,MAAMoB,OAAO,QAASC,EAAe,IAC1CF,KAAKnB,MAAMoB,OAAO,iBAAkBC,EAAe,IACnDF,KAAKnB,MAAMoB,OAAO,aAAcC,EAAe,IAC/CF,KAAKnB,MAAMoB,OAAO,WAAYD,KAAKnB,MAAM2B,Y,sBAG3C,WACER,KAAKnB,MAAMoB,OAAO,QAASD,KAAKb,MAAMkB,YACtCL,KAAKnB,MAAMoB,OAAO,iBAAkBD,KAAKb,MAAMmB,WAC/CN,KAAKnB,MAAMoB,OAAO,aAAcD,KAAKb,MAAMoB,a,sBAE7C,WACEP,KAAKnB,MAAMoB,OACT,QACqB,QAArBD,KAAKnB,MAAM4B,MAAkB,EAAIT,KAAKnB,MAAM4B,S,oBAGhD,WAAU,IAAD,OACP,OACE,0BAAMC,SAAUV,KAAKnB,MAAM8B,cACzB,yBAAKpC,UAAU,OACb,yBAAKA,UAAU,uBACb,kBAAC,IAAD,CACER,MAAM,aACN6C,KAAK,aACLC,UAAWC,IACXC,SAAU,SAACrB,GAAD,OAAU,EAAKsB,aAAatB,IACtCuB,OAAQ,kBAAM,EAAKC,YACnBC,QAASnB,KAAKb,MAAMC,WAAWgC,KAAI,SAACC,GAYlC,MAXW,CACTnC,MACEmC,EAAKjB,UACL,IACAiB,EAAKhB,WACL,IACAgB,EAAKf,UACL,IACAe,EAAKd,UACPK,KAAMS,EAAKd,iBAMnB,yBAAKhC,UAAU,uBACb,kBAAC,IAAD,CACEqC,KAAK,QACL7C,MAAM,aACN8C,UAAWhD,EACXG,KAAK,OACLiD,OAAQjB,KAAKsB,cAGjB,yBAAK/C,UAAU,uBACb,kBAAC,IAAD,CACEqC,KAAK,iBACL7C,MAAM,aACN8C,UAAWhD,EACXG,KAAK,UAGT,yBAAKO,UAAU,uBACb,kBAAC,IAAD,CACEqC,KAAK,QACL7C,MAAM,aACN8C,UAAWhD,EACXG,KAAK,OACLE,UAAU,KAGd,yBAAKK,UAAU,8BACb,kBAAC,IAAD,CACEqC,KAAK,aACL7C,MAAM,aACN8C,UAAWhD,EACXG,KAAK,OACLE,UAAU,EACVqD,UAAW,SAACrC,GAAD,OAAWA,GAASA,EAAMsC,kBAIzC,yBAAKjD,UAAU,8BACb,kBAAC,IAAD,CACEqC,KAAK,WACL7C,MAAM,eACN8C,UAAWhD,EACXG,KAAK,OACLE,UAAU,KAGd,yBAAKK,UAAU,uBACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAAkBP,KAAK,UAAzC,kB,GA5HeyD,aAuI7B7C,EAAiB8C,YAAU,CACzBC,KAAM,iBACNC,oBAAoB,EACpBC,SAAUC,KAHKJ,CAId9C,GACH,IAAMmD,EAAWC,YAAkB,kBACpBC,uBAAQ,SAAC9C,GACtB,MAAkC4C,EAAS5C,EAAO,QAAS,kBAAnD+C,EAAR,EAAQA,MAAOC,EAAf,EAAeA,eACf,MAAO,CACL1B,OAAQ2B,WAAWF,IAAUE,WAAWD,GAAkB,MAAME,QAAQ,MAH7DJ,CAKZrD,I,iCC9JYkD,IAvBY,SAAC5C,GAC1B,IAAMoD,EAAS,GAmBf,OAlBKpD,EAAMgD,QACTI,EAAOJ,MAAQ,sBAEZhD,EAAMuB,QACT6B,EAAO7B,MAAQ,sBAEZvB,EAAMqD,QACTD,EAAOC,MAAQ,sBAEZrD,EAAMqD,QACTD,EAAOC,MAAQ,sBAEZrD,EAAMsD,YACTF,EAAOE,UAAY,sBAEhBtD,EAAMuD,UACTH,EAAOG,QAAU,sBAEZH","file":"static/js/70.8bb66f68.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport validasiMutasiCiok from \"../../Validations/validasiMutasiCiok\";\r\nimport { getTimbangan } from \"../../GetTimbangan\";\r\nimport { renderFieldSelect } from \"../../renderField\";\r\n\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nclass FormMutasiCiok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listBarang: [],\r\n    };\r\n  }\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    Axios.get(server + \"subcategorys2?kodeKelompok=PERHIASAN\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listBarang: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    getTimbangan(this.props.change);\r\n  }\r\n\r\n  handleChange(data) {\r\n    var supp = data ? data : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      kadarCetak: result_explode[1],\r\n      kadarBeli: result_explode[2],\r\n      namaJenis: result_explode[3],\r\n    });\r\n    this.props.change(\"kadar\", result_explode[1]);\r\n    this.props.change(\"kadarTransaksi\", result_explode[2]);\r\n    this.props.change(\"keterangan\", result_explode[3]);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n  }\r\n\r\n  setKadar() {\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarBeli);\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n  }\r\n  setNetto() {\r\n    this.props.change(\r\n      \"netto\",\r\n      this.props.netto === \"NaN\" ? 0 : this.props.netto\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              label=\"Kode Model\"\r\n              name=\"kodeBarang\"\r\n              component={renderFieldSelect}\r\n              onChange={(data) => this.handleChange(data)}\r\n              onBlur={() => this.setKadar()}\r\n              options={this.state.listBarang.map((list) => {\r\n                let data = {\r\n                  value:\r\n                    list.kodeJenis +\r\n                    \"|\" +\r\n                    list.kadarCetak +\r\n                    \"|\" +\r\n                    list.kadarBeli +\r\n                    \"|\" +\r\n                    list.namaJenis,\r\n                  name: list.namaJenis,\r\n                };\r\n                return data;\r\n              })}\r\n            ></Field>\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Bruto (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              onBlur={this.setNetto()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadarTransaksi\"\r\n              label=\"Harga (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Netto (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group d-none\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Netto (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group d-none\">\r\n            <Field\r\n              name=\"noFaktur\"\r\n              label=\"Nomor Faktur\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 col-lg-12\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormMutasiCiok = reduxForm({\r\n  form: \"FormMutasiCiok\",\r\n  enableReinitialize: true,\r\n  validate: validasiMutasiCiok,\r\n})(FormMutasiCiok);\r\nconst selector = formValueSelector(\"FormMutasiCiok\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi } = selector(state, \"bruto\", \"kadarTransaksi\");\r\n  return {\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n  };\r\n})(FormMutasiCiok);\r\n","const validasiMutasiCiok = (value) => {\r\n  const errors = {};\r\n  if (!value.bruto) {\r\n    errors.bruto = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.netto) {\r\n    errors.netto = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.noBon) {\r\n    errors.noBon = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.noBon) {\r\n    errors.noBon = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.transaksi) {\r\n    errors.transaksi = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.tanggal) {\r\n    errors.tanggal = \"Tidak Boleh kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validasiMutasiCiok;\r\n"],"sourceRoot":""}