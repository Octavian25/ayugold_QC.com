{"version":3,"sources":["Validasi/Component/FormEditPenerimaanSupplierNew.jsx","Validasi/editPenerimaanSupplierNew.jsx","Validations/validationTerimaSupplier.js"],"names":["currencyMask","createNumberMask","prefix","suffix","locale","renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","FormEditPenerimaanSupplierNew","props","pilihBarang","e","result_explode","target","value","split","setState","kodeJenis","namaJenis","kadarCetak","kadarBeli","onclick1","bind","state","kodeBarang","DataSupplier","kode_barang","keterangan","kadar","P","K","bungkus","berat","harga","murni","ongkos","status","axios","get","server","then","res","data","catch","err","console","log","this","change","netto","noFaktur","gross","onSubmit","handleSubmit","Field","name","component","defaultValue","normalize","toUpperCase","onChange","onBlur","setKadar","map","kode","style","from","visibility","disabled","submitting","Component","reduxForm","form","validate","validationTerimaSupplier","enableReinitialize","selector","formValueSelector","connect","bruto","kadarTransaksi","pkg","parseFloat","toFixed","editPenerimaanSupplierNew","inputChange","pilihSupplier","kodeSupplier","namaSupplier","date","Date","formatedDate","getFullYear","getMonth","getDate","listSupplier","columns","dataField","text","title","content","tanggal_invoice","tanggal_barang","noBon","startingDate","tampungBarang","dispatch","getsupplierList","Axios","alert","getUUID","isi","tanggal","tanggalBarang","barangDetails","nettoDiscGlobalExt","qty","k","rp","discGlobalPr","kodeKategori","noBarcode","p","discGlobalGr","nettoDiscGlobal","array","push","color","to","aria-hidden","id","data-toggle","data-target","tabIndex","role","aria-labelledby","data-dismiss","supplierList","provinsi","supplier","errors"],"mappings":"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","file":"static/js/170.fa8e66b8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validationTerimaSupplier from \"../../Validations/validationTerimaSupplier\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\n\r\nclass FormEditPenerimaanSupplierNew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onclick1 = this.onclick1.bind(this);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      DataSupplier: [],\r\n      kode_barang: \"\",\r\n      keterangan: \"INI KETERANGAN\",\r\n      kadar: \"\",\r\n      P: \"\",\r\n      K: \"\",\r\n      bungkus: \"\",\r\n      berat: \"\",\r\n      harga: \"\",\r\n      murni: \"\",\r\n      ongkos: \"\",\r\n      status: \"\",\r\n      kadarCetak: \"\",\r\n      kadarBeli: \"\",\r\n      namaJenis: \"\",\r\n      kodeJenis: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(server + \"subcategorys\")\r\n      .then((res) =>\r\n        this.setState({\r\n          kodeBarang: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  onclick1() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n    this.props.change(\"gross\", this.props.gross);\r\n  }\r\n\r\n  pilihBarang = (input) => (e) => {\r\n    var supp = e.target.value\r\n      ? e.target.value\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      namaJenis: result_explode[1],\r\n      kadarCetak: result_explode[2],\r\n      kadarBeli: result_explode[3],\r\n    });\r\n  };\r\n\r\n  setKadar() {\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarBeli);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-lg-12 d-none\">\r\n            <Field\r\n              name=\"noFaktur\"\r\n              label={this.props.noFaktur}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              component={renderField}\r\n              defaultValue={this.props.noFaktur}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <label htmlFor=\"\">Kode Barang</label>\r\n            <Field\r\n              name=\"kodeJenis\"\r\n              component=\"select\"\r\n              className=\"form-control\"\r\n              onChange={this.pilihBarang()}\r\n              onBlur={this.setKadar()}\r\n            >\r\n              {this.state.kodeBarang === [] ? (\r\n                <option>TIDAK ADA DATA</option>\r\n              ) : (\r\n                this.state.kodeBarang.map((kode) => (\r\n                  <option\r\n                    value={\r\n                      kode.kodeJenis +\r\n                      \"|\" +\r\n                      kode.namaJenis +\r\n                      \"|\" +\r\n                      kode.kadarCetak +\r\n                      \"|\" +\r\n                      kode.kadarBeli\r\n                    }\r\n                  >\r\n                    {kode.namaJenis}\r\n                  </option>\r\n                ))\r\n              )}\r\n            </Field>\r\n          </div>\r\n          <div\r\n            className=\"col-md-8 form-group\"\r\n            style={\r\n              this.props.from === \"terima\" ? null : { visibility: \"hidden\" }\r\n            }\r\n          >\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              type=\"text\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kadar (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field name=\"p\" label=\"P\" type=\"number\" component={renderField} />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field name=\"k\" label=\"K\" type=\"number\" component={renderField} />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"pkg\"\r\n              label=\"Bungkus (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Berat (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadarTransaksi\"\r\n              label=\"Harga (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"gross\"\r\n              label=\"Gross (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Murni (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <label htmlFor=\"\">Ongkos (Rp)</label>\r\n            <Field\r\n              name=\"rp\"\r\n              component=\"input\"\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 form-group mt-3\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\"\r\n                disabled={this.props.submitting}\r\n              >\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormEditPenerimaanSupplierNew = reduxForm({\r\n  form: \"TerimaSupplier\",\r\n  validate: validationTerimaSupplier,\r\n  enableReinitialize: true,\r\n})(FormEditPenerimaanSupplierNew);\r\nconst selector = formValueSelector(\"TerimaSupplier\"); // <-- same as form name\r\n\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi, pkg } = selector(\r\n    state,\r\n    \"bruto\",\r\n    \"kadarTransaksi\",\r\n    \"pkg\"\r\n  );\r\n  return {\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n    gross: parseFloat(bruto) + parseFloat(pkg),\r\n  };\r\n})(FormEditPenerimaanSupplierNew);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getsupplierList } from \"../actions/supplierAction\";\r\nimport Axios from \"axios\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormEditPenerimaanSupplierNew from \"./Component/FormEditPenerimaanSupplierNew\";\r\n\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    supplierList: state.provinsi.supplier,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n  };\r\n};\r\n\r\nclass editPenerimaanSupplierNew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var date = new Date();\r\n    var formatedDate = `${date.getFullYear()}-${\r\n      date.getMonth() + 1\r\n    }-${date.getDate()}`;\r\n    this.state = {\r\n      listSupplier: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kodeBarang\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kadar\",\r\n          text: \"Kadar Cetak(%)\",\r\n        },\r\n        {\r\n          dataField: \"p\",\r\n          text: \"P\",\r\n        },\r\n        {\r\n          dataField: \"k\",\r\n          text: \"K\",\r\n        },\r\n        {\r\n          dataField: \"bungkus\",\r\n          text: \"Bungkus(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"harga\",\r\n          text: \"Harga(%)\",\r\n        },\r\n        {\r\n          dataField: \"murni\",\r\n          text: \"Murni(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"ongkosKirim\",\r\n          text: \"Ongkos(RP)\",\r\n        },\r\n      ],\r\n      title: \"PENERIMAAN SUPPLIER\",\r\n      content: \"HELLO\",\r\n      tanggal_invoice: \"\",\r\n      tanggal_barang: \"\",\r\n      noBon: \"\",\r\n      kodeSupplier: \"\",\r\n      namaSupplier: \"\",\r\n      startingDate: formatedDate,\r\n      tampungBarang: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getsupplierList());\r\n    Axios.get(server + \"suppliers\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listSupplier: res.data,\r\n        })\r\n      )\r\n      .catch((err) => alert(err));\r\n    this.props.dispatch(getUUID());\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  pilihSupplier = (input) => (e) => {\r\n    var supp = e.target.value ? e.target.value : \"DEFALT | DEFAULT\";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeSupplier: result_explode[0],\r\n      namaSupplier: result_explode[1],\r\n    });\r\n  };\r\n\r\n  handleSubmit(data) {\r\n    let isi = {\r\n      noFaktur: this.props.noFaktur,\r\n      tanggal: this.state.tanggal_invoice,\r\n      noBon: this.state.noBon,\r\n      kodeSupplier: this.state.kodeSupplier,\r\n      namaSupplier: this.state.namaSupplier,\r\n      tanggalBarang: this.state.tanggal_barang,\r\n      barangDetails: {\r\n        noFaktur: this.props.noFaktur, //\r\n        nettoDiscGlobalExt: 0,\r\n        gross: parseFloat(data.gross), //berat + bungkus\r\n        netto: parseFloat(data.netto), //murni\r\n        qty: 0,\r\n        k: parseFloat(data.k),\r\n        rp: parseFloat(data.rp), //ongkos\r\n        kadarCetak: 0,\r\n        keterangan: data.keterangan,\r\n        discGlobalPr: 0,\r\n        kodeKategori: \"-\",\r\n        kadarTransaksi: parseFloat(data.kadarTransaksi), //harga%\r\n        kodeJenis: data.kodeJenis, //kodebarang\r\n        noBarcode: \"-\",\r\n        p: parseFloat(data.p),\r\n        discGlobalGr: 0,\r\n        pkg: parseFloat(data.pkg),\r\n        bruto: parseFloat(data.bruto), //berat\r\n        nettoDiscGlobal: 0,\r\n      },\r\n    };\r\n    console.log(isi);\r\n    var array = this.state.tampungBarang;\r\n    array.push(isi);\r\n    this.setState({\r\n      tampungBarang: array,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <ol className=\"breadcrumb mb-2\">\r\n              <Link to=\"/editStok\">\r\n                <button type=\"button\" className=\"btn btn-secondary\">\r\n                  <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i>{\" \"}\r\n                  Back\r\n                </button>\r\n              </Link>\r\n            </ol>\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-4 col-md-4\">\r\n                      <label htmlFor=\"\">Supplier</label>\r\n                      <select\r\n                        name=\"supplier\"\r\n                        id=\"kodeSupplier\"\r\n                        className=\"form-control\"\r\n                        onChange={this.pilihSupplier(\"kodeSupplier\")}\r\n                      >\r\n                        <option value=\"DEFAULT | DEFAULT\">\r\n                          SILAHKAN PILIH\r\n                        </option>\r\n                        {this.state.listSupplier.map((kode) => (\r\n                          <option\r\n                            value={kode.kodeSupplier + \"|\" + kode.namaSupplier}\r\n                          >\r\n                            {kode.namaSupplier}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Tanggal Invoice</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        id=\"tanggal_invoice\"\r\n                        name=\"tanggal_invoice\"\r\n                        className=\"form-control\"\r\n                        defaultValue={this.state.startingDate}\r\n                        onChange={this.inputChange(\"tanggal_invoice\")}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Tanggal Barang</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        id=\"tanggal_barang\"\r\n                        name=\"tanggal_barang\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"tanggal_barang\")}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-4 mt-3\">\r\n                      <label htmlFor=\"\">Keterangan</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"keterangan\"\r\n                        name=\"keterangan\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"keterangan\")}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4 mt-3\">\r\n                      <label htmlFor=\"\">No Bon</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"noBon\"\r\n                        name=\"noBon\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"noBon\")}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-12 col-lg-12 mt-3\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6 col-md-6\">\r\n                          <div className=\"text-left\">\r\n                            <Link to=\"/ViewPDF\">\r\n                              <button className=\"btn btn-primary\" type=\"button\">\r\n                                PDF\r\n                              </button>\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-md-6\">\r\n                          <div className=\"text-right\">\r\n                            <button\r\n                              className=\"btn btn-primary\"\r\n                              data-toggle=\"modal\"\r\n                              data-target=\"#primary-header-modal\"\r\n                            >\r\n                              Tambah Data\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"primary-header-modal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Tambah Data Terima Supplier\r\n                </h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <FormEditPenerimaanSupplierNew\r\n                  from=\"terima\"\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                  noFaktur={this.props.noFaktur}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(editPenerimaanSupplierNew);\r\n","const validationTerimaSupplier = (value) => {\r\n  const errors = {};\r\n  if (!value.kodeJenis) {\r\n    errors.kodeJenis = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.pkg) {\r\n    errors.pkg = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.p) {\r\n    errors.p = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.k) {\r\n    errors.k = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.bruto) {\r\n    errors.bruto = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.gross) {\r\n    errors.gross = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validationTerimaSupplier;\r\n"],"sourceRoot":""}