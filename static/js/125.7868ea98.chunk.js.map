{"version":3,"sources":["Totalan/TransaksiPembelianLM.jsx","../node_modules/redux-form/es/index.js","HeaderCard.jsx","Stocking/Component/PrintNota.jsx"],"names":["FormHeadPenjualanLM","lazy","FormModalTransaksiLM","ModalMasterData","serverPOST","process","REACT_APP_BACKEND_URL_NON_MASTER","TransaksiPembelianLM","props","inputChange","input","e","setState","target","value","localStorage","setItem","date","Date","formatedDate","getFullYear","getMonth","getDate","state","listSupplier","columns","dataField","text","footerClasses","tanggal_invoice","tanggal_barang","noBon","totalNW","totalBruto","totalPkg","totalGross","totalOngkir","kodeSupplier","namaSupplier","keterangan","startingDate","tampungBarang","tampungBarangLocal","urutan","getItem","this","dispatch","getsupplierList","getUUID","getTerimaSupplierTemp","getNetto","getBruto","getPkg","getGross","getRp","getListDataTablePembelianLM","data","result_explode","kodeJenis","split","isiDetail","noFaktur","nettoDiscGlobalExt","parseFloat","totalHargaLM","gross","netto","qty","tipeTransaksi","k","rp","harga","kadarCetak","discGlobalPr","kodeKategori","kadarTransaksi","noBarcode","p","discGlobalGr","pkg","bruto","nettoDiscGlobal","hasil","JSON","parse","push","stringify","hideModal","Swal","fire","position","icon","showConfirmButton","timer","then","reset","undefined","customer","warning","isi","toUpperCase","tanggal","kodeCustomer","namaToko","tanggalBarang","barangDetails","footerDocument","inputBy","username","console","log","progressSend","tableRows","forEach","ticket","i","ticketData","toLocaleString","columTable","Axios","post","res","finishSend","removeItem","PrintNota","catch","err","className","style","color","title","onSubmit","kirimData","onSend","listDataTablePembelianLM","keyField","search","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","content","fallback","width","height","count","from","handleSubmit","Component","connect","supplierList","provinsi","supplier","terimaSupplierTemp","alert","error","sumNetto","perhitungan","sumBruto","sumPkg","sumRp","sumGross","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","HeaderCard","fontSize","backgroundColor","borderTopLeftRadius","borderTopRightRadius","id","type","effect","data-tip","data-for","onClick","window","location","reload","row1name","row1isi","row2name","row2isi","row3name","row3isi","row4name","row4isi","validby","tableColumn","doc","jsPDF","setProperties","autoTable","startY","theme","rowPageBreak","pageBreak","margin","top","bodyStyles","lineWidth","lineColor","headStyles","fillColor","finalY","lastAutoTable","setFontSize","string","output","x","open","document","write","close"],"mappings":"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","file":"static/js/125.7868ea98.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getsupplierList } from \"../actions/supplierAction\";\r\nimport Axios from \"axios\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { reset } from \"redux-form\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getTerimaSupplierTemp } from \"../actions/terimaSupplierAction\";\r\nimport { warning } from \"../Alert\";\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport {\r\n  finishSend,\r\n  getBruto,\r\n  getGross,\r\n  getNetto,\r\n  getPkg,\r\n  getRp,\r\n  progressSend,\r\n} from \"../actions/LogicAction\";\r\nimport { getListDataTablePembelianLM } from \"../actions/transaksuPenjualanLMAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { hideModal } from \"../actions/ModalAction\";\r\n\r\nconst FormHeadPenjualanLM = lazy(() => import(\"./Element/FormHeadPenjualanLM\"));\r\nconst FormModalTransaksiLM = lazy(() =>\r\n  import(\"./Element/FormModalTransaksiLM\")\r\n);\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\nconst serverPOST = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nconst maptostate = (state) => {\r\n  return {\r\n    supplierList: state.provinsi.supplier,\r\n    tampungBarang: state.provinsi.terimaSupplierTemp,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    totalNW: state.provinsi.totalNW,\r\n    listDataTablePembelianLM: state.provinsi.listDataTablePembelianLM,\r\n    sumNetto: state.perhitungan.sumNetto,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumPkg: state.perhitungan.sumPkg,\r\n    sumRp: state.perhitungan.sumRp,\r\n    sumGross: state.perhitungan.sumGross,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\n\r\nclass TransaksiPembelianLM extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var date = new Date();\r\n    var formatedDate = `${date.getFullYear()}-${\r\n      date.getMonth() + 1\r\n    }-${date.getDate()}`;\r\n    this.state = {\r\n      listSupplier: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kodeJenis\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kadarCetak\",\r\n          text: \"Kadar Cetak(%)\",\r\n        },\r\n        {\r\n          dataField: \"p\",\r\n          text: \"P\",\r\n        },\r\n        {\r\n          dataField: \"k\",\r\n          text: \"K\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Bungkus(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi\",\r\n          text: \"Harga(%)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni(Gr)\",\r\n\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n      ],\r\n      tanggal_invoice: formatedDate,\r\n      tanggal_barang: formatedDate,\r\n      noBon: \"\",\r\n      totalNW: 0,\r\n      totalBruto: 0,\r\n      totalPkg: 0,\r\n      totalGross: 0,\r\n      totalOngkir: 0,\r\n      kodeSupplier: \"\",\r\n      namaSupplier: \"\",\r\n      keterangan: \"\",\r\n      startingDate: formatedDate,\r\n      tampungBarang: [],\r\n      tampungBarangLocal: [],\r\n      urutan: localStorage.getItem(\"urutan\") || 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getsupplierList());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getTerimaSupplierTemp());\r\n    this.props.dispatch(getNetto(\"TransaksiPembelianLM\"));\r\n    this.props.dispatch(getBruto(\"TransaksiPembelianLM\"));\r\n    this.props.dispatch(getPkg(\"TransaksiPembelianLM\"));\r\n    this.props.dispatch(getGross(\"TransaksiPembelianLM\"));\r\n    this.props.dispatch(getRp(\"TransaksiPembelianLM\"));\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getListDataTablePembelianLM());\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n    localStorage.setItem([input], e.target.value);\r\n  };\r\n\r\n  handleSubmit(data) {\r\n    var jenis = data.kodeJenis ? data.kodeJenis : \"DEFALT | DEFAULT\";\r\n    var result_explode = jenis.split(\"|\");\r\n    let isiDetail = {\r\n      noFaktur: this.props.noFaktur, //\r\n      nettoDiscGlobalExt: parseFloat(data.totalHargaLM),\r\n      gross: parseFloat(data.gross), //berat + bungkus\r\n      netto: parseFloat(data.netto), //murni\r\n      qty: 0,\r\n      tipeTransaksi: \"JUAL LM\",\r\n      k: parseFloat(data.k),\r\n      rp: parseFloat(data.harga), //ongkos\r\n      kadarCetak: result_explode[2],\r\n      keterangan: data.keterangan,\r\n      discGlobalPr: 0,\r\n      kodeKategori: \"-\",\r\n      kadarTransaksi: parseFloat(data.kadarTransaksi), //harga%\r\n      kodeJenis: result_explode[0], //kodebarang\r\n      noBarcode: \"-\",\r\n      p: parseFloat(data.p),\r\n      discGlobalGr: 0,\r\n      pkg: parseFloat(data.pkg),\r\n      bruto: parseFloat(data.bruto), //berat\r\n      nettoDiscGlobal: 0,\r\n    };\r\n    let hasil = JSON.parse(localStorage.getItem(\"TransaksiPembelianLM\")) || [];\r\n    hasil.push(isiDetail);\r\n    localStorage.setItem(\"TransaksiPembelianLM\", JSON.stringify(hasil));\r\n    this.props.dispatch(getTerimaSupplierTemp());\r\n    this.props.dispatch(hideModal());\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    })\r\n      .then(() => this.props.dispatch(reset(\"TerimaSupplier\")))\r\n      .then(() => this.props.dispatch(getTerimaSupplierTemp()))\r\n      .then(() => this.props.dispatch(getNetto(\"TransaksiPembelianLM\")))\r\n      .then(() => this.props.dispatch(getBruto(\"TransaksiPembelianLM\")))\r\n      .then(() => this.props.dispatch(getPkg(\"TransaksiPembelianLM\")))\r\n      .then(() => this.props.dispatch(getGross(\"TransaksiPembelianLM\")))\r\n      .then(() => this.props.dispatch(getRp(\"TransaksiPembelianLM\")))\r\n      .then(() => this.props.dispatch(getListDataTablePembelianLM()));\r\n  }\r\n\r\n  kirimData(data) {\r\n    if (data.customer === undefined) {\r\n      warning(\"Mohon pilih Supplier\");\r\n      return false;\r\n    } else if (data.keterangan === undefined) {\r\n      warning(\"Mohon isi Keterangan\");\r\n      return false;\r\n    } else if (data.noBon === undefined) {\r\n      warning(\"Mohon Isi nomor Bon\");\r\n      return false;\r\n    } else if (localStorage.getItem(\"TransaksiPembelianLM\") === null) {\r\n      warning(\"Barang masih kosong, mohon tambahkan barang\");\r\n      return false;\r\n    }\r\n    let isi = {\r\n      noFaktur: this.props.noFaktur.toUpperCase(),\r\n      tanggal: data.tanggal_invoice,\r\n      noBon:\r\n        data.noBon.toUpperCase() === undefined ? \"-\" : data.noBon.toUpperCase(),\r\n      kodeCustomer:\r\n        data.kodeCustomer === undefined ? \"-\" : data.kodeCustomer.toUpperCase(),\r\n      namaToko: data.namaToko === undefined ? \"-\" : data.namaToko.toUpperCase(),\r\n      tanggalBarang: data.tanggal_barang,\r\n      tipeTransaksi: \"BELI LM\",\r\n      barangDetails: JSON.parse(localStorage.getItem(\"TransaksiPembelianLM\")),\r\n      footerDocument: {\r\n        inputBy: this.props.username, //INPUT BY DEFAULT\r\n      },\r\n    };\r\n    console.log(JSON.stringify(isi));\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"TransaksiPembelianLM\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        ++i,\r\n        ticket.kodeJenis,\r\n        ticket.kadarCetak,\r\n        ticket.p,\r\n        ticket.k,\r\n        ticket.pkg,\r\n        ticket.bruto,\r\n        ticket.kadarTransaksi,\r\n        ticket.netto,\r\n        parseFloat(ticket.rp).toLocaleString(\"id-ID\"),\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    console.log(JSON.stringify(tableRows));\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kode Barang\",\r\n      \"Kadar Cetak (%)\",\r\n      \"P\",\r\n      \"K\",\r\n      \"Bungkus(Gr)\",\r\n      \"Berat(Gr)\",\r\n      \"Harga(Gr)\",\r\n      \"Murni(Gr)\",\r\n      \"Ongkos(Rp)\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    Axios.post(serverPOST + \"cst/dc/lm\", isi)\r\n      .then((res) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Data Berhasil Ditambahkan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => this.props.dispatch(reset(\"FormHeadPenjualanLM\")))\r\n          .then(() => localStorage.removeItem(\"TransaksiPembelianLM\"))\r\n          .then(() => localStorage.removeItem(\"FakturRekapBon\"))\r\n          .then(() => this.props.dispatch(getTerimaSupplierTemp()))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => this.props.dispatch(getNetto(\"TransaksiPembelianLM\")))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"no Terima\",\r\n              this.props.noFaktur,\r\n              \"Tanggal\",\r\n              this.state.tanggal_invoice,\r\n              \"No Bon\",\r\n              data.noBon.toUpperCase(),\r\n              \"Supplier\",\r\n              this.state.kodeSupplier,\r\n              \"ADMIN\",\r\n              this.state.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"Terima Barang Supplier\",\r\n              tableRows\r\n            )\r\n          )\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Data Gagal Ditambahkan\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Transaksi Pembelian LM\" />\r\n              <div className=\"card-body\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-9 mb-3\"></div>\r\n                    <div className=\"col-lg-3\">\r\n                      {/* <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-warning\"\r\n                          data-target=\"#editModal\"\r\n                          data-toggle=\"modal\"\r\n                          data-backdrop=\"static\"\r\n                          data-keyboard=\"false\"\r\n                        >\r\n                          Edit Terima Barang\r\n                        </button>\r\n                      </div> */}\r\n                    </div>\r\n                    <br />\r\n                    <FormHeadPenjualanLM\r\n                      onSubmit={(data) => this.kirimData(data)}\r\n                      onSend={this.props.onSend}\r\n                    />\r\n                  </div>\r\n                  {this.props.listDataTablePembelianLM ? (\r\n                    <ToolkitProvider\r\n                      keyField=\"id\"\r\n                      data={this.props.listDataTablePembelianLM}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"form-group mt-2\">\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            pagination={paginationFactory()}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ModalMasterData\r\n          content={\r\n            <Suspense\r\n              fallback={<Skeleton width={\"100%\"} height={50} count={5} />}\r\n            >\r\n              <FormModalTransaksiLM\r\n                from=\"terima\"\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n                noFaktur={this.props.noFaktur}\r\n              />\r\n            </Suspense>\r\n          }\r\n          title=\"Tambah Data LM\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(TransaksiPembelianLM);\r\n","import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import React, { Component } from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nclass HeaderCard extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"card-header mb-3\"\r\n        style={{\r\n          fontSize: 30,\r\n          backgroundColor: \"#394867\",\r\n          borderTopLeftRadius: 10,\r\n          borderTopRightRadius: 10,\r\n          color: \"#ffffff\",\r\n        }}\r\n      >\r\n        <div className=\"row my-auto\">\r\n          <div className=\"col-lg-10 my-auto\">\r\n            <h4\r\n              style={{\r\n                fontSize: 25,\r\n                color: \"#ffffff\",\r\n              }}\r\n            >\r\n              {this.props.title}\r\n            </h4>\r\n          </div>\r\n          <div className=\"col-lg-2 text-right my-auto\">\r\n            <ReactTooltip id=\"reload\" type=\"dark\" effect=\"solid\">\r\n              <span>Reload</span>\r\n            </ReactTooltip>\r\n            <button\r\n              data-tip\r\n              data-for=\"reload\"\r\n              className=\"btn btn-success btn-small btn-circle my-auto\"\r\n              onClick={() => window.location.reload()}\r\n            >\r\n              <i className=\"fa fa-retweet\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderCard;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst PrintNota = (\r\n  row1name = \"\",\r\n  row1isi = \"\",\r\n  row2name = \"\",\r\n  row2isi = \"\",\r\n  row3name = \"\",\r\n  row3isi = \"\",\r\n  row4name = \"\",\r\n  row4isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  tableColumn = [],\r\n  title = \"\",\r\n  tableRows\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  doc.setProperties({\r\n    title: title,\r\n  });\r\n  // doc.autoTable({\r\n  //   head: tableColumn,\r\n  //   body: tableRows,\r\n  //   startY: 40,\r\n  //   theme: \"plain\",\r\n  //   rowPageBreak: \"avoid\",\r\n  //   pageBreak: \"avoid\",\r\n  //   margin: { top: 20 },\r\n  //   bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n  //   headStyles: {\r\n  //     lineWidth: 0.02,\r\n  //     lineColor: \"#000\",\r\n  //     fillColor: [212, 212, 211],\r\n  //   },\r\n  // });\r\n  doc.autoTable(tableColumn, tableRows, {\r\n    startY: 40,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    pageBreak: \"avoid\",\r\n    margin: { top: 20 },\r\n    bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fillColor: [212, 212, 211],\r\n    },\r\n  });\r\n  let finalY = doc.lastAutoTable.finalY + 10;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(title, 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(row1name, 14, 25);\r\n  doc.text(\":\", 37, 25);\r\n  doc.text(row1isi, 40, 25);\r\n  doc.text(row2name, 120, 25);\r\n  doc.text(\":\", 141, 25);\r\n  doc.text(row2isi, 145, 25);\r\n  //row 2\r\n  doc.text(row3name, 14, 30);\r\n  doc.text(\":\", 37, 30);\r\n  doc.text(row3isi, 40, 30);\r\n  doc.text(row4name, 120, 30);\r\n  doc.text(\":\", 141, 30);\r\n  doc.text(row4isi, 145, 30);\r\n\r\n  //Stamp\r\n  doc.text(\"User\", 160, finalY + 10);\r\n  doc.text(\":\", 168, finalY + 10);\r\n  doc.text(username, 170, finalY + 10);\r\n  doc.text(\"Cetak\", 160, finalY + 15);\r\n  doc.text(\":\", 168, finalY + 15);\r\n  doc.text(tanggal, 170, finalY + 15);\r\n  doc.text(\"Valid\", 160, finalY + 20);\r\n  doc.text(\":\", 168, finalY + 20);\r\n  doc.text(validby, 170, finalY + 20);\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>\" +\r\n      title +\r\n      \"</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  x.document.close();\r\n};\r\n\r\nexport default PrintNota;\r\n"],"sourceRoot":""}