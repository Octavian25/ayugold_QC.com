{"version":3,"sources":["DataMaster/Component/ModalMasterData.jsx","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js"],"names":["ModalGlobal","props","state","show","this","onHide","dispatch","hideModal","dialogClassName","backdrop","keyboard","Header","closeButton","style","backgroundColor","color","Title","title","Body","content","Component","connect","modal","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","element","className","classList","remove","setAttribute","baseVal","addClass","add","contains","indexOf","hasClass"],"mappings":"2LAUMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAIT,IAAD,OACP,OACE,kBAAC,IAAD,CACEC,KAAMC,KAAKH,MAAME,KACjBE,OAAQ,kBAAM,EAAKJ,MAAMK,SAASC,gBAClCC,gBAAgB,WAChBC,SAAS,SACTC,UAAU,GAEV,kBAAC,IAAMC,OAAP,CACEC,aAAW,EACXC,MAAO,CAAEC,gBAAiB,UAAWC,MAAO,YAE5C,kBAAC,IAAMC,MAAP,KAAcZ,KAAKH,MAAMgB,OAAS,KAEpC,kBAAC,IAAMC,KAAP,KAAad,KAAKH,MAAMkB,SAAW,S,GApBjBC,aA0BXC,uBA/BI,SAACnB,GAClB,MAAO,CACLC,KAAMD,EAAMoB,MAAMnB,QA6Ba,KAApBkB,CAA0BrB,I,iCCpCzC,SAASuB,EAAiBC,EAAWC,GACnC,OAAOD,EAAUE,QAAQ,IAAIC,OAAO,UAAYF,EAAgB,YAAa,KAAM,MAAMC,QAAQ,OAAQ,KAAKA,QAAQ,aAAc,IAGvH,SAASE,EAAYC,EAASC,GACvCD,EAAQE,UACVF,EAAQE,UAAUC,OAAOF,GACa,kBAAtBD,EAAQC,UAExBD,EAAQC,UAAYP,EAAiBM,EAAQC,UAAWA,GAExDD,EAAQI,aAAa,QAASV,EAAiBM,EAAQC,WAAaD,EAAQC,UAAUI,SAAW,GAAIJ,IAXzG,mC,iCCCe,SAASK,EAASN,EAASC,GACpCD,EAAQE,UAAWF,EAAQE,UAAUK,IAAIN,GCFhC,SAAkBD,EAASC,GACxC,OAAID,EAAQE,YAAoBD,GAAaD,EAAQE,UAAUM,SAASP,IACkC,KAAlG,KAAOD,EAAQC,UAAUI,SAAWL,EAAQC,WAAa,KAAKQ,QAAQ,IAAMR,EAAY,KDA9BS,CAASV,EAASC,KAA6C,kBAAtBD,EAAQC,UAAwBD,EAAQC,UAAYD,EAAQC,UAAY,IAAMA,EAAeD,EAAQI,aAAa,SAAUJ,EAAQC,WAAaD,EAAQC,UAAUI,SAAW,IAAM,IAAMJ,I","file":"static/js/9.18e648f0.chunk.js","sourcesContent":["import { Modal } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideModal } from \"../../actions/ModalAction\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    show: state.modal.show,\r\n  };\r\n};\r\nclass ModalGlobal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <Modal\r\n        show={this.props.show}\r\n        onHide={() => this.props.dispatch(hideModal())}\r\n        dialogClassName=\"modal-xl\"\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header\r\n          closeButton\r\n          style={{ backgroundColor: \"#5F76E8\", color: \"#ffffff\" }}\r\n        >\r\n          <Modal.Title>{this.props.title || \"\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{this.props.content || \"\"}</Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(ModalGlobal);\r\n","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    ;\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import hasClass from './hasClass';\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","export default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}"],"sourceRoot":""}