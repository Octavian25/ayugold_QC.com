{"version":3,"sources":["Transaksi/TolakanReturnSupplier.jsx"],"names":["FormTerimaSupplier","lazy","ModalMasterData","TolakanReturnSupplier","props","inputChange","input","e","setState","target","value","pilihSupplier","result_explode","split","kodeSupplier","namaSupplier","state","supplierList","DataSupplier","startDate","getToday","tanggal","noBon","getBon","status","tampungBarang","columns","dataField","text","align","headerAlign","headerStyle","width","formatter","data","formatGram","footerClasses","cell","formatRp","csvExport","rowContent","row","rowIndex","className","data-tip","data-for","onClick","deleteIndex","dispatch","getListTolakanReturnSupplier","id","type","effect","localStorage","removeItem","this","getsupplierList","getUUID","kodeJenis","simpan","kode_kategori","kode_jenis","kadar_cetak","parseFloat","kadar","toString","kadar_beli","kadarTransaksi","no_barcode","qty","p","k","pkg","gross","bruto","netto","ongkos_rp","undefined","rp","harga_beli","array","JSON","parse","getItem","push","setItem","stringify","Swal","fire","position","icon","showConfirmButton","timer","reset","no_bon_selected","warning","tanggal_selected","supplier_selected","map","list","reduce","a","b","isi","no_tolak","noFaktur","no_bon","kode_supplier","jenis_trx","total_qty","total_p","total_k","total_pkg","total_bruto","total_netto","total_ongkos","detail_barang","console","log","progressSend","tableRows","table","forEach","ticket","i","ticketData","content","styles","halign","footer","columTable","AxiosMasterPost","then","res","PrintNota","getUserID","multipleDeleteLocal","finishSend","document","getElementById","catch","err","response","style","color","title","fallback","height","from","onSubmit","handleSubmit","name","component","renderFieldSelect","options","supplier","nama_supplier","label","placeholder","onChange","renderField","normalize","toUpperCase","disabled","showModal","class","aria-hidden","keyField","returnSupplier","onSend","returnSupplierSubmit","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","initialValues","provinsi","username","listTolakanReturnSupplier","alert","error"],"mappings":"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","file":"static/js/161.d9167afa.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getListTolakanReturnSupplier } from \"../actions/returnSupplier\";\r\nimport { Field, formValueSelector, reduxForm, reset } from \"redux-form\";\r\n\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\nimport { deleteIndex } from \"../deleteLocalStorage\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { showModal } from \"../actions/ModalAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport { getsupplierList } from \"../actions/supplierAction\";\r\nimport { renderField, renderFieldSelect } from \"../renderField\";\r\nimport GlobalTabel from \"../GlobalComponent/GlobalTabel\";\r\nimport {\r\n  formatGram,\r\n  formatRp,\r\n  getBon,\r\n  getUserID,\r\n  multipleDeleteLocal,\r\n} from \"../helper\";\r\nimport { getToday } from \"../getDate\";\r\nconst FormTerimaSupplier = lazy(() => import(\"./Component/FormTerimaSupplier\"));\r\n\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\n\r\nclass TolakanReturnSupplier extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      supplierList: [],\r\n      DataSupplier: [],\r\n      startDate: getToday(),\r\n      kodeSupplier: \"\",\r\n      namaSupplier: \"\",\r\n      tanggal: getToday(),\r\n      noBon: \"AS/TLK-S-\" + getBon(),\r\n      status: \"\",\r\n      tampungBarang: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Model\",\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Cap\\nKode\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          headerStyle: () => {\r\n            return { width: \"8%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"p\",\r\n          text: \"P\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          headerStyle: () => {\r\n            return { width: \"5%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"k\",\r\n          text: \"K\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          headerStyle: () => {\r\n            return { width: \"5%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Pkg\\n(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          headerStyle: () => {\r\n            return { width: \"7%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat\\n(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          formatter: (data) => formatGram(data),\r\n        },\r\n        {\r\n          dataField: \"kadar_beli\",\r\n          text: \"Kode Tukar\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          formatter: (data) => formatGram(data),\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni\\n(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          formatter: (data) => formatGram(data, 3),\r\n\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"ongkos_rp\",\r\n          text: \"Ongkos\\n(RP)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          formatter: (cell) => <span>Rp. {formatRp(cell)}</span>,\r\n        },\r\n        {\r\n          dataField: \"harga_beli\",\r\n          text: \"Harga Beli\\n(RP)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          formatter: (cell) => <span>Rp. {formatRp(cell)}</span>,\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() =>\r\n                    deleteIndex(\r\n                      \"TolakanReturnSupplier\",\r\n                      rowIndex,\r\n                      this.props.dispatch,\r\n                      getListTolakanReturnSupplier()\r\n                    )\r\n                  }\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                </button>\r\n                <br />\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    localStorage.removeItem(\"TolakanReturnSupplier\")\r\n    this.props.dispatch(getsupplierList());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getListTolakanReturnSupplier());\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  pilihSupplier = (input) => (e) => {\r\n    var supp = e.target.value ? e.target.value : \"DEFALT | DEFAULT\";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeSupplier: result_explode[0],\r\n      namaSupplier: result_explode[1],\r\n    });\r\n  };\r\n\r\n  handleSubmit(data) {\r\n    var supp = data.kodeJenis\r\n      ? data.kodeJenis\r\n      : \"DEFAULT|DEFAULT|DEFAULT|DEFAULT\";\r\n    var split = supp.split(\"|\");\r\n    var simpan = {\r\n      kode_kategori: data.kode_kategori,\r\n      kode_jenis: split[0],\r\n      kadar_cetak: parseFloat(data.kadar || 0).toString(),\r\n      kadar_beli: parseFloat(data.kadarTransaksi),\r\n      no_barcode: \"-\",\r\n      qty: data.qty || 1,\r\n      p: parseFloat(data.p) || 0,\r\n      k: parseFloat(data.k) || 0,\r\n      pkg: parseFloat(data.pkg) || 0,\r\n      gross: parseFloat(data.gross) || 0,\r\n      bruto: parseFloat(data.bruto) || 0,\r\n      netto: parseFloat(data.netto) || 0,\r\n      ongkos_rp: parseFloat(data.rp === undefined ? 0 : data.rp),\r\n      harga_beli: data.harga_beli === \"undefined\" ? 0 : data.harga_beli,\r\n    };\r\n\r\n    var array = JSON.parse(localStorage.getItem(\"TolakanReturnSupplier\")) || [];\r\n    array.push(simpan);\r\n    localStorage.setItem(\"TolakanReturnSupplier\", JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n    this.props.dispatch(getListTolakanReturnSupplier());\r\n    this.props.dispatch(reset(\"TerimaSupplier\"));\r\n  }\r\n\r\n  returnSupplierSubmit() {\r\n    if (this.props.no_bon_selected === \"\") {\r\n      warning(\"Mohon isi nomor bon\");\r\n      return false;\r\n    } else if (this.props.tanggal_selected === \"\") {\r\n      warning(\"Mohon isi Tanggal\");\r\n      return false;\r\n    } else if (localStorage.getItem(\"TolakanReturnSupplier\") === null) {\r\n      warning(\"Barang masih kosong, silahkan tambahkan barang\");\r\n      return false;\r\n    } else if (this.props.supplier_selected === \"\") {\r\n      warning(\"Mohon pilih Supplier\");\r\n      return false;\r\n    }\r\n    let data = JSON.parse(localStorage.getItem(\"TolakanReturnSupplier\"));\r\n    let qty = data\r\n      .map((list) => parseFloat(list.qty))\r\n      .reduce((a, b) => a + b, 0);\r\n    let p = data.map((list) => parseFloat(list.p)).reduce((a, b) => a + b, 0);\r\n    let k = data.map((list) => parseFloat(list.k)).reduce((a, b) => a + b, 0);\r\n    let pkg = data\r\n      .map((list) => parseFloat(list.pkg))\r\n      .reduce((a, b) => a + b, 0);\r\n    let bruto = data\r\n      .map((list) => parseFloat(list.bruto))\r\n      .reduce((a, b) => a + b, 0);\r\n    let netto = data\r\n      .map((list) => parseFloat(list.netto))\r\n      .reduce((a, b) => a + b, 0);\r\n    let ongkos_rp = data\r\n      .map((list) => parseFloat(list.ongkos_rp))\r\n      .reduce((a, b) => a + b, 0);\r\n    let isi = {\r\n      no_tolak: this.props.noFaktur,\r\n      tanggal: this.props.tanggal_selected,\r\n      no_bon: this.state.noBon,\r\n      kode_supplier: this.props.supplier_selected,\r\n      jenis_trx: \"RETUR\",\r\n      total_qty: qty,\r\n      total_p: p,\r\n      total_k: k,\r\n      total_pkg: pkg,\r\n      total_bruto: bruto,\r\n      total_netto: netto,\r\n      total_ongkos: ongkos_rp,\r\n      detail_barang: JSON.parse(localStorage.getItem(\"TolakanReturnSupplier\")),\r\n    };\r\n    console.log(JSON.stringify(isi));\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"TolakanReturnSupplier\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        ++i,\r\n        ticket.kode_jenis,\r\n        { content: ticket.qty, styles: { halign: \"right\" } },\r\n        { content: ticket.kadar_cetak, styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.p), styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.k), styles: { halign: \"right\" } },\r\n        { content: ticket.pkg, styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.bruto), styles: { halign: \"right\" } },\r\n        { content: ticket.kadar_beli, styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.netto, 3), styles: { halign: \"right\" } },\r\n        { content: formatRp(ticket.ongkos_rp), styles: { halign: \"right\" } },\r\n        { content: formatRp(ticket.harga_beli), styles: { halign: \"right\" } },\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    const footer = [\r\n      \"\",\r\n      \"\",\r\n      {\r\n        content: table\r\n          .map((list) => parseFloat(list.qty))\r\n          .reduce((a, b) => a + b, 0),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      {\r\n        content: table\r\n          .map((list) => parseFloat(list.pkg))\r\n          .reduce((a, b) => a + b, 0),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      {\r\n        content: formatGram(\r\n          table.map((list) => parseFloat(list.bruto)).reduce((a, b) => a + b, 0)\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      \"\",\r\n      {\r\n        content: formatGram(\r\n          table\r\n            .map((list) => parseFloat(list.netto))\r\n            .reduce((a, b) => a + b, 0),\r\n          3\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      {\r\n        content: formatRp(\r\n          table\r\n            .map((list) => parseFloat(list.ongkos_rp))\r\n            .reduce((a, b) => a + b, 0)\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      {\r\n        content: formatRp(\r\n          table\r\n            .map((list) => parseFloat(list.harga_beli))\r\n            .reduce((a, b) => a + b, 0)\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n    ];\r\n    // tableRows.push(footer);\r\n    console.log(JSON.stringify(tableRows));\r\n    var columTable = [\r\n      [\r\n        { content: \"No\" },\r\n        { content: \"Kode\\nModel\" },\r\n        { content: \"Qty\", styles: { halign: \"right\" } },\r\n        { content: \"Kadar\\nCetak\", styles: { halign: \"right\" } },\r\n        { content: \"P\", styles: { halign: \"right\" } },\r\n        { content: \"K\", styles: { halign: \"right\" } },\r\n        { content: \"Bungkus\\n(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Berat\\n(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Kode\\nTukar\", styles: { halign: \"right\" } },\r\n        { content: \"Murni\\n(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Ongkos\\n(Rp)\", styles: { halign: \"right\" } },\r\n        { content: \"Harga\\nBeli(Rp)\", styles: { halign: \"right\" } },\r\n      ],\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    AxiosMasterPost(\"trx-tolakan-supplier/simpan\", isi)\r\n      .then((res) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Data Berhasil Ditambahkan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() =>\r\n            PrintNota(\r\n              \"No Bon\",\r\n              this.props.no_bon_selected,\r\n              \"Tanggal\",\r\n              this.props.tanggal_selected,\r\n              \"Supplier\",\r\n              this.props.supplier_selected,\r\n              \"\",\r\n              \"\",\r\n              getUserID(),\r\n              getToday(),\r\n              \"\",\r\n              columTable,\r\n              \"Tolakan Return Barang Supplier\",\r\n              tableRows,\r\n              footer\r\n            )\r\n          )\r\n          .then(() =>\r\n            multipleDeleteLocal([\"TolakanReturnSupplier\", \"noFaktur\"])\r\n          )\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() => this.props.dispatch(getListTolakanReturnSupplier()))\r\n          .then(() =>\r\n            this.setState({\r\n              noBon: \"\",\r\n              kodeSupplier: \"\",\r\n            })\r\n          )\r\n          .then(() => document.getElementById(\"myForm\").reset())\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: err?.response.data,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Tolakan Return Supplier\" />\r\n              <div className=\"card-body\">\r\n                <ModalMasterData\r\n                  content={\r\n                    <Suspense\r\n                      fallback={<Skeleton width={\"100%\"} height={400} />}\r\n                    >\r\n                      <FormTerimaSupplier\r\n                        from=\"tolakan\"\r\n                        onSubmit={(data) => this.handleSubmit(data)}\r\n                        noFaktur={this.props.noFaktur}\r\n                      />\r\n                    </Suspense>\r\n                  }\r\n                  title=\"Tambah Data Barang\"\r\n                />\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                      <form id=\"myForm\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-4\">\r\n                            <Field\r\n                              name=\"supplier\"\r\n                              component={renderFieldSelect}\r\n                              options={this.props.supplier.map((list) => {\r\n                                let data = {\r\n                                  value: list.kode_supplier,\r\n                                  name: list.nama_supplier,\r\n                                };\r\n                                return data;\r\n                              })}\r\n                              type=\"text\"\r\n                              label=\"Supplier\"\r\n                              placeholder=\"Masukan Supplier\"\r\n                              onChange={(data) => {\r\n                                this.setState({\r\n                                  kodeSupplier: data,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-lg-4\">\r\n                            <Field\r\n                              name=\"tanggal\"\r\n                              component={renderField}\r\n                              type=\"date\"\r\n                              label=\"Tanggal\"\r\n                              placeholder=\"Masukan Tanggal\"\r\n                              onChange={(e) => {\r\n                                this.setState({\r\n                                  tanggal: e.target.value,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-lg-4 d-none\">\r\n                            <Field\r\n                              name=\"no_bon\"\r\n                              component={renderField}\r\n                              normalize={(data) => data && data.toUpperCase()}\r\n                              type=\"text\"\r\n                              label=\"Nomor Bon\"\r\n                              placeholder=\"Masukan Nomor Bon\"\r\n                              onChange={(data) => {\r\n                                this.setState({\r\n                                  noBon: data.target.value,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                    <div className=\"col-md-12 col-lg-12 mt-3\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6\"></div>\r\n                        <div className=\"col-lg-6\">\r\n                          <div className=\"text-right\">\r\n                            <button\r\n                              className=\"btn btn-primary\"\r\n                              disabled={this.props.supplier_selected === undefined}\r\n                              onClick={() => this.props.dispatch(showModal())}\r\n                            >\r\n                              Tambah Data\r\n                              <i class=\"fa fa-plus ml-3\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12 mt-3\">\r\n                      <GlobalTabel\r\n                        keyField=\"id\"\r\n                        data={this.props.returnSupplier}\r\n                        columns={this.state.columns}\r\n                      />\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          disabled={this.props.onSend}\r\n                          onClick={() => this.returnSupplierSubmit()}\r\n                        >\r\n                          {this.props.onSend ? (\r\n                            <span\r\n                              className=\"spinner-border spinner-border-sm mr-3\"\r\n                              aria-hidden=\"true\"\r\n                            ></span>\r\n                          ) : null}\r\n                          Selesai\r\n                <i class=\"fa fa-paper-plane ml-3\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTolakanReturnSupplier = reduxForm({\r\n  form: \"TolakanReturnSupplier\",\r\n  enableReinitialize: true,\r\n})(TolakanReturnSupplier);\r\nconst selector = formValueSelector(\"TolakanReturnSupplier\"); // <-- same as form name\r\n\r\nexport default connect((state) => {\r\n  const { supplier, tanggal, no_bon } = selector(\r\n    state,\r\n    \"supplier\",\r\n    \"tanggal\",\r\n    \"no_bon\"\r\n  );\r\n  return {\r\n    initialValues: {\r\n      tanggal: getToday(),\r\n    },\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    returnSupplier: state.provinsi.listTolakanReturnSupplier,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    onSend: state.provinsi.onSend,\r\n    supplier: state.provinsi.supplier,\r\n    no_bon_selected: no_bon,\r\n    tanggal_selected: tanggal,\r\n    supplier_selected: supplier,\r\n  };\r\n})(TolakanReturnSupplier);\r\n"],"sourceRoot":""}