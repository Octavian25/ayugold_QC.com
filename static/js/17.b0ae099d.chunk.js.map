{"version":3,"sources":["FICO/Element/AccordTransferMurni.jsx"],"names":["currencyMask","createNumberMask","prefix","suffix","locale","renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","AccordTransferMurni","props","state","listBank","this","change","transferNettoMurni","transfer","harga","netto","tujuan","supplier","tanggal","local","JSON","parse","localStorage","getItem","transfer_rp","harga_emas","transfer_netto","acc_to","acc_from","tanggal_transfer","dispatch","getrekeningList","getlocal","id","data-toggle","href","aria-expanded","aria-controls","style","color","name","component","aria-labelledby","data-parent","onSubmit","handleSubmit","onBlur","onChange","asal","value","key","rekening","map","list","no_rekening","atas_nama","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","transferNetto","parseFloat","toFixed","provinsi"],"mappings":"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","file":"static/js/17.b0ae099d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { getrekeningList } from \"../../actions/rekeningAction\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nclass AccordTransferMurni extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listBank: [],\r\n    };\r\n  }\r\n  onChange() {\r\n    this.props.change(\"transferNetto\", this.props.transferNettoMurni);\r\n  }\r\n  getlocal() {\r\n    var transfer = 0,\r\n      harga = 0,\r\n      netto = 0,\r\n      tujuan = \"\",\r\n      supplier = \"\",\r\n      tanggal = \"\";\r\n    var local = JSON.parse(localStorage.getItem(\"alatBayarTrfRp\"))\r\n      ? JSON.parse(localStorage.getItem(\"alatBayarTrfRp\"))\r\n      : \"kosong\";\r\n    if (local === \"kosong\") {\r\n      transfer = 0;\r\n      harga = 0;\r\n      netto = 0;\r\n      tujuan = \"\";\r\n      supplier = \"\";\r\n      tanggal = \"\";\r\n    } else {\r\n      transfer = local[0].transfer_rp;\r\n      harga = local[0].harga_emas;\r\n      netto = local[0].transfer_netto;\r\n      tujuan = local[0].acc_to;\r\n      supplier = local[0].acc_from;\r\n      tanggal = local[0].tanggal_transfer;\r\n    }\r\n    this.props.change(\"transfer\", transfer);\r\n    this.props.change(\"harga\", harga);\r\n    this.props.change(\"transferNetto\", netto);\r\n    this.props.change(\"tanggal\", tanggal);\r\n    this.props.change(\"tujuan\", tujuan);\r\n    this.props.change(\"supplier\", supplier);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getrekeningList());\r\n    this.getlocal();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-6 mt-3\">\r\n        <div id=\"accordion\" className=\"custom-accordion mb-4\">\r\n          <div className=\"card mb-0 bg-dark\">\r\n            <div className=\"card-header\" id=\"headingOne\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-8 col-md-8\">\r\n                  <h5 className=\"m-0\">\r\n                    <a\r\n                      className=\"custom-accordion-title d-block pt-2 pb-2 text-white\"\r\n                      data-toggle=\"collapse\"\r\n                      href=\"#collapseTransfer\"\r\n                      aria-expanded=\"true\"\r\n                      aria-controls=\"collapseTransfer\"\r\n                    >\r\n                      Transfer\r\n                      <span className=\"float-right\">\r\n                        <i className=\"mdi mdi-chevron-down accordion-arrow\" />\r\n                      </span>\r\n                    </a>\r\n                  </h5>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\" style={{ color: \"white\" }}>\r\n                    Netto\r\n                  </label>\r\n                  <Field\r\n                    name=\"transferNetto\"\r\n                    type=\"telp\"\r\n                    component=\"input\"\r\n                    className=\"form-control\"\r\n                    readOnly={true}\r\n                    {...currencyMask}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              id=\"collapseTransfer\"\r\n              className=\"collapse\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-parent=\"#accordion\"\r\n            >\r\n              <div className=\"card-body bg-white\">\r\n                <form onSubmit={this.props.handleSubmit}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"\">Transfer</label>\r\n                        <Field\r\n                          name=\"transfer\"\r\n                          component=\"input\"\r\n                          type=\"tel\"\r\n                          className=\"form-control\"\r\n                          onBlur={this.onChange()}\r\n                          {...currencyMask}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Harga </label>\r\n                      <div className=\"form-gorup\">\r\n                        <Field\r\n                          name=\"harga\"\r\n                          component=\"input\"\r\n                          type=\"tel\"\r\n                          className=\"form-control\"\r\n                          onBlur={this.onChange()}\r\n                          readOnly={true}\r\n                          {...currencyMask}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Netto </label>\r\n                      <Field\r\n                        name=\"transferNetto\"\r\n                        label=\"Netto\"\r\n                        type=\"tel\"\r\n                        className=\"form-control\"\r\n                        component=\"input\"\r\n                        readOnly={true}\r\n                        {...currencyMask}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-6\">\r\n                      <Field\r\n                        name={\r\n                          this.props.asal === \"PEMBAYARAN\" ? \"tujuan\" : \"asal\"\r\n                        }\r\n                        label={\r\n                          this.props.asal === \"PEMBAYARAN\"\r\n                            ? \"A/C Tujuan\"\r\n                            : \"A/C Asal\"\r\n                        }\r\n                        type=\"text\"\r\n                        component={renderField}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-6\">\r\n                      <label htmlFor=\"\">\r\n                        {this.props.asal === \"PEMBAYARAN\"\r\n                          ? \"A/C Asal\"\r\n                          : \"A/C Tujuan\"}\r\n                      </label>\r\n                      <Field\r\n                        name={\r\n                          this.props.asal === \"PEMBAYARAN\" ? \"asal\" : \"tujuan\"\r\n                        }\r\n                        className=\"form-control\"\r\n                        component=\"select\"\r\n                      >\r\n                        <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                          silahkan pilih\r\n                        </option>\r\n                        {this.props.rekening.map((list) => (\r\n                          <option\r\n                            value={list.no_rekening}\r\n                            key={list.no_rekening}\r\n                          >\r\n                            {list.atas_nama}\r\n                          </option>\r\n                        ))}\r\n                      </Field>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-6\">\r\n                      <Field\r\n                        name=\"tanggal\"\r\n                        label=\"Tanggal\"\r\n                        type=\"date\"\r\n                        component={renderField}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"text-right\">\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                          Simpan\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* end card*/}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAccordTransferMurni = reduxForm({\r\n  form: \"AccordTransferMurni\",\r\n  enableReinitialize: true,\r\n})(AccordTransferMurni);\r\nconst selector = formValueSelector(\"AccordTransferMurni\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { harga, transfer } = selector(state, \"harga\", \"transfer\");\r\n  return {\r\n    transferNetto: (parseFloat(transfer) / parseFloat(harga)).toFixed(3),\r\n    transferNettoMurni: parseFloat(transfer),\r\n    rekening: state.provinsi.rekening,\r\n  };\r\n})(AccordTransferMurni);\r\n"],"sourceRoot":""}