{"version":3,"sources":["TotalanMenu/Components/FormModalTimbangBarcode.jsx","TotalanMenu/TotalanBarcode.jsx"],"names":["renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","maxLength","server","process","FormModalTimbanganBarcode","props","handleChange","e","result_explode","target","value","split","setState","kodeJenis","kadarCetak","kadarJual","change","state","listBarang","listBarangPerhiasan","Axios","get","then","res","data","catch","err","console","log","this","netto","onSubmit","handleSubmit","Field","name","component","onChange","key","jenisBarang","map","list","namaJenis","normalize","toUpperCase","setNetto","id","defaultChecked","manual","onLoad","noFaktur","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","gross","kadarTransaksi","pkg","parseFloat","toFixed","SearchBar","Search","serverNonMaster","REACT_APP_BACKEND_URL_NON_MASTER","TotalanBarcode","changeInput","listLokasi","columns","dataField","text","sort","headerStyle","width","align","headerAlign","tanggal","lokasi","dispatch","getTableTotalanBarcode","getUUID","getBruto","getNetto","getPkg","getGross","getRp","getQty","explode","kodeBarang","simpan","nettoDiscGlobalExt","noBarcode","barcode","qty","k","kodeKategori","p","nettoDiscGlobal","discGlobalPr","discGlobalGr","bruto","rp","keterangan","array","JSON","parse","localStorage","getItem","push","setItem","stringify","Swal","fire","position","icon","timer","showConfirmButton","reset","undefined","tipeFaktur","noBon","noValid","kodeLokasi","barangDetails","footerItem","totalP","totalGross","sumGross","totalpkg","sumPkg","totalQty","sumQty","totalK","totalRp","sumRp","totalBruto","sumBruto","totalNetto","sumNetto","totalNettoExt","progressSend","tableRows","forEach","ticket","i","ticketData","columTable","post","finishSend","PrintNota","removeItem","HeaderCard","title","namaLokasi","onClick","simpanTotalanTimbang","onSend","aria-hidden","data-target","data-toggle","listTableTotalanBarcode","keyField","search","searchProps","placeholder","style","margin","top","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","noDataIndication","tabIndex","role","aria-labelledby","data-dismiss","FormModalTimbangBarcode","totalanBarcode","provinsi","perhitungan"],"mappings":"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","file":"static/js/150.fcb2b6fd.chunk.js","sourcesContent":["import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nclass FormModalTimbanganBarcode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listBarang: [],\r\n      listBarangPerhiasan: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(server + \"subcategorys2?kodeKelompok=CIOK\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listBarang: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    Axios.get(server + \"subcategorys2?kodeKelompok=PERHIASAN\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listBarangPerhiasan: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  handleChange = (input) => (e) => {\r\n    var supp = e.target.value\r\n      ? e.target.value\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      kadarCetak: result_explode[1],\r\n      kadarJual: result_explode[2],\r\n    });\r\n    this.props.change(\"kadarTransaksi\", result_explode[2]);\r\n    this.props.change(\"keterangan\", result_explode[3]);\r\n  };\r\n  setNetto() {\r\n    this.props.change(\r\n      \"netto\",\r\n      this.props.netto === \"NaN\" ? 0 : this.props.netto\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-3\">\r\n              <label htmlFor=\"\">Kode Model</label>\r\n              <Field\r\n                name=\"kodeBarang\"\r\n                className=\"form-control\"\r\n                component=\"select\"\r\n                onChange={this.handleChange()}\r\n              >\r\n                <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                  SILAHKAN PILIH\r\n                </option>\r\n                {this.props.jenisBarang === \"RONGSOK\"\r\n                  ? this.state.listBarang.map((list) => (\r\n                      <option\r\n                        value={\r\n                          list.kodeJenis +\r\n                          \"|\" +\r\n                          list.kadarCetak +\r\n                          \"|\" +\r\n                          list.kadarJual +\r\n                          \"|\" +\r\n                          list.namaJenis\r\n                        }\r\n                        key={list.kodeJenis}\r\n                      >\r\n                        {list.namaJenis}\r\n                      </option>\r\n                    ))\r\n                  : this.state.listBarangPerhiasan.map((list) => (\r\n                      <option\r\n                        value={\r\n                          list.kodeJenis +\r\n                          \"|\" +\r\n                          list.kadarCetak +\r\n                          \"|\" +\r\n                          list.kadarJual +\r\n                          \"|\" +\r\n                          list.namaJenis\r\n                        }\r\n                        key={list.kodeJenis}\r\n                      >\r\n                        {list.namaJenis}\r\n                      </option>\r\n                    ))}\r\n              </Field>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <Field\r\n                name=\"keterangan\"\r\n                label=\"Keterangan\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"kadarTransaksi\"\r\n                label=\"Kadar(%)\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                readOnly={true}\r\n                onChange={this.setNetto()}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <label htmlFor=\"employed\">Manual</label>\r\n              <div>\r\n                <Field\r\n                  name=\"manual\"\r\n                  id=\"employed\"\r\n                  component=\"input\"\r\n                  type=\"checkbox\"\r\n                  value=\"MANUAL\"\r\n                  defaultChecked={true}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <Field\r\n                name=\"barcode\"\r\n                label=\"Barcode\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                readOnly={this.props.manual}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"gross\"\r\n                label=\"Gross(Gr)\"\r\n                type=\"text\"\r\n                readOnly={!this.props.manual}\r\n                component={renderField}\r\n                onChange={this.setNetto()}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"pkg\"\r\n                label=\"Package(Gr)\"\r\n                type=\"text\"\r\n                readOnly={!this.props.manual}\r\n                component={renderField}\r\n                onChange={this.setNetto()}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"netto\"\r\n                label=\"Netto\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3 d-none\">\r\n              <Field\r\n                name=\"noFaktur\"\r\n                label=\"Netto\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                readOnly={true}\r\n                onLoad={() =>\r\n                  this.props.change(\"noFaktur\", this.props.noFaktur)\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"text-right\">\r\n                <button className=\"btn btn-primary\" type=\"submit\">\r\n                  Simpan\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// Inisialisasi Redux Form\r\nFormModalTimbanganBarcode = reduxForm({\r\n  form: \"FormModalTimbanganBarcode\",\r\n  enableReinitialize: true,\r\n})(FormModalTimbanganBarcode);\r\nconst selector = formValueSelector(\"FormModalTimbanganBarcode\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { gross, kadarTransaksi, pkg, manual } = selector(\r\n    state,\r\n    \"gross\",\r\n    \"kadarTransaksi\",\r\n    \"pkg\",\r\n    \"manual\"\r\n  );\r\n  return {\r\n    netto: (\r\n      parseFloat(gross ? gross : 0) -\r\n      parseFloat(pkg ? pkg : 0) * (parseFloat(kadarTransaksi) / 100)\r\n    ).toFixed(3),\r\n    manual: manual || false,\r\n  };\r\n})(FormModalTimbanganBarcode);\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { reset } from \"redux-form\";\r\nimport {\r\n  finishSend,\r\n  getBruto,\r\n  getGross,\r\n  getNetto,\r\n  getPkg,\r\n  getQty,\r\n  getRp,\r\n  progressSend,\r\n} from \"../actions/LogicAction\";\r\nimport { getTableTotalanBarcode } from \"../actions/TotalanTimbanganAction\";\r\nimport Axios from \"axios\";\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport FormModalTimbangBarcode from \"./Components/FormModalTimbangBarcode\";\r\nimport HeaderCard from \"../HeaderCard\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    totalanBarcode: state.provinsi.totalanBarcode,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    listTableTotalanBarcode: state.provinsi.listTableTotalanBarcode,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumNetto: state.perhitungan.sumNetto,\r\n    sumGross: state.perhitungan.sumGross,\r\n    sumPkg: state.perhitungan.sumPkg,\r\n    sumQty: state.perhitungan.sumQty,\r\n    sumRp: state.perhitungan.sumRp,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nconst { SearchBar } = Search;\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nclass TotalanBarcode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jenisBarang: \"RONGSOK\",\r\n      listLokasi: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kodeJenis\",\r\n          text: \"Kode\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"kadarCetak\",\r\n          text: \"Kadar\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"gross\",\r\n          text: \"Gross (Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Pkg (Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat (Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi\",\r\n          text: \"Harga\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto (Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n      ],\r\n      data: [\r\n        {\r\n          tanggal: \"2020-11-10\",\r\n        },\r\n      ],\r\n      tanggal: \"\",\r\n      lokasi: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getTableTotalanBarcode());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getBruto(\"totalanBarcode\"));\r\n    this.props.dispatch(getNetto(\"totalanBarcode\"));\r\n    this.props.dispatch(getPkg(\"totalanBarcode\"));\r\n    this.props.dispatch(getGross(\"totalanBarcode\"));\r\n    this.props.dispatch(getRp(\"totalanBarcode\"));\r\n    this.props.dispatch(getQty(\"totalanBarcode\"));\r\n    Axios.get(server + \"storages2?tipeData=LOKASI\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listLokasi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    var isi = data.kodeBarang\r\n      ? data.kodeBarang\r\n      : \"DEFAULT|DEFUALT|DEFAULT|DEFAULT\";\r\n    var explode = isi.split(\"|\");\r\n    var simpan = {\r\n      nettoDiscGlobalExt: 0,\r\n      gross: parseFloat(data.gross),\r\n      kodeJenis: explode[0],\r\n      pkg: parseFloat(data.pkg),\r\n      noBarcode: data.barcode,\r\n      qty: 1,\r\n      k: 0,\r\n      kadarCetak: explode[1],\r\n      kodeKategori: \"-\",\r\n      p: 0,\r\n      nettoDiscGlobal: 0,\r\n      discGlobalPr: 0,\r\n      discGlobalGr: 0,\r\n      kadarTransaksi: parseFloat(data.kadarTransaksi),\r\n      noFaktur: data.noFaktur,\r\n      bruto: parseFloat(data.gross) - parseFloat(data.pkg),\r\n      netto: parseFloat(data.netto),\r\n      rp: 0,\r\n      keterangan: data.keterangan,\r\n    };\r\n    var array = JSON.parse(localStorage.getItem(\"totalanBarcode\")) || [];\r\n    array.push(simpan);\r\n    localStorage.setItem(\"totalanBarcode\", JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-right\",\r\n      icon: \"success\",\r\n      text: \"Transaksi Berhasil\",\r\n      timer: 1500,\r\n      showConfirmButton: false,\r\n    });\r\n    this.props.dispatch(reset(\"FormModalTimbanganBarcode\"));\r\n    this.props.dispatch(getTableTotalanBarcode());\r\n  }\r\n  simpanTotalanTimbang() {\r\n    if (this.state.tanggal === undefined) {\r\n      Swal.fire({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        text: \"Silahkan Isi Tanggal\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n      return false;\r\n    } else if (this.state.lokasi === undefined) {\r\n      Swal.fire({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        text: \"Silahkan Isi Lokasi\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n      return false;\r\n    } else if (localStorage.getItem(\"totalanBarcode\") === null) {\r\n      Swal.fire({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        text: \"Data Masih Kosong, Silahkan tambah data\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n      return false;\r\n    }\r\n    var simpan = {\r\n      tipeFaktur: this.state.jenisBarang,\r\n      noFaktur: this.props.noFaktur,\r\n      noBon: this.props.noFaktur,\r\n      tanggal: this.state.tanggal,\r\n      noValid: \"-\",\r\n      kodeLokasi: this.state.kodeLokasi,\r\n      barangDetails: JSON.parse(localStorage.getItem(\"totalanBarcode\")),\r\n      footerItem: {\r\n        totalP: 0,\r\n        totalGross: this.props.sumGross,\r\n        totalpkg: this.props.sumPkg,\r\n        totalQty: this.props.sumQty,\r\n        totalK: 0,\r\n        totalRp: this.props.sumRp,\r\n        totalBruto: this.props.sumBruto,\r\n        totalNetto: this.props.sumNetto,\r\n        totalNettoExt: 0,\r\n      },\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"totalanBarcode\")) || [];\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        i++,\r\n        ticket.kodeJenis,\r\n        ticket.gross,\r\n        ticket.pkg,\r\n        ticket.bruto,\r\n        ticket.kadarTransaksi,\r\n        ticket.netto,\r\n        ticket.rp,\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    console.log(tableRows);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kode Model\",\r\n      \"Gross (Gr)\",\r\n      \"Pkg (Gr)\",\r\n      \"Bruto (Gr)\",\r\n      \"Harga (%)\",\r\n      \"Netto (Gr)\",\r\n      \"Ongkos (Rp)\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n\r\n    Axios.post(serverNonMaster + \"item/dc/totalantimbang\", simpan)\r\n      .then(() =>\r\n        Swal.fire({\r\n          position: \"top-right\",\r\n          icon: \"success\",\r\n          text: \"Transaksi Berhasil\",\r\n          timer: 1500,\r\n          showConfirmButton: false,\r\n        })\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"Tanggal\",\r\n              this.state.tanggal,\r\n              \"Lokasi\",\r\n              this.state.tanggal,\r\n              \"No Timbang\",\r\n              this.props.noFaktur,\r\n              \"\",\r\n              \"\",\r\n              \"\",\r\n              \"\",\r\n              \"\",\r\n              columTable,\r\n              \"STOCK OPNAME TIMBANG SALES\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => localStorage.removeItem(\"totalanBarcode\"))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() => this.props.dispatch(getTableTotalanBarcode()))\r\n          .then(() =>\r\n            this.setState({\r\n              tanggal: \"\",\r\n              lokasi: \"\",\r\n            })\r\n          )\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-right\",\r\n          icon: \"error\",\r\n          text: \"Sepertinya ada kesalahan di server, mohon periksa koneksi dan ulangi transaksi\",\r\n          timer: 1500,\r\n          showConfirmButton: false,\r\n        })\r\n          .then(() => console.log(err))\r\n          .then(() => this.props.dispatch(finishSend()))\r\n      );\r\n  }\r\n  changeInput = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"card\">\r\n          <HeaderCard title=\"Totalan Barcode\" />\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Tanggal</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"tanggal\"\r\n                    label=\"tanggal\"\r\n                    className=\"form-control\"\r\n                    onChange={this.changeInput(\"tanggal\")}\r\n                    value={this.state.tanggal}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Lokasi</label>\r\n                  <select\r\n                    name=\"lokasi\"\r\n                    label=\"lokasi\"\r\n                    className=\"form-control\"\r\n                    onChange={this.changeInput(\"lokasi\")}\r\n                    value={this.state.lokasi}\r\n                  >\r\n                    <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                      SILAHKAN PILIH\r\n                    </option>\r\n                    {this.state.listLokasi.map((list) => (\r\n                      <option value={list.kodeLokasi} key={list.kodeLokasi}>\r\n                        {list.namaLokasi}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-12 mt-3\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-6\">\r\n                    <div className=\"text-left\">\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => this.simpanTotalanTimbang()}\r\n                      >\r\n                        {this.props.onSend ? (\r\n                          <span\r\n                            className=\"spinner-border spinner-border-sm mr-3\"\r\n                            aria-hidden=\"true\"\r\n                          ></span>\r\n                        ) : null}\r\n                        Simpan\r\n                        <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-6\">\r\n                    <div className=\"text-right\">\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        data-target=\"#tambahModal\"\r\n                        data-toggle=\"modal\"\r\n                      >\r\n                        Tambah Data\r\n                        <i className=\"fa fa-plus ml-3\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-12 mt-3\">\r\n                {this.props.listTableTotalanBarcode ? (\r\n                  <ToolkitProvider\r\n                    keyField=\"kodeKelompok\"\r\n                    data={this.props.listTableTotalanBarcode}\r\n                    columns={this.state.columns}\r\n                    search\r\n                  >\r\n                    {(props) => (\r\n                      <div className=\"form-group\">\r\n                        <div className=\"text-right mt-5 mb-3\">\r\n                          <SearchBar\r\n                            {...props.searchProps}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Tuliskan Kode / Nama\"\r\n                            style={{ margin: 0, top: \"50%\" }}\r\n                          />\r\n                        </div>\r\n                        <BootstrapTable\r\n                          {...props.baseProps}\r\n                          striped\r\n                          hover\r\n                          condensed\r\n                          bordered={true}\r\n                          headerClasses=\"header-table\"\r\n                          pagination={paginationFactory()}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </ToolkitProvider>\r\n                ) : (\r\n                  <BootstrapTable\r\n                    keyField=\"kodeKelompok\"\r\n                    data={[]}\r\n                    columns={this.state.columns}\r\n                    bordered={true}\r\n                    headerClasses=\"header-table\"\r\n                    noDataIndication=\"Tidak Ada Data\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"tambahModal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Tambah Data Totalan\r\n                </h4>\r\n                <button\r\n                  id=\"dismiss_modal\"\r\n                  name=\"dismiss_modal\"\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <FormModalTimbangBarcode\r\n                  noFaktur={this.props.noFaktur}\r\n                  jenisBarang={this.state.jenisBarang}\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light\"\r\n                  data-dismiss=\"modal\"\r\n                  id=\"close_modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(TotalanBarcode);\r\n"],"sourceRoot":""}