{"version":3,"sources":["Supervisory/CetakUlangForm/FormLaporanTolakanCustomer.jsx"],"names":["FormLaporanTolakanCustomer","props","inputChange","input","e","setState","target","value","pilihSupplier","result_explode","split","kodeSupplier","namaSupplier","state","listSupplier","columns","dataField","text","align","headerAlign","csvExport","formatter","rowContent","row","className","onClick","getDetails","data","tanggal","listPenerimaan","tableRows","table","detail_barang","forEach","ticket","i","ticketData","kode_jenis","content","kadar_cetak","styles","halign","qty","formatGram","p","k","pkg","bruto","kadar_beli","netto","formatRp","ongkos_rp","harga_jual","push","footer","map","list","parseFloat","reduce","a","b","PrintNota","no_bon","toUpperCase","this","printSupplier","kode_customer","dispatch","getcustomerList","getUUID","getCetakUlang","AxiosMasterGet","tanggal_awal","tanggal_akhir","then","res","detail","catch","gagal","to","type","aria-hidden","title","name","component","renderField","label","placeholder","renderFieldSelect","options","customer","nama_customer","caridata","bootstrap4","keyField","Component","reduxForm","form","selector","formValueSelector","connect","provinsi","initialValues","getToday"],"mappings":"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","file":"static/js/132.06db6182.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getCetakUlang } from \"../../actions/cetakUlangAction\";\r\nimport { getUUID } from \"../../actions/fakturAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { gagal } from \"../../Alert\";\r\nimport HeaderCard from \"../../HeaderCard\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport GlobalTabel from \"../../GlobalComponent/GlobalTabel\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport PrintNota from \"../../Stocking/Component/PrintNota\";\r\nimport { getcustomerList } from \"../../actions/customerAction\";\r\nimport { formatGram, formatRp } from \"../../helper\";\r\nimport { getToday } from \"../../GlobalComponent/function\";\r\n\r\nclass FormLaporanTolakanCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listSupplier: [],\r\n      columns: [\r\n        {\r\n          dataField: \"tanggal\",\r\n          text: \"Tanggal\",\r\n        },\r\n        {\r\n          dataField: \"jenis_trx\",\r\n          text: \"Jenis Transaksi\",\r\n        },\r\n        {\r\n          dataField: \"no_bon\",\r\n          text: \"Nomor Bon\",\r\n        },\r\n        {\r\n          dataField: \"total_bruto\",\r\n          text: \"Total Bruto(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"total_gross\",\r\n          text: \"Total Gross(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"total_netto\",\r\n          text: \"Total Netto(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"total_pkg\",\r\n          text: \"Total Pkg(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"total_rp\",\r\n          text: \"Total Rp(Rp)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-warning mr-2\"\r\n                  onClick={() => this.getDetails(row)}\r\n                >\r\n                  <i className=\"fa fa-print mr-1\"></i>\r\n                  Print\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      data: [\r\n        {\r\n          tanggal: \"2020-11-12\",\r\n        },\r\n      ],\r\n      listPenerimaan: [],\r\n    };\r\n  }\r\n\r\n  getDetails(data) {\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = data.detail_barang;\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        ++i,\r\n        ticket.kode_jenis,\r\n        { content: ticket.kadar_cetak, styles: { halign: \"right\" } },\r\n        { content: ticket.qty, styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.p), styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.k), styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.pkg), styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.bruto), styles: { halign: \"right\" } },\r\n        { content: ticket.kadar_beli, styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.netto, 3), styles: { halign: \"right\" } },\r\n        { content: formatRp(ticket.ongkos_rp), styles: { halign: \"right\" } },\r\n        { content: formatRp(ticket.harga_jual), styles: { halign: \"right\" } },\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    const footer = [\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      {\r\n        content: table\r\n          .map((list) => parseFloat(list.qty))\r\n          .reduce((a, b) => a + b, 0),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      \"\",\r\n      \"\",\r\n      {\r\n        content: formatGram(\r\n          table.map((list) => parseFloat(list.pkg)).reduce((a, b) => a + b, 0)\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      {\r\n        content: formatGram(\r\n          table.map((list) => parseFloat(list.bruto)).reduce((a, b) => a + b, 0)\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      \"\",\r\n      {\r\n        content: formatGram(\r\n          table\r\n            .map((list) => parseFloat(list.netto))\r\n            .reduce((a, b) => a + b, 0),\r\n          3\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      {\r\n        content: formatRp(\r\n          table.map((list) => list.ongkos_rp).reduce((a, b) => a + b, 0)\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      {\r\n        content: formatRp(\r\n          table\r\n            .map((list) => parseFloat(list.harga_jual))\r\n            .reduce((a, b) => a + b, 0)\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n    ];\r\n    var columTable = [\r\n      [\r\n        \"No\",\r\n        \"Kode Model\",\r\n        { content: \"Cap Kode\", styles: { halign: \"right\" } },\r\n        { content: \"Qty\", styles: { halign: \"right\" } },\r\n        { content: \"P\", styles: { halign: \"right\" } },\r\n        { content: \"K\", styles: { halign: \"right\" } },\r\n        { content: \"Bungkus\\n(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Berat\\n(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Harga\\n(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Murni\\n(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Ongkos\\n(Rp)\", styles: { halign: \"right\" } },\r\n        { content: \"Harga\\nJual(Rp)\", styles: { halign: \"right\" } },\r\n      ],\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    PrintNota(\r\n      \"No Bon\",\r\n      data.no_bon.toUpperCase(),\r\n      \"Tanggal\",\r\n      data.tanggal,\r\n      \"Customer\",\r\n      this.state.printSupplier[0].kode_customer.toUpperCase(),\r\n      \"\",\r\n      \"\",\r\n      \"ADMIN\",\r\n      data.tanggal,\r\n      \"\",\r\n      columTable,\r\n      \"Tolakan Return Barang Supplier\",\r\n      tableRows,\r\n      footer\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getcustomerList());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getCetakUlang());\r\n  }\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  pilihSupplier = (input) => (e) => {\r\n    var supp = e.target.value ? e.target.value : \"DEFALT | DEFAULT\";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeSupplier: result_explode[0],\r\n      namaSupplier: result_explode[1],\r\n    });\r\n  };\r\n\r\n  caridata() {\r\n    AxiosMasterGet(\r\n      `report/tolakan-customer/${this.props.kode_customer}&${this.props.tanggal_awal}&${this.props.tanggal_akhir}`\r\n    )\r\n      .then((res) =>\r\n        this.setState({\r\n          listPenerimaan: res.data && res.data[0].detail,\r\n          printSupplier: res.data,\r\n        })\r\n      )\r\n      .catch(() => gagal(\"Data Kosong\"));\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid\">\r\n          <ol className=\"breadcrumb mb-2\">\r\n            <Link to=\"/cetakUlangBukti\">\r\n              <button type=\"button\" className=\"btn btn-secondary\">\r\n                <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i>{\" \"}\r\n                Back\r\n              </button>\r\n            </Link>\r\n          </ol>\r\n          <div className=\"card\">\r\n            <HeaderCard title=\"Cetak Ulang Bukti Tolakan Customer\" />\r\n            <div className=\"card-body\">\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-3\">\r\n                  <Field\r\n                    name=\"tanggal_awal\"\r\n                    component={renderField}\r\n                    type=\"date\"\r\n                    label=\"Mulai Dari\"\r\n                    placeholder=\"Masukan Mulai Dari\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-3\">\r\n                  <Field\r\n                    name=\"tanggal_akhir\"\r\n                    component={renderField}\r\n                    type=\"date\"\r\n                    label=\"Sampai Dengan\"\r\n                    placeholder=\"Masukan Sampai Dengan\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"kode_customer\"\r\n                    component={renderFieldSelect}\r\n                    options={this.props.customer.map((data) => {\r\n                      let hasil = {\r\n                        value: data.kode_customer,\r\n                        name: data.nama_customer,\r\n                      };\r\n                      return hasil;\r\n                    })}\r\n                    type=\"text\"\r\n                    label=\"Kode Customer\"\r\n                    placeholder=\"Masukan Kode Customer\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-12 col-lg-12 mt-3\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => this.caridata()}\r\n                        >\r\n                          <i className=\"fa fa-search mr-1\"></i>\r\n                          Cari Data\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <GlobalTabel\r\n                        bootstrap4\r\n                        keyField={this.state.listPenerimaan}\r\n                        data={this.state.listPenerimaan}\r\n                        columns={this.state.columns}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nFormLaporanTolakanCustomer = reduxForm({\r\n  form: \"FormLaporanTolakanCustomer\",\r\n})(FormLaporanTolakanCustomer);\r\nconst selector = formValueSelector(\"FormLaporanTolakanCustomer\");\r\nexport default connect((state) => {\r\n  const { tanggal_awal, tanggal_akhir, kode_customer } = selector(\r\n    state,\r\n    \"tanggal_awal\",\r\n    \"tanggal_akhir\",\r\n    \"kode_customer\"\r\n  );\r\n  return {\r\n    customer: state.provinsi.customer,\r\n    tanggal_akhir: tanggal_akhir,\r\n    tanggal_awal: tanggal_awal,\r\n    kode_customer: kode_customer,\r\n    initialValues: {\r\n      tanggal_awal: getToday(),\r\n      tanggal_akhir: getToday(),\r\n    },\r\n  };\r\n})(FormLaporanTolakanCustomer);\r\n"],"sourceRoot":""}