{"version":3,"sources":["FICO/TolakanPembayaranCustomer.jsx","Validations/validationTerimaSupplier.js","FICO/Component/FormTolakanHutangSupplier.jsx"],"names":["ModalMasterData","lazy","TolakanPembayaranCustomer","props","date","Date","formatedDate","getFullYear","getMonth","getDate","inputChange","input","e","setState","target","value","pilihSupplier","result_explode","split","kodeSupplier","namaSupplier","state","supplierList","DataSupplier","startDate","tanggal","noBon","status","tampungBarang","columns","dataField","text","align","headerAlign","footerClasses","formatter","cell","parseFloat","toLocaleString","csvExport","rowContent","row","rowIndex","className","data-tip","data-for","onClick","deleteIndex","dispatch","getListTolakanPembayaranCustomer","id","type","effect","this","getcustomerList","getUUID","data","kodeJenis","simpan","kode_kategori","kode_jenis","kadar_cetak","kadar","toString","kadar_beli","kadarTransaksi","no_barcode","qty","p","k","pkg","gross","bruto","netto","ongkos_rp","undefined","rp","harga_jual","array","JSON","parse","localStorage","getItem","push","setItem","stringify","Swal","fire","position","icon","showConfirmButton","timer","reset","warning","length","map","list","reduce","a","b","isi","no_tolak","noFaktur","getToday","no_bon","kode_customer","jenis_trx","total_qty","total_p","total_k","total_pkg","total_bruto","total_netto","total_ongkos","detail_barang","console","log","progressSend","tableRows","table","forEach","ticket","i","ticketData","content","styles","halign","formatGram","formatRp","footer","colSpan","columTable","AxiosMasterPost","then","res","PrintNota","toUpperCase","getUserID","multipleDeleteLocal","finishSend","document","getElementById","catch","err","response","style","color","to","aria-hidden","title","fallback","width","height","from","onSubmit","handleSubmit","name","component","renderFieldSelect","options","customer","nama_customer","label","placeholder","onChange","renderField","showModal","class","keyField","listTolakanPembayaranCustomer","disabled","onSend","returnSupplierSubmit","Component","reduxForm","form","connect","provinsi","username","alert","error","supplier","initialValues","validationTerimaSupplier","errors","FormTolakanHutangSupplier","onclick1","bind","kodeBarang","kode_barang","keterangan","P","K","bungkus","berat","harga","murni","ongkos","kadarCetak","kadarBeli","namaJenis","AxiosMasterGet","filter","kode_kelompok","getTimbangan","change","kodeKategori","readOnly","defaultValue","normalize","nama_jenis","pilihBarang","onBlur","setKadar","visibility","submitting","validate","enableReinitialize","selector","formValueSelector","toFixed"],"mappings":"qXA6BMA,EAAkBC,gBAAK,kBAC3B,4CAkBIC,E,kDACJ,WAAYC,GAAQ,IAAD,sBACjB,IAAIC,EAAO,IAAIC,KACXC,EAAY,UAAMF,EAAKG,cAAX,YACdH,EAAKI,WAAa,EADJ,YAEZJ,EAAKK,WAJQ,OAKjB,cAAMN,IA6GRO,YAAc,SAACC,GAAD,OAAW,SAACC,GACxB,EAAKC,SAAL,eACGF,EAAQC,EAAEE,OAAOC,UApHH,EAwHnBC,cAAgB,SAACL,GAAD,OAAW,SAACC,GAC1B,IACIK,GADOL,EAAEE,OAAOC,MAAQH,EAAEE,OAAOC,MAAQ,oBACnBG,MAAM,KAChC,EAAKL,SAAS,CACZM,aAAcF,EAAe,GAC7BG,aAAcH,EAAe,OAvH/B,EAAKI,MAAQ,CACXC,aAAc,GACdC,aAAc,GACdC,UAAWlB,EACXa,aAAc,GACdC,aAAc,GACdK,QAASnB,EACToB,MAAO,GACPC,OAAQ,GACRC,cAAe,GACfC,QAAS,CACP,CACEC,UAAW,aACXC,KAAM,cAER,CACED,UAAW,cACXC,KAAM,WACNC,MAAO,QACPC,YAAa,SAEf,CACEH,UAAW,IACXC,KAAM,IACNC,MAAO,QACPC,YAAa,SAEf,CACEH,UAAW,IACXC,KAAM,IACNC,MAAO,QACPC,YAAa,SAEf,CACEH,UAAW,MACXC,KAAM,cACNC,MAAO,QACPC,YAAa,SAEf,CACEH,UAAW,QACXC,KAAM,YACNC,MAAO,QACPC,YAAa,SAEf,CACEH,UAAW,aACXC,KAAM,YACNC,MAAO,QACPC,YAAa,SAEf,CACEH,UAAW,QACXC,KAAM,YACNC,MAAO,QACPC,YAAa,QAEbC,cAAe,6BAEjB,CACEJ,UAAW,YACXC,KAAM,aACNC,MAAO,QACPC,YAAa,QACbE,UAAW,SAACC,GAAD,OACT,qCAAWC,WAAWD,GAAME,eAAe,YAG/C,CACER,UAAW,OACXC,KAAM,OACNQ,WAAW,EACXJ,UAAW,SAACK,EAAYC,EAAKC,GAC3B,OACE,yBAAKC,UAAU,eACb,4BACEC,YAAA,EACAC,WAAS,QACTF,UAAU,sBACVG,QAAS,kBACPC,YACE,4BACAL,EACA,EAAKvC,MAAM6C,SACXC,iBAIJ,kBAAC,IAAD,CAAcC,GAAG,QAAQC,KAAK,OAAOC,OAAO,SAC1C,wCAEF,uBAAGT,UAAU,sBAEf,kCAnGK,E,qDA4GnB,WACEU,KAAKlD,MAAM6C,SAASM,eACpBD,KAAKlD,MAAM6C,SAASO,eACpBF,KAAKlD,MAAM6C,SAASC,iB,0BAkBtB,SAAaO,GACX,IAGItC,GAHOsC,EAAKC,UACZD,EAAKC,UACL,mCACavC,MAAM,KACnBwC,EAAS,CACXC,cAAeH,EAAKG,cACpBC,WAAY1C,EAAM,GAClB2C,YAAaxB,WAAWmB,EAAKM,OAAOC,WACpCC,WAAY3B,WAAWmB,EAAKS,gBAC5BC,WAAY,IACZC,IAAK,EACLC,EAAG/B,WAAWmB,EAAKY,GACnBC,EAAGhC,WAAWmB,EAAKa,GACnBC,IAAKjC,WAAWmB,EAAKc,KACrBC,MAAOlC,WAAWmB,EAAKe,OACvBC,MAAOnC,WAAWmB,EAAKgB,OACvBC,MAAOpC,WAAWmB,EAAKiB,OACvBC,UAAWrC,gBAAuBsC,IAAZnB,EAAKoB,GAAmB,EAAIpB,EAAKoB,IACvDC,WAAY,GAGVC,EACFC,KAAKC,MAAMC,aAAaC,QAAQ,+BAAiC,GACnEJ,EAAMK,KAAKzB,GACXuB,aAAaG,QAAQ,4BAA6BL,KAAKM,UAAUP,IACjEQ,IAAKC,KAAK,CACRC,SAAU,UACVC,KAAM,UACN1D,KAAM,6BACN2D,mBAAmB,EACnBC,MAAO,OAETtC,KAAKlD,MAAM6C,SAASC,eACpBI,KAAKlD,MAAM6C,SAAS4C,YAAM,qB,kCAG5B,WAAwB,IAAD,OACrB,GAAyB,KAArBvC,KAAKhC,MAAMK,MAEb,OADAmE,YAAQ,wBACD,EACF,GAA2B,KAAvBxC,KAAKhC,MAAMI,QAEpB,OADAoE,YAAQ,sBACD,EACF,GAES,IADdd,KAAKC,MAAMC,aAAaC,QAAQ,8BAAgC,MAC7DY,OAGH,OADAD,YAAQ,mDACD,EACF,GAAgC,KAA5BxC,KAAKhC,MAAMF,aAEpB,OADA0E,YAAQ,yBACD,EAET,IAAIrC,EAAOuB,KAAKC,MAAMC,aAAaC,QAAQ,8BACvCf,EAAMX,EAAKsC,OACX1B,EAAIZ,EAAKuC,KAAI,SAACC,GAAD,OAAU3D,WAAW2D,EAAK5B,MAAI6B,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GACnE9B,EAAIb,EAAKuC,KAAI,SAACC,GAAD,OAAU3D,WAAW2D,EAAK3B,MAAI4B,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GACnE7B,EAAMd,EACPuC,KAAI,SAACC,GAAD,OAAU3D,WAAW2D,EAAK1B,QAC9B2B,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GACvB3B,EAAQhB,EACTuC,KAAI,SAACC,GAAD,OAAU3D,WAAW2D,EAAKxB,UAC9ByB,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GACvB1B,EAAQjB,EACTuC,KAAI,SAACC,GAAD,OAAU3D,WAAW2D,EAAKvB,UAC9BwB,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GACvBzB,EAAYlB,EACbuC,KAAI,SAACC,GAAD,OAAU3D,WAAW2D,EAAKtB,cAC9BuB,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GACvBC,EAAM,CACRC,SAAUhD,KAAKlD,MAAMmG,SACrB7E,QAAS4B,KAAKhC,MAAMI,SAAW8E,cAC/BC,OAAQnD,KAAKhC,MAAMK,MACnB+E,cAAepD,KAAKhC,MAAMF,aAC1BuF,UAAW,aACXC,UAAWxC,EACXyC,QAASxC,EACTyC,QAASxC,EACTyC,UAAWxC,EACXyC,YAAavC,EACbwC,YAAavC,EACbwC,aAAcvC,EACdwC,cAAenC,KAAKC,MAClBC,aAAaC,QAAQ,+BAGzBiC,QAAQC,IAAIrC,KAAKM,UAAUe,IAC3B/C,KAAKlD,MAAM6C,SAASqE,eAEpB,IAAMC,EAAY,GACdC,EAAQxC,KAAKC,MAAMC,aAAaC,QAAQ,8BAE5CqC,EAAMC,SAAQ,SAACC,EAAQC,GACrB,IAAMC,EAAa,GACfD,EACFD,EAAO7D,WACP,CAAEgE,QAASH,EAAO5D,YAAagE,OAAQ,CAAEC,OAAQ,UACjD,CAAEF,QAASG,YAAWN,EAAOrD,GAAIyD,OAAQ,CAAEC,OAAQ,UACnD,CAAEF,QAASG,YAAWN,EAAOpD,GAAIwD,OAAQ,CAAEC,OAAQ,UACnD,CAAEF,QAASH,EAAOnD,IAAKuD,OAAQ,CAAEC,OAAQ,UACzC,CAAEF,QAASG,YAAWN,EAAOjD,OAAQqD,OAAQ,CAAEC,OAAQ,UACvD,CAAEF,QAASH,EAAOzD,WAAY6D,OAAQ,CAAEC,OAAQ,UAChD,CAAEF,QAASG,YAAWN,EAAOhD,MAAO,GAAIoD,OAAQ,CAAEC,OAAQ,UAC1D,CAAEF,QAASI,YAASP,EAAO/C,WAAYmD,OAAQ,CAAEC,OAAQ,WAG3DR,EAAUnC,KAAKwC,MAEjB,IAAMM,EAAS,CACb,CAAEL,QAAS,cAAeC,OAAQ,CAAEC,OAAQ,SAAWI,QAAS,GAChE,CACEN,QAASL,EAAMxB,KAAI,SAACC,GAAD,OAAUA,EAAK1B,OAAK2B,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAC/D0B,OAAQ,CAAEC,OAAQ,UAEpB,CACEF,QAASG,YACPR,EAAMxB,KAAI,SAACC,GAAD,OAAUA,EAAKxB,SAAOyB,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IAE1D0B,OAAQ,CAAEC,OAAQ,UAEpB,GACA,CACEF,QAASG,YACPR,EAAMxB,KAAI,SAACC,GAAD,OAAUA,EAAKvB,SAAOwB,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IAE1D0B,OAAQ,CAAEC,OAAQ,UAEpB,CACEF,QAASI,YACPT,EAAMxB,KAAI,SAACC,GAAD,OAAUA,EAAKtB,aAAWuB,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IAE9D0B,OAAQ,CAAEC,OAAQ,WAItBX,QAAQC,IAAIrC,KAAKM,UAAUiC,IAC3B,IAAIa,EAAa,CACf,CACE,KACA,aACA,CAAEP,QAAS,WAAYC,OAAQ,CAAEC,OAAQ,UACzC,CAAEF,QAAS,IAAKC,OAAQ,CAAEC,OAAQ,UAClC,CAAEF,QAAS,IAAKC,OAAQ,CAAEC,OAAQ,UAClC,CAAEF,QAAS,cAAeC,OAAQ,CAAEC,OAAQ,UAC5C,CAAEF,QAAS,YAAaC,OAAQ,CAAEC,OAAQ,UAC1C,CAAEF,QAAS,YAAaC,OAAQ,CAAEC,OAAQ,UAC1C,CAAEF,QAAS,YAAaC,OAAQ,CAAEC,OAAQ,UAC1C,CAAEF,QAAS,aAAcC,OAAQ,CAAEC,OAAQ,YAI/CM,YAAgB,8BAA+BhC,GAC5CiC,MAAK,SAACC,GAAD,OACJhD,IAAKC,KAAK,CACRC,SAAU,UACVC,KAAM,UACN1D,KAAM,6BACN2D,mBAAmB,EACnBC,MAAO,OAEN0C,MAAK,kBACJE,YACE,SACA,EAAKlH,MAAMK,MAAM8G,cACjB,UACA,EAAKnH,MAAMI,QACX,WACA,EAAKJ,MAAMF,aAAaqH,cACxB,GACA,GACAC,cACAlC,cACA,GACA4B,EACA,8BACAb,EACAW,MAGHI,MAAK,kBACJK,YAAoB,CAAC,4BAA6B,gBAEnDL,MAAK,kBAAM,EAAKlI,MAAM6C,SAAS2F,kBAC/BN,MAAK,kBAAM,EAAKlI,MAAM6C,SAASO,kBAC/B8E,MAAK,kBAAM,EAAKlI,MAAM6C,SAASC,kBAC/BoF,MAAK,kBACJ,EAAKxH,SAAS,CACZa,MAAO,GACPP,aAAc,QAGjBkH,MAAK,kBAAMO,SAASC,eAAe,UAAUjD,cAEjDkD,OAAM,SAACC,GAAD,OACLzD,IAAKC,KAAK,CACRC,SAAU,UACVC,KAAM,QACN1D,KAAI,OAAEgH,QAAF,IAAEA,OAAF,EAAEA,EAAKC,SAASxF,KACpBkC,mBAAmB,EACnBC,MAAO,OACN0C,MAAK,kBAAM,EAAKlI,MAAM6C,SAAS2F,uB,oBAGxC,WAAU,IAAD,OACP,OACE,yBAAKhG,UAAU,kBAAkBsG,MAAO,CAAEC,MAAO,UAC/C,wBAAIvG,UAAU,mBACZ,kBAAC,IAAD,CAAMwG,GAAG,wBACP,4BAAQhG,KAAK,SAASR,UAAU,qBAC9B,uBAAGA,UAAU,wBAAwByG,cAAY,SADnD,WAKJ,yBAAKzG,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,kBAAC,UAAD,CAAY0G,MAAM,gCAClB,yBAAK1G,UAAU,aACb,kBAAC3C,EAAD,CACE4H,QACE,kBAAC,WAAD,CACE0B,SAAU,kBAAC,IAAD,CAAUC,MAAO,OAAQC,OAAQ,OAE3C,kBAAC,IAAD,CACEC,KAAK,UACLC,SAAU,SAAClG,GAAD,OAAU,EAAKmG,aAAanG,IACtC8C,SAAUjD,KAAKlD,MAAMmG,YAI3B+C,MAAM,uBAER,yBAAK1G,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,0BAAMO,GAAG,UACP,yBAAKP,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACEiH,KAAK,WACLC,UAAWC,IACXC,QAAS1G,KAAKlD,MAAM6J,SAASjE,KAAI,SAACC,GAKhC,MAJW,CACTjF,MAAOiF,EAAKS,cACZmD,KAAM5D,EAAKiE,kBAIf9G,KAAK,OACL+G,MAAM,WACNC,YAAY,mBACZC,SAAU,SAAC5G,GACT,EAAK3C,SAAS,CACZM,aAAcqC,QAKtB,yBAAKb,UAAU,YACb,kBAAC,IAAD,CACEiH,KAAK,UACLC,UAAWQ,IACXlH,KAAK,OACL+G,MAAM,UACNC,YAAY,kBACZC,SAAU,SAACxJ,GACT,EAAKC,SAAS,CACZY,QAASb,EAAEE,OAAOC,YAK1B,yBAAK4B,UAAU,YACb,kBAAC,IAAD,CACEiH,KAAK,SACLC,UAAWQ,IACXlH,KAAK,OACL+G,MAAM,YACNC,YAAY,oBACZC,SAAU,SAAC5G,GACT,EAAK3C,SAAS,CACZa,MAAO8B,EAAK1C,OAAOC,eAQjC,yBAAK4B,UAAU,4BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACf,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,4BACEA,UAAU,kBACVG,QAAS,kBAAM,EAAK3C,MAAM6C,SAASsH,iBAFrC,cAKE,uBAAGC,MAAM,kBAAkBnB,cAAY,cAMjD,yBAAKzG,UAAU,kBACb,kBAAC,IAAD,CACE6H,SAAS,KACThH,KAAMH,KAAKlD,MAAMsK,8BACjB5I,QAASwB,KAAKhC,MAAMQ,UAEtB,yBAAKc,UAAU,cACb,4BACEA,UAAU,kBACV+H,SAAUrH,KAAKlD,MAAMwK,OACrB7H,QAAS,kBAAM,EAAK8H,yBAEnBvH,KAAKlD,MAAMwK,OACV,0BACEhI,UAAU,wCACVyG,cAAY,SAEZ,KAVN,UAYR,uBAAGmB,MAAM,yBAAyBnB,cAAY,uB,GAvctByB,aAsdxC3K,EAA4B4K,YAAU,CACpCC,KAAM,6BADoBD,CAEzB5K,GACY8K,uBAzeI,SAAC3J,GAClB,MAAO,CACLiF,SAAUjF,EAAM4J,SAAS3E,SACzB4E,SAAU7J,EAAM4J,SAASC,SACzBT,8BAA+BpJ,EAAM4J,SAASR,8BAC9CU,MAAO9J,EAAM4J,SAASE,MACtBC,MAAO/J,EAAM4J,SAASG,MACtBT,OAAQtJ,EAAM4J,SAASN,OACvBU,SAAUhK,EAAM4J,SAASI,SACzBrB,SAAU3I,EAAM4J,SAASjB,SACzBsB,cAAe,CACb7J,QAAS8E,kBA8doB,KAApByE,CAA0B9K,I,iCClf1BqL,IAvBkB,SAACxK,GAChC,IAAMyK,EAAS,GAmBf,OAlBKzK,EAAM0C,YACT+H,EAAO/H,UAAY,oCAEhB1C,EAAMuD,MACTkH,EAAOlH,IAAM,oCAEVvD,EAAMqD,IACToH,EAAOpH,EAAI,oCAERrD,EAAMsD,IACTmH,EAAOnH,EAAI,oCAERtD,EAAMyD,QACTgH,EAAOhH,MAAQ,oCAEZzD,EAAMwD,QACTiH,EAAOjH,MAAQ,oCAEViH,I,kKCZHC,E,kDACJ,WAAYtL,GAAQ,IAAD,8BACjB,cAAMA,IACDuL,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKtK,MAAQ,CACXuK,WAAY,GACZrK,aAAc,GACdsK,YAAa,GACbC,WAAY,iBACZhI,MAAO,GACPiI,EAAG,GACHC,EAAG,GACHC,QAAS,GACTC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,OAAQ,GACR1K,OAAQ,GACR2K,WAAY,GACZC,UAAW,GACXC,UAAW,GACX/I,UAAW,IApBI,E,qDAwBnB,WAAqB,IAAD,OAClBgJ,YAAe,0BACZpE,MAAK,SAACC,GAAD,OACJ,EAAKzH,SAAS,CACZ+K,WAAYtD,EAAI9E,KAAKkJ,QACnB,SAAC1G,GAAD,MACyB,cAAvBA,EAAK2G,eACkB,cAAvB3G,EAAK2G,sBAIZ7D,OAAM,SAACC,GAAD,OAAS5B,QAAQC,IAAI2B,MAC9B6D,YAAavJ,KAAKlD,MAAM0M,U,sBAG1B,WACExJ,KAAKlD,MAAM0M,OAAO,QAASxJ,KAAKlD,MAAMsE,OACtCpB,KAAKlD,MAAM0M,OAAO,WAAYxJ,KAAKlD,MAAMmG,UACzCjD,KAAKlD,MAAM0M,OAAO,QAASxJ,KAAKlD,MAAMoE,S,yBAGxC,SAAYf,GACV,IACIvC,GADOuC,GAAc,oDACCtC,MAAM,KAChCmC,KAAKxC,SAAS,CACZ4C,UAAWxC,EAAe,GAC1BuL,UAAWvL,EAAe,GAC1BqL,WAAYrL,EAAe,GAC3BsL,UAAWtL,EAAe,GAC1B6L,aAAc7L,EAAe,O,sBAIjC,WACEoC,KAAKlD,MAAM0M,OAAO,aAAcxJ,KAAKhC,MAAMmL,WAC3CnJ,KAAKlD,MAAM0M,OAAO,QAASxJ,KAAKhC,MAAMiL,YACtCjJ,KAAKlD,MAAM0M,OAAO,iBAAkBxJ,KAAKhC,MAAMkL,WAC/ClJ,KAAKlD,MAAM0M,OAAO,gBAAiBxJ,KAAKhC,MAAMyL,gB,oBAGhD,WAAU,IAAD,OACP,OACE,0BAAMpD,SAAUrG,KAAKlD,MAAMwJ,cACzB,yBAAKhH,UAAU,OACb,yBAAKA,UAAU,8BACb,kBAAC,IAAD,CACEiH,KAAK,WACLM,MAAO7G,KAAKlD,MAAMmG,SAClBnD,KAAK,OACL4J,UAAU,EACVlD,UAAWQ,IACX2C,aAAc3J,KAAKlD,MAAMmG,SACzB2G,UAAW,SAAClM,GAAD,OAAWA,GAASA,EAAMyH,kBAGzC,yBAAK7F,UAAU,uBACb,kBAAC,IAAD,CACEuH,MAAM,aACNN,KAAK,YACLC,UAAWC,IACXC,QAAS1G,KAAKhC,MAAMuK,WAAW7F,KAAI,SAACC,GAclC,MAbW,CACTjF,MACEiF,EAAKpC,WACL,IACAoC,EAAKkH,WACL,IACAlH,EAAKnC,YACL,IACAmC,EAAKhC,WACL,IACAgC,EAAKrC,cACPiG,KAAM5D,EAAKkH,eAIf9C,SAAU,SAAC5G,GAAD,OAAU,EAAK2J,YAAY3J,IACrC4J,OAAQ/J,KAAKgK,WACblD,YAAY,oBAGhB,yBACExH,UAAU,sBACVsG,MACsB,WAApB5F,KAAKlD,MAAMsJ,KAAoB,KAAO,CAAE6D,WAAY,WAGtD,kBAAC,IAAD,CACE1D,KAAK,aACLM,MAAM,aACN/G,KAAK,OACL0G,UAAWQ,IACX4C,UAAW,SAAClM,GAAD,OAAWA,GAASA,EAAMyH,kBAGzC,yBAAK7F,UAAU,uBACb,kBAAC,IAAD,CACEiH,KAAK,QACLM,MAAM,aACN/G,KAAK,SACL0G,UAAWQ,IACX0C,UAAU,KAGd,yBAAKpK,UAAU,uBACb,kBAAC,IAAD,CACEiH,KAAK,IACLM,MAAM,UACN/G,KAAK,SACL0G,UAAWQ,OAGf,yBAAK1H,UAAU,uBACb,kBAAC,IAAD,CACEiH,KAAK,IACLM,MAAM,SACN/G,KAAK,SACL0G,UAAWQ,OAGf,yBAAK1H,UAAU,uBACb,kBAAC,IAAD,CACEiH,KAAK,MACLM,MAAM,eACN/G,KAAK,SACL0G,UAAWQ,IACX+C,OAAQ,kBAAM,EAAK1B,eAGvB,yBAAK/I,UAAU,uBACb,kBAAC,IAAD,CACEiH,KAAK,QACLM,MAAM,aACN/G,KAAK,SACL0G,UAAWQ,IACX+C,OAAQ,kBAAM,EAAK1B,eAGvB,yBAAK/I,UAAU,uBACb,kBAAC,IAAD,CACEiH,KAAK,iBACLM,MAAM,YACN/G,KAAK,SACL0G,UAAWQ,IACX+C,OAAQ,kBAAM,EAAK1B,eAGvB,yBAAK/I,UAAU,uBACb,kBAAC,IAAD,CACEiH,KAAK,QACLM,MAAM,aACN/G,KAAK,SACL0G,UAAWQ,IACX0C,UAAU,KAGd,yBAAKpK,UAAU,uBACb,kBAAC,IAAD,CACEiH,KAAK,QACLM,MAAM,aACN/G,KAAK,SACL0G,UAAWQ,IACX0C,UAAU,KAGd,yBAAKpK,UAAU,8BACb,kBAAC,IAAD,CACEiH,KAAK,gBACLM,MAAM,gBACN/G,KAAK,SACL0G,UAAWQ,IACX0C,UAAU,KAGd,yBAAKpK,UAAU,6BACb,yBAAKA,UAAU,cACb,4BACEA,UAAU,kBACVQ,KAAK,SACLuH,SAAUrH,KAAKlD,MAAMoN,YAHvB,kB,GAzM0B1C,aAwNxCY,EAA4BX,YAAU,CACpCC,KAAM,iBACNyC,SAAUjC,IACVkC,oBAAoB,GAHM3C,CAIzBW,GACH,IAAMiC,EAAWC,YAAkB,kBAEpB3C,iBAAQ,SAAC3J,GACtB,MAAuCqM,EACrCrM,EACA,QACA,iBACA,OAJMmD,EAAR,EAAQA,MAAOP,EAAf,EAAeA,eAAgBK,EAA/B,EAA+BA,IAM/B,MAAO,CACLG,OAAQpC,WAAWmC,IAAUnC,WAAW4B,GAAkB,MAAM2J,QAAQ,GACxErJ,MAAOlC,WAAWmC,GAASnC,WAAWiC,MAT3B0G,CAWZS","file":"static/js/37.606bb7bc.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getListTolakanPembayaranCustomer } from \"../actions/returnSupplier\";\r\nimport { Field, reduxForm, reset } from \"redux-form\";\r\n\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\nimport { deleteIndex } from \"../deleteLocalStorage\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { showModal } from \"../actions/ModalAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport { renderField, renderFieldSelect } from \"../renderField\";\r\nimport GlobalTabel from \"../GlobalComponent/GlobalTabel\";\r\nimport {\r\n  formatGram,\r\n  formatRp,\r\n  getUserID,\r\n  multipleDeleteLocal,\r\n} from \"../helper\";\r\nimport FormTolakanHutangSupplier from \"./Component/FormTolakanHutangSupplier\";\r\nimport { getcustomerList } from \"../actions/customerAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getToday } from \"../GlobalComponent/function\";\r\n\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\nconst maptostate = (state) => {\r\n  return {\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    listTolakanPembayaranCustomer: state.provinsi.listTolakanPembayaranCustomer,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    onSend: state.provinsi.onSend,\r\n    supplier: state.provinsi.supplier,\r\n    customer: state.provinsi.customer,\r\n    initialValues: {\r\n      tanggal: getToday(),\r\n    },\r\n  };\r\n};\r\n\r\nclass TolakanPembayaranCustomer extends Component {\r\n  constructor(props) {\r\n    var date = new Date();\r\n    var formatedDate = `${date.getFullYear()}-${\r\n      date.getMonth() + 1\r\n    }-${date.getDate()}`;\r\n    super(props);\r\n    this.state = {\r\n      supplierList: [],\r\n      DataSupplier: [],\r\n      startDate: formatedDate,\r\n      kodeSupplier: \"\",\r\n      namaSupplier: \"\",\r\n      tanggal: formatedDate,\r\n      noBon: \"\",\r\n      status: \"\",\r\n      tampungBarang: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Model\",\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Cap Kode\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"p\",\r\n          text: \"P\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"k\",\r\n          text: \"K\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Bungkus(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"kadar_beli\",\r\n          text: \"Kode Awal\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"ongkos_rp\",\r\n          text: \"Ongkos(RP)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          formatter: (cell) => (\r\n            <span>Rp. {parseFloat(cell).toLocaleString(\"ID-id\")}</span>\r\n          ),\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() =>\r\n                    deleteIndex(\r\n                      \"TolakanPembayaranCustomer\",\r\n                      rowIndex,\r\n                      this.props.dispatch,\r\n                      getListTolakanPembayaranCustomer()\r\n                    )\r\n                  }\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                </button>\r\n                <br />\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getcustomerList());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getListTolakanPembayaranCustomer());\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  pilihSupplier = (input) => (e) => {\r\n    var supp = e.target.value ? e.target.value : \"DEFALT | DEFAULT\";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeSupplier: result_explode[0],\r\n      namaSupplier: result_explode[1],\r\n    });\r\n  };\r\n\r\n  handleSubmit(data) {\r\n    var supp = data.kodeJenis\r\n      ? data.kodeJenis\r\n      : \"DEFAULT|DEFAULT|DEFAULT|DEFAULT\";\r\n    var split = supp.split(\"|\");\r\n    var simpan = {\r\n      kode_kategori: data.kode_kategori,\r\n      kode_jenis: split[0],\r\n      kadar_cetak: parseFloat(data.kadar).toString(),\r\n      kadar_beli: parseFloat(data.kadarTransaksi),\r\n      no_barcode: \"-\",\r\n      qty: 1,\r\n      p: parseFloat(data.p),\r\n      k: parseFloat(data.k),\r\n      pkg: parseFloat(data.pkg),\r\n      gross: parseFloat(data.gross),\r\n      bruto: parseFloat(data.bruto),\r\n      netto: parseFloat(data.netto),\r\n      ongkos_rp: parseFloat(data.rp === undefined ? 0 : data.rp),\r\n      harga_jual: 0,\r\n    };\r\n\r\n    var array =\r\n      JSON.parse(localStorage.getItem(\"TolakanPembayaranCustomer\")) || [];\r\n    array.push(simpan);\r\n    localStorage.setItem(\"TolakanPembayaranCustomer\", JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n    this.props.dispatch(getListTolakanPembayaranCustomer());\r\n    this.props.dispatch(reset(\"TerimaSupplier\"));\r\n  }\r\n\r\n  returnSupplierSubmit() {\r\n    if (this.state.noBon === \"\") {\r\n      warning(\"Mohon isi nomor bon\");\r\n      return false;\r\n    } else if (this.state.tanggal === \"\") {\r\n      warning(\"Mohon isi Tanggal\");\r\n      return false;\r\n    } else if (\r\n      JSON.parse(localStorage.getItem(\"TolakanPembayaranCustomer\") || \"[]\")\r\n        .length === 0\r\n    ) {\r\n      warning(\"Barang masih kosong, silahkan tambahkan barang\");\r\n      return false;\r\n    } else if (this.state.kodeSupplier === \"\") {\r\n      warning(\"Mohon pilih Supplier\");\r\n      return false;\r\n    }\r\n    let data = JSON.parse(localStorage.getItem(\"TolakanPembayaranCustomer\"));\r\n    let qty = data.length;\r\n    let p = data.map((list) => parseFloat(list.p)).reduce((a, b) => a + b, 0);\r\n    let k = data.map((list) => parseFloat(list.k)).reduce((a, b) => a + b, 0);\r\n    let pkg = data\r\n      .map((list) => parseFloat(list.pkg))\r\n      .reduce((a, b) => a + b, 0);\r\n    let bruto = data\r\n      .map((list) => parseFloat(list.bruto))\r\n      .reduce((a, b) => a + b, 0);\r\n    let netto = data\r\n      .map((list) => parseFloat(list.netto))\r\n      .reduce((a, b) => a + b, 0);\r\n    let ongkos_rp = data\r\n      .map((list) => parseFloat(list.ongkos_rp))\r\n      .reduce((a, b) => a + b, 0);\r\n    let isi = {\r\n      no_tolak: this.props.noFaktur,\r\n      tanggal: this.state.tanggal || getToday(),\r\n      no_bon: this.state.noBon,\r\n      kode_customer: this.state.kodeSupplier,\r\n      jenis_trx: \"PEMBAYARAN\",\r\n      total_qty: qty,\r\n      total_p: p,\r\n      total_k: k,\r\n      total_pkg: pkg,\r\n      total_bruto: bruto,\r\n      total_netto: netto,\r\n      total_ongkos: ongkos_rp,\r\n      detail_barang: JSON.parse(\r\n        localStorage.getItem(\"TolakanPembayaranCustomer\")\r\n      ),\r\n    };\r\n    console.log(JSON.stringify(isi));\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"TolakanPembayaranCustomer\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        ++i,\r\n        ticket.kode_jenis,\r\n        { content: ticket.kadar_cetak, styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.p), styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.k), styles: { halign: \"right\" } },\r\n        { content: ticket.pkg, styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.bruto), styles: { halign: \"right\" } },\r\n        { content: ticket.kadar_beli, styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.netto, 3), styles: { halign: \"right\" } },\r\n        { content: formatRp(ticket.ongkos_rp), styles: { halign: \"right\" } },\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    const footer = [\r\n      { content: \"Grand Total\", styles: { halign: \"right\" }, colSpan: 5 },\r\n      {\r\n        content: table.map((list) => list.pkg).reduce((a, b) => a + b, 0),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      {\r\n        content: formatGram(\r\n          table.map((list) => list.bruto).reduce((a, b) => a + b, 0)\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      \"\",\r\n      {\r\n        content: formatGram(\r\n          table.map((list) => list.netto).reduce((a, b) => a + b, 0)\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      {\r\n        content: formatRp(\r\n          table.map((list) => list.ongkos_rp).reduce((a, b) => a + b, 0)\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n    ];\r\n    // tableRows.push(footer);\r\n    console.log(JSON.stringify(tableRows));\r\n    var columTable = [\r\n      [\r\n        \"No\",\r\n        \"Kode Model\",\r\n        { content: \"Cap Kode\", styles: { halign: \"right\" } },\r\n        { content: \"P\", styles: { halign: \"right\" } },\r\n        { content: \"K\", styles: { halign: \"right\" } },\r\n        { content: \"Bungkus(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Berat(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Harga(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Murni(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Ongkos(Rp)\", styles: { halign: \"right\" } },\r\n      ],\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    AxiosMasterPost(\"trx-tolakan-customer/simpan\", isi)\r\n      .then((res) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Data Berhasil Ditambahkan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() =>\r\n            PrintNota(\r\n              \"No Bon\",\r\n              this.state.noBon.toUpperCase(),\r\n              \"Tanggal\",\r\n              this.state.tanggal,\r\n              \"Customer\",\r\n              this.state.kodeSupplier.toUpperCase(),\r\n              \"\",\r\n              \"\",\r\n              getUserID(),\r\n              getToday(),\r\n              \"\",\r\n              columTable,\r\n              \"Tolakan Pembayaran Customer\",\r\n              tableRows,\r\n              footer\r\n            )\r\n          )\r\n          .then(() =>\r\n            multipleDeleteLocal([\"TolakanPembayaranCustomer\", \"noFaktur\"])\r\n          )\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() => this.props.dispatch(getListTolakanPembayaranCustomer()))\r\n          .then(() =>\r\n            this.setState({\r\n              noBon: \"\",\r\n              kodeSupplier: \"\",\r\n            })\r\n          )\r\n          .then(() => document.getElementById(\"myForm\").reset())\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: err?.response.data,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <ol className=\"breadcrumb mb-2\">\r\n          <Link to=\"/KlasifikasiCustomer\">\r\n            <button type=\"button\" className=\"btn btn-secondary\">\r\n              <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i> Back\r\n            </button>\r\n          </Link>\r\n        </ol>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Tolakan Pembayaran Customer\" />\r\n              <div className=\"card-body\">\r\n                <ModalMasterData\r\n                  content={\r\n                    <Suspense\r\n                      fallback={<Skeleton width={\"100%\"} height={400} />}\r\n                    >\r\n                      <FormTolakanHutangSupplier\r\n                        from=\"tolakan\"\r\n                        onSubmit={(data) => this.handleSubmit(data)}\r\n                        noFaktur={this.props.noFaktur}\r\n                      />\r\n                    </Suspense>\r\n                  }\r\n                  title=\"Tambah Data Barang\"\r\n                />\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                      <form id=\"myForm\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-4\">\r\n                            <Field\r\n                              name=\"supplier\"\r\n                              component={renderFieldSelect}\r\n                              options={this.props.customer.map((list) => {\r\n                                let data = {\r\n                                  value: list.kode_customer,\r\n                                  name: list.nama_customer,\r\n                                };\r\n                                return data;\r\n                              })}\r\n                              type=\"text\"\r\n                              label=\"Customer\"\r\n                              placeholder=\"Masukan Customer\"\r\n                              onChange={(data) => {\r\n                                this.setState({\r\n                                  kodeSupplier: data,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-lg-4\">\r\n                            <Field\r\n                              name=\"tanggal\"\r\n                              component={renderField}\r\n                              type=\"date\"\r\n                              label=\"Tanggal\"\r\n                              placeholder=\"Masukan Tanggal\"\r\n                              onChange={(e) => {\r\n                                this.setState({\r\n                                  tanggal: e.target.value,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-lg-4\">\r\n                            <Field\r\n                              name=\"no_bon\"\r\n                              component={renderField}\r\n                              type=\"text\"\r\n                              label=\"Nomor Bon\"\r\n                              placeholder=\"Masukan Nomor Bon\"\r\n                              onChange={(data) => {\r\n                                this.setState({\r\n                                  noBon: data.target.value,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                    <div className=\"col-md-12 col-lg-12 mt-3\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6\"></div>\r\n                        <div className=\"col-lg-6\">\r\n                          <div className=\"text-right\">\r\n                            <button\r\n                              className=\"btn btn-primary\"\r\n                              onClick={() => this.props.dispatch(showModal())}\r\n                            >\r\n                              Tambah Data\r\n                              <i class=\"fa fa-plus ml-3\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12 mt-3\">\r\n                      <GlobalTabel\r\n                        keyField=\"id\"\r\n                        data={this.props.listTolakanPembayaranCustomer}\r\n                        columns={this.state.columns}\r\n                      />\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          disabled={this.props.onSend}\r\n                          onClick={() => this.returnSupplierSubmit()}\r\n                        >\r\n                          {this.props.onSend ? (\r\n                            <span\r\n                              className=\"spinner-border spinner-border-sm mr-3\"\r\n                              aria-hidden=\"true\"\r\n                            ></span>\r\n                          ) : null}\r\n                          Selesai\r\n                <i class=\"fa fa-paper-plane ml-3\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTolakanPembayaranCustomer = reduxForm({\r\n  form: \"TolakanPembayaranCustomer\",\r\n})(TolakanPembayaranCustomer);\r\nexport default connect(maptostate, null)(TolakanPembayaranCustomer);\r\n","const validationTerimaSupplier = (value) => {\r\n  const errors = {};\r\n  if (!value.kodeJenis) {\r\n    errors.kodeJenis = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.pkg) {\r\n    errors.pkg = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.p) {\r\n    errors.p = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.k) {\r\n    errors.k = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.bruto) {\r\n    errors.bruto = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.gross) {\r\n    errors.gross = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validationTerimaSupplier;\r\n","import React, { Component } from \"react\";\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validationTerimaSupplier from \"../../Validations/validationTerimaSupplier\";\r\nimport { getTimbangan } from \"../../GetTimbangan\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\n\r\nclass FormTolakanHutangSupplier extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onclick1 = this.onclick1.bind(this);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      DataSupplier: [],\r\n      kode_barang: \"\",\r\n      keterangan: \"INI KETERANGAN\",\r\n      kadar: \"\",\r\n      P: \"\",\r\n      K: \"\",\r\n      bungkus: \"\",\r\n      berat: \"\",\r\n      harga: \"\",\r\n      murni: \"\",\r\n      ongkos: \"\",\r\n      status: \"\",\r\n      kadarCetak: \"\",\r\n      kadarBeli: \"\",\r\n      namaJenis: \"\",\r\n      kodeJenis: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"jenis/get/all-no-image\")\r\n      .then((res) =>\r\n        this.setState({\r\n          kodeBarang: res.data.filter(\r\n            (list) =>\r\n              list.kode_kelompok !== \"PERHIASAN\" &&\r\n              list.kode_kelompok !== \"AKSESORIS\"\r\n          ),\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    getTimbangan(this.props.change);\r\n  }\r\n\r\n  onclick1() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n    this.props.change(\"gross\", this.props.gross);\r\n  }\r\n\r\n  pilihBarang(data) {\r\n    var supp = data ? data : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      namaJenis: result_explode[1],\r\n      kadarCetak: result_explode[2],\r\n      kadarBeli: result_explode[3],\r\n      kodeKategori: result_explode[4],\r\n    });\r\n  }\r\n\r\n  setKadar() {\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarBeli);\r\n    this.props.change(\"kode_kategori\", this.state.kodeKategori);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-lg-12 d-none\">\r\n            <Field\r\n              name=\"noFaktur\"\r\n              label={this.props.noFaktur}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              component={renderField}\r\n              defaultValue={this.props.noFaktur}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <Field\r\n              label=\"Kode Model\"\r\n              name=\"kodeJenis\"\r\n              component={renderFieldSelect}\r\n              options={this.state.kodeBarang.map((list) => {\r\n                let data = {\r\n                  value:\r\n                    list.kode_jenis +\r\n                    \"|\" +\r\n                    list.nama_jenis +\r\n                    \"|\" +\r\n                    list.kadar_cetak +\r\n                    \"|\" +\r\n                    list.kadar_beli +\r\n                    \"|\" +\r\n                    list.kode_kategori,\r\n                  name: list.nama_jenis,\r\n                };\r\n                return data;\r\n              })}\r\n              onChange={(data) => this.pilihBarang(data)}\r\n              onBlur={this.setKadar()}\r\n              placeholder=\"Silahkan Pilih\"\r\n            ></Field>\r\n          </div>\r\n          <div\r\n            className=\"col-md-8 form-group\"\r\n            style={\r\n              this.props.from === \"terima\" ? null : { visibility: \"hidden\" }\r\n            }\r\n          >\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              type=\"text\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kode Tukar\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"p\"\r\n              label=\"Plastik\"\r\n              type=\"number\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"k\"\r\n              label=\"Kertas\"\r\n              type=\"number\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"pkg\"\r\n              label=\"Bungkus (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Berat (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadarTransaksi\"\r\n              label=\"Kode Awal\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"gross\"\r\n              label=\"Gross (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Murni (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group d-none\">\r\n            <Field\r\n              name=\"kode_kategori\"\r\n              label=\"Kode Kategori\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 form-group mt-3\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\"\r\n                disabled={this.props.submitting}\r\n              >\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormTolakanHutangSupplier = reduxForm({\r\n  form: \"TerimaSupplier\",\r\n  validate: validationTerimaSupplier,\r\n  enableReinitialize: true,\r\n})(FormTolakanHutangSupplier);\r\nconst selector = formValueSelector(\"TerimaSupplier\"); // <-- same as form name\r\n\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi, pkg } = selector(\r\n    state,\r\n    \"bruto\",\r\n    \"kadarTransaksi\",\r\n    \"pkg\"\r\n  );\r\n  return {\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n    gross: parseFloat(bruto) + parseFloat(pkg),\r\n  };\r\n})(FormTolakanHutangSupplier);\r\n"],"sourceRoot":""}