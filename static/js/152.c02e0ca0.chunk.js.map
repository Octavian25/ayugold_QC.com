{"version":3,"sources":["TotalanMenu/Components/FormTimbanganStock.jsx","TotalanMenu/TimbangStock.jsx"],"names":["FormTimbanganStock","props","handleChange","input","e","result_explode","target","value","split","setState","kodeJenis","kadarCetak","kadarJual","change","state","listPerhiasan","listRongsok","listCiok","listBarangPerhiasan","kode_kelompok","this","dispatch","getListBarang","getListKelompok","getTotalTimbangStock","netto","onSubmit","handleSubmit","className","Field","disabled","name","component","renderFieldSelect","options","Kelompok","filter","fil","map","obj","kode_group","nama_group","type","label","placeholder","onChange","data","getSum","renderField","normalize","toUpperCase","onSend","aria-hidden","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","gross","kadarTransaksi","pkg","parseFloat","toFixed","kode_barang","provinsi","kodeBarang","totalTimbangStock","initialValues","total_real","SearchBar","Search","TimbangStock","changeInput","listLokasi","berat_bersih","columns","dataField","text","sort","headerStyle","width","align","headerAlign","csvExport","formatter","rowContent","row","index","data-tip","data-for","onClick","deleteRow","id","effect","setEditData","localStorage","removeItem","getTableTotalanTimbangan","getListTimbanganStock","getStatusTotalan","getLokasi","getUUID","getLokasiPindah","rowIndex","dihapus","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","array","JSON","parse","getItem","splice","setItem","stringify","timer","showConfirmButton","position","a","findIndex","find","jenis_barang","simpan","berat_packing","keterangan","kode_kategori","push","clearTimbanganStock","kirim","tanggal","getToday","detail_barang","console","log","AxiosMasterPost","berhasil","setInterval","window","location","reload","catch","err","gagal","AxiosMasterGet","res","formatGram","berat_global","getDataStock","HeaderCard","noFaktur","jenisBarang","ListTimbangStock","keyField","search","searchProps","style","margin","top","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","noDataIndication","readOnly","startTotalan","lokasi","data_stock","sumBruto","perhitungan","sumNetto","sumGross","sumPkg","sumQty","sumRp","status_totalan","lokasiSelected","dataLokasiPindah"],"mappings":"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","file":"static/js/152.c02e0ca0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { getListKelompok } from \"../../actions/kelompokAction\";\r\nimport { getListBarang } from \"../../actions/kodeBarangAction\";\r\nimport { getTotalTimbangStock } from \"../../actions/timbangBarangAction\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\n\r\nclass FormTimbanganStock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listPerhiasan: [],\r\n      listRongsok: [],\r\n      listCiok: [],\r\n      listBarangPerhiasan: [],\r\n      kode_kelompok: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListBarang());\r\n    this.props.dispatch(getListKelompok());\r\n    this.props.dispatch(getTotalTimbangStock());\r\n  }\r\n\r\n  // getTimbanganGross(this.props.change\r\n\r\n  handleChange = (input) => (e) => {\r\n    var supp = e.target.value\r\n      ? e.target.value\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      kadarCetak: result_explode[1],\r\n      kadarJual: result_explode[2],\r\n    });\r\n    this.props.change(\"kadarTransaksi\", result_explode[2]);\r\n    this.props.change(\"keterangan\", result_explode[3]);\r\n  };\r\n  setNetto() {\r\n    this.props.change(\r\n      \"netto\",\r\n      this.props.netto === \"NaN\" ? 0 : this.props.netto\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <Field\r\n              disabled={this.state.kode_kelompok !== \"\"}\r\n              name=\"kode_kategori\"\r\n              component={renderFieldSelect}\r\n              options={this.props.Kelompok.filter(\r\n                (fil) => fil.kode_kelompok !== \"AKSESORIS\"\r\n              ).map((obj) => {\r\n                var payload = {\r\n                  value: obj.kode_group,\r\n                  name: obj.nama_group,\r\n                };\r\n                return payload;\r\n              })}\r\n              type=\"text\"\r\n              label=\"Kode Kelompok\"\r\n              placeholder=\"Silahkan Pilih Kode Kelompok\"\r\n              onChange={(data) => this.props.getSum(data)}\r\n            />\r\n            <p>\r\n              <strong>Kode Kelompok</strong> hanya bisa dipilih{\" \"}\r\n              <strong>sekali</strong>, jika ingin mengganti silahkan klik tombol\r\n              hijau di atas\r\n            </p>\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"jenis_barang\"\r\n              label=\"Jenis Barang\"\r\n              type=\"text\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-2\">\r\n            <Field\r\n              name=\"berat_packing\"\r\n              label=\"Berat Packing\"\r\n              type=\"text\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-2\">\r\n            <Field\r\n              name=\"gross\"\r\n              label=\"Berat + Packing\"\r\n              type=\"text\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              type=\"text\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <br />\r\n        </div>\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"text-right\">\r\n            <button\r\n              className=\"btn btn-warning\"\r\n              type=\"submit\"\r\n              disabled={this.props.onSend}\r\n            >\r\n              {this.props.onSend ? (\r\n                <span\r\n                  className=\"spinner-border spinner-border-sm mr-3\"\r\n                  aria-hidden=\"true\"\r\n                ></span>\r\n              ) : null}\r\n              Simpan\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormTimbanganStock = reduxForm({\r\n  form: \"FormTimbanganStock\",\r\n  enableReinitialize: true,\r\n})(FormTimbanganStock);\r\nconst selector = formValueSelector(\"FormTimbanganStock\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { gross, kadarTransaksi, pkg } = selector(\r\n    state,\r\n    \"gross\",\r\n    \"kadarTransaksi\",\r\n    \"pkg\"\r\n  );\r\n  return {\r\n    netto: (\r\n      (parseFloat(gross ? gross : 0) - parseFloat(pkg ? pkg : 0)) *\r\n      (parseFloat(kadarTransaksi) / 100)\r\n    ).toFixed(3),\r\n    kode_barang: state.provinsi.kodeBarang,\r\n    onSend: state.provinsi.onSend,\r\n    Kelompok: state.provinsi.Kelompok,\r\n    totalTimbangStock: state.provinsi.totalTimbangStock,\r\n    initialValues: {\r\n      total_real: state.provinsi.totalTimbangStock,\r\n    },\r\n  };\r\n})(FormTimbanganStock);\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport {\r\n  getStatusTotalan,\r\n  getTableTotalanTimbangan,\r\n} from \"../actions/TotalanTimbanganAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport { getLokasi } from \"../actions/lokasiAction\";\r\nimport { AxiosMasterGet, AxiosMasterPost } from \"../Axios\";\r\nimport { berhasil, gagal } from \"../Alert\";\r\nimport { getLokasiPindah } from \"../actions/supplierAction\";\r\nimport FormTimbanganStock from \"./Components/FormTimbanganStock\";\r\nimport { getListTimbanganStock } from \"../actions/TotalanStock\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { getToday } from \"../GlobalComponent/function\";\r\nimport { renderField } from \"../renderField\";\r\nimport { formatGram } from \"../helper\";\r\nimport {\r\n  clearTimbanganStock,\r\n  getDataStock,\r\n  setEditData,\r\n} from \"../actions/TotalanTimbanganStock\";\r\n\r\nconst { SearchBar } = Search;\r\nclass TimbangStock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listLokasi: [],\r\n      berat_bersih: 0,\r\n      columns: [\r\n        {\r\n          dataField: \"jenis_barang\",\r\n          text: \"Jenis Barang\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"30%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"berat_bersih\",\r\n          text: \"Berat Bersih\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"berat_packing\",\r\n          text: \"Berat + Packing\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"15%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"keterangan\",\r\n          text: \"Keterangan\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"25%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, index) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() => this.deleteRow(index)}\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                </button>\r\n                <button\r\n                  data-tip\r\n                  data-for=\"edit\"\r\n                  className=\"btn btn-warning mr-2\"\r\n                  onClick={() => this.props.dispatch(setEditData(row))}\r\n                >\r\n                  EDIT\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Edit</span>\r\n                  </ReactTooltip>\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    localStorage.removeItem(\"TimbangStock\");\r\n    this.props.dispatch(getTableTotalanTimbangan());\r\n    this.props.dispatch(getListTimbanganStock());\r\n    this.props.dispatch(getStatusTotalan());\r\n    this.props.dispatch(getLokasi());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getLokasiPindah());\r\n  }\r\n\r\n  deleteRow(rowIndex, dihapus) {\r\n    Swal.fire({\r\n      title: \"Are You Sure ?\",\r\n      text: \"You Will Delete This Data ?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Delete\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const array = JSON.parse(localStorage.getItem(\"TimbangStock\")) || [];\r\n        array.splice(rowIndex, 1);\r\n        localStorage.setItem(\"TimbangStock\", JSON.stringify(array));\r\n        Swal.fire({\r\n          text: \"Berhasil\",\r\n          timer: 2000,\r\n          showConfirmButton: false,\r\n          position: \"top-right\",\r\n          icon: \"success\",\r\n        }).then(() => this.props.dispatch(getListTimbanganStock()));\r\n      }\r\n    });\r\n  }\r\n  async handleSubmit(data) {\r\n    var array = JSON.parse(localStorage.getItem(\"TimbangStock\")) || [];\r\n    const index = array.findIndex(\r\n      (find) => find.jenis_barang === data.jenis_barang\r\n    );\r\n    var simpan = {\r\n      jenis_barang: data.jenis_barang,\r\n      berat_bersih: parseFloat(data.gross) - parseFloat(data.berat_packing),\r\n      berat_packing: data.berat_packing,\r\n      keterangan: data.keterangan,\r\n    };\r\n    this.setState({\r\n      kode_kategori: data.kode_kategori,\r\n      berat_bersih:\r\n        parseFloat(this.state.berat_bersih) +\r\n        parseFloat(data.gross) -\r\n        parseFloat(data.berat_packing),\r\n    });\r\n    if (index === -1) {\r\n      array.push(simpan);\r\n      localStorage.setItem(\"TimbangStock\", JSON.stringify(array));\r\n      Swal.fire({\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n        text: \"Transaksi Berhasil\",\r\n        timer: 1500,\r\n        showConfirmButton: false,\r\n      });\r\n      this.props.dispatch(getListTimbanganStock());\r\n      this.props.dispatch(clearTimbanganStock());\r\n    } else {\r\n      array[index] = simpan;\r\n      localStorage.setItem(\"TimbangStock\", JSON.stringify(array));\r\n      Swal.fire({\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n        text: \"Transaksi Berhasil\",\r\n        timer: 1500,\r\n        showConfirmButton: false,\r\n      });\r\n      this.props.dispatch(getListTimbanganStock());\r\n      this.props.dispatch(clearTimbanganStock());\r\n    }\r\n  }\r\n\r\n  changeInput = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n  startTotalan() {\r\n    let data = JSON.parse(localStorage.getItem(\"TimbangStock\"));\r\n    let kirim = {\r\n      tanggal: getToday(),\r\n      kode_kategori: this.state.kode_kategori,\r\n      detail_barang: data,\r\n    };\r\n    console.log(JSON.stringify(kirim));\r\n    AxiosMasterPost(\"timbang-stock/post/simpan\", kirim)\r\n      .then(() => {\r\n        berhasil(\"Simpan Data Berhasil\");\r\n        localStorage.removeItem(\"TimbangStock\");\r\n        this.setState({\r\n          kode_kategori: \"\",\r\n        });\r\n        setInterval(() => {\r\n          window.location.reload();\r\n        }, 2000);\r\n      })\r\n      .catch((err) => gagal(`Gagal menyimpan Data, Detail : ${err.data}`));\r\n  }\r\n\r\n  getSum(data) {\r\n    this.setState({\r\n      kode_kelompok: data,\r\n    });\r\n    AxiosMasterGet(\"timbang-stock/get/stockBarangByKategori/\" + data).then(\r\n      (res) => {\r\n        this.props.change(\r\n          \"total_system\",\r\n          formatGram(res.data?.berat_global || 0)\r\n        );\r\n        this.props.dispatch(getDataStock(data));\r\n      }\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"card\">\r\n          <HeaderCard title=\"Timbangan Stock\" />\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                <FormTimbanganStock\r\n                  noFaktur={this.props.noFaktur}\r\n                  jenisBarang={this.props.kode_kelompok}\r\n                  getSum={(data) => this.getSum(data)}\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 mt-2\">\r\n                {this.props.ListTimbangStock ? (\r\n                  <ToolkitProvider\r\n                    keyField=\"jenis_barang\"\r\n                    data={this.props.ListTimbangStock}\r\n                    columns={this.state.columns}\r\n                    search\r\n                  >\r\n                    {(props) => (\r\n                      <div className=\"form-group\">\r\n                        <div className=\"text-right mt-5 mb-3\">\r\n                          <SearchBar\r\n                            {...props.searchProps}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Tuliskan Kode / Nama\"\r\n                            style={{ margin: 0, top: \"50%\" }}\r\n                          />\r\n                        </div>\r\n                        <BootstrapTable\r\n                          {...props.baseProps}\r\n                          striped\r\n                          hover\r\n                          condensed\r\n                          bordered={true}\r\n                          headerClasses=\"header-table\"\r\n                          pagination={paginationFactory()}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </ToolkitProvider>\r\n                ) : (\r\n                  <BootstrapTable\r\n                    keyField=\"kodeKelompok\"\r\n                    data={[]}\r\n                    columns={this.state.columns}\r\n                    bordered={true}\r\n                    headerClasses=\"header-table\"\r\n                    noDataIndication=\"Tidak Ada Data\"\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"row justify-content-end\">\r\n                  <div className=\"col-lg-2\">\r\n                    <Field\r\n                      name=\"total_system\"\r\n                      label=\"Total System\"\r\n                      type=\"text\"\r\n                      readOnly\r\n                      component={renderField}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row justify-content-end\">\r\n                  <div className=\"col-lg-2\">\r\n                    <Field\r\n                      name=\"total_real\"\r\n                      label=\"Total Real\"\r\n                      type=\"text\"\r\n                      component={renderField}\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    type=\"submit\"\r\n                    disabled={this.state.onSend}\r\n                    onClick={() => this.startTotalan()}\r\n                  >\r\n                    {this.state.onSend ? (\r\n                      <span\r\n                        className=\"spinner-border spinner-border-sm mr-3\"\r\n                        aria-hidden=\"true\"\r\n                      ></span>\r\n                    ) : null}\r\n                    Simpan Stock\r\n                    <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTimbangStock = reduxForm({\r\n  form: \"TimbangStock\",\r\n  enableReinitialize: true,\r\n})(TimbangStock);\r\nconst selector = formValueSelector(\"TimbangStock\");\r\nexport default connect((state) => {\r\n  const { tanggal, kode_kelompok, lokasi } = selector(\r\n    state,\r\n    \"tanggal\",\r\n    \"kode_kelompok\",\r\n    \"lokasi\"\r\n  );\r\n  return {\r\n    data_stock: state.provinsi.data_stock,\r\n    TimbangStock: state.provinsi.TimbangStock,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    ListTimbangStock: state.provinsi.ListTimbangStock,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumNetto: state.perhitungan.sumNetto,\r\n    sumGross: state.perhitungan.sumGross,\r\n    sumPkg: state.perhitungan.sumPkg,\r\n    sumQty: state.perhitungan.sumQty,\r\n    sumRp: state.perhitungan.sumRp,\r\n    onSend: state.provinsi.onSend,\r\n    status_totalan: state.provinsi.status_totalan,\r\n    lokasi: state.provinsi.lokasi,\r\n    tanggal: tanggal,\r\n    kode_kelompok: kode_kelompok,\r\n    lokasiSelected: lokasi,\r\n    dataLokasiPindah: state.provinsi.dataLokasiPindah,\r\n    totalTimbangStock: state.provinsi.totalTimbangStock,\r\n    initialValues: {\r\n      kode_kelompok: state.provinsi.status_totalan.kode_kelompok,\r\n      tanggal: state.provinsi.status_totalan.tanggal,\r\n    },\r\n  };\r\n})(TimbangStock);\r\n"],"sourceRoot":""}