{"version":3,"sources":["Validations/validationSupplier.js","DataMaster/Component/FormSupplier.jsx","DataMaster/Component/FormSupplierEdit.jsx","DataMaster/Supplier.jsx","Images/500.svg","TourGuide.jsx","../node_modules/react-stepper-horizontal/lib/index.js"],"names":["validationSupplier","value","errors","kodeSupplier","namaSupplier","kodeKota","kodeProvinsi","kodeKecamatan","FormSupplier","props","nextStep","step","state","setState","step2","step1","step3","prevStep","listKota","listProvinsi","listKecamatan","status","AxiosMasterGet","then","res","data","catch","err","console","log","e","filter","list","kode_provinsi","change","kode_kota","param","kodepos","this","kode_kecamatan","kode_pos","className","onSubmit","handleSubmit","steps","title","activeStep","id","Field","name","type","component","renderField","label","limit","normalize","toUpperCase","String","renderFieldSelect","options","map","obj","nama_provinsi","onChange","onProvinsiSelected","nama_kota","onKotaSelected","setKodePos","nama_kecamatan","onClick","placeholder","Component","reduxForm","form","validate","enableReinitialize","connect","FormSupplierEdit","readOnly","disabled","onSend","aria-hidden","initialValues","Alamat","provinsi","editSupplier","Email","atasNama","contactPerson","fax","handPhone","kodeExt","kodePos","namaBank","nomorRekening","telepon","status_intern","SearchBar","Search","ExportCSVButton","CSVExport","expandRow","renderer","row","style","backgroundColor","borderColor","kode_ext","email","alamat","contact_person","no_telp","no_hp","Supplier","columns","dataField","text","csvExport","formatter","rowContent","data-tip","data-for","dispatch","kode","kode_supplier","Swal","fire","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","AxiosMasterDelete","hideModal","berhasil","getsupplierList","gagal","data-tut","effect","editsupplier","nama_supplier","editModal","hasil","dataEdit","progressSend","AxiosMasterPost","finishSend","LogData","reset","handleReactive","response","includes","reactive","AxiosMasterPut","showModal","isEdit","color","alert","role","data-dismiss","aria-label","TourGuide","tourConfig","HeaderCard","ModalMasterData","content","handleEdit","tambahModal","supplierList","keyField","search","searchProps","margin","top","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","csvProps","error","src","notrespond","width","alt","height","supplier","module","exports","disableBody","target","disableBodyScroll","enableBody","enableBodyScroll","index","selector","onRequestClose","hideGuide","isOpen","showTourGuide","maskClassName","rounded","accentColor","onAfterOpen","onBeforeClose","Object","defineProperty","_Stepper","require","_Stepper2","__esModule","default"],"mappings":"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","file":"static/js/34.ebf5f50e.chunk.js","sourcesContent":["const validationSupplier = (value) => {\r\n  const errors = {};\r\n  if (!value.kodeSupplier) {\r\n    errors.kodeSupplier = \"Tidak Boleh kosong\";\r\n  } else if (value.kodeSupplier > 5) {\r\n    errors.kodeSupplier = \"Tidak Boleh Lebih dari 5\";\r\n  }\r\n  if (!value.namaSupplier) {\r\n    errors.namaSupplier = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.kodeKota) {\r\n    errors.kodeKota = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.kodeProvinsi) {\r\n    errors.kodeProvinsi = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.kodeKecamatan) {\r\n    errors.kodeKecamatan = \"Tidak Boleh kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validationSupplier;\r\n","import React, { Component } from \"react\";\r\nimport Stepper from \"react-stepper-horizontal\";\r\n\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validationSupplier from \"../../Validations/validationSupplier\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { SkeletonLoading } from \"../../helper\";\r\n\r\nclass FormSupplier extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      step: 0,\r\n      listKota: [],\r\n      listProvinsi: [],\r\n      listKecamatan: [],\r\n      status: \"AKTIF\",\r\n      step1: \"row\",\r\n      step2: \"row d-none\",\r\n      step3: \"row d-none\",\r\n    };\r\n  }\r\n\r\n  nextStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 0) {\r\n      this.setState({ step: step + 1, step2: \"row\", step1: \"row d-none\" });\r\n    } else if (step === 1) {\r\n      this.setState({ step: step + 1, step2: \"row d-none\", step3: \"row\" });\r\n    }\r\n  };\r\n\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 1) {\r\n      this.setState({ step: step - 1, step2: \"row d-none\", step1: \"row\" });\r\n    } else if (step === 2) {\r\n      this.setState({ step: step - 1, step3: \"row d-none\", step2: \"row\" });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"kota/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKota: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    AxiosMasterGet(\"provinsi/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listProvinsi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    AxiosMasterGet(\"kecamatan/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKecamatan: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  onProvinsiSelected(e) {\r\n    console.log(e);\r\n    AxiosMasterGet(\"kota/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKota: res.data,\r\n        })\r\n      )\r\n      .then(() =>\r\n        this.setState({\r\n          listKota: this.state.listKota.filter(\r\n            (list) => list.kode_provinsi === e\r\n          ),\r\n        })\r\n      )\r\n      .then(() => this.props.change(\"kodeKota\", \"\"))\r\n      .catch((err) => console.log(err));\r\n    AxiosMasterGet(\"kecamatan/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKecamatan: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  onKotaSelected(e) {\r\n    console.log(e);\r\n    AxiosMasterGet(\"kecamatan/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKecamatan: res.data,\r\n        })\r\n      )\r\n      .then(() =>\r\n        this.setState({\r\n          listKecamatan: this.state.listKecamatan.filter(\r\n            (list) => list.kode_kota === e\r\n          ),\r\n        })\r\n      )\r\n      .then(() => this.props.change(\"kodeKecamatan\", \"\"))\r\n      .catch((err) => console.log(err));\r\n  }\r\n  setKodePos(data) {\r\n    let param = data;\r\n    let kodepos = this.state.listKecamatan.filter(\r\n      (data) => data.kode_kecamatan === param\r\n    );\r\n\r\n    this.props.change(\"kodePos\", kodepos[0].kode_pos);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12\">\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"col-md-12\">\r\n            <Stepper\r\n              steps={[\r\n                { title: \"Data Diri\" },\r\n                { title: \"Contact Person\" },\r\n                // { title: \"Data Bank\" },\r\n              ]}\r\n              activeStep={this.state.step}\r\n            />\r\n          </div>\r\n          <div className={this.state.step1} id=\"step-0\">\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                name=\"kodeSupplier\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                label=\"Kode Supplier\"\r\n                limit=\"5\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 col-lg-2\">\r\n              <Field\r\n                name=\"kodeExt\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                label=\"Kode Ext\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6 col-lg-6\">\r\n              <Field\r\n                name=\"namaSupplier\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                label=\"Nama Supplier\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              {String(this.state.listProvinsi) !== \"\" ? (\r\n                <Field\r\n                  component={renderFieldSelect}\r\n                  label=\"Provinsi\"\r\n                  name=\"kodeProvinsi\"\r\n                  value={this.props.status}\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  className=\"form-control\"\r\n                  options={this.state.listProvinsi.map((obj) => {\r\n                    var payload = {\r\n                      value: obj.kode_provinsi,\r\n                      name: obj.nama_provinsi,\r\n                    };\r\n                    return payload;\r\n                  })}\r\n                  onChange={(e) => this.onProvinsiSelected(e)}\r\n                ></Field>\r\n              ) : (\r\n                <SkeletonLoading label=\"Provinsi\" />\r\n              )}\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              {String(this.state.listKota) !== \"\" ? (\r\n                <Field\r\n                  component={renderFieldSelect}\r\n                  label=\"Kota\"\r\n                  name=\"kodeKota\"\r\n                  value={this.props.status}\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  className=\"form-control\"\r\n                  options={this.state.listKota.map((obj) => {\r\n                    var payload = {\r\n                      value: obj.kode_kota,\r\n                      name: obj.nama_kota,\r\n                    };\r\n                    return payload;\r\n                  })}\r\n                  onChange={(e) => this.onKotaSelected(e)}\r\n                ></Field>\r\n              ) : (\r\n                <SkeletonLoading label=\"Kota\" />\r\n              )}\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              {String(this.state.listKecamatan) !== \"\" ? (\r\n                <Field\r\n                  component={renderFieldSelect}\r\n                  label=\"Kecamatan\"\r\n                  name=\"kodeKecamatan\"\r\n                  value={this.props.status}\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  className=\"form-control\"\r\n                  onChange={(data) => this.setKodePos(data)}\r\n                  options={this.state.listKecamatan.map((obj) => {\r\n                    var payload = {\r\n                      value: obj.kode_kecamatan,\r\n                      name: obj.nama_kecamatan,\r\n                    };\r\n                    return payload;\r\n                  })}\r\n                ></Field>\r\n              ) : (\r\n                <SkeletonLoading label=\"Kecamatan\" />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"col-md-10 col-lg-10\">\r\n              <Field\r\n                name=\"Alamat\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                label=\"Alamat\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 col-lg-2\">\r\n              <Field\r\n                name=\"kodePos\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                label=\"Kode Pos\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => this.nextStep()}\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={this.state.step2} id=\"step-1\">\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                name=\"contactPerson\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                label=\"Contact Person\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                name=\"Email\"\r\n                type=\"email\"\r\n                component={renderField}\r\n                label=\"Email\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                name=\"telepon\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                label=\"Telepon\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                name=\"fax\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                label=\"Fax\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                name=\"handPhone\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                label=\"Handphone\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <Field\r\n                name=\"status_intern\"\r\n                component={renderFieldSelect}\r\n                options={[\r\n                  {\r\n                    value: \"INTERN\",\r\n                    name: \"INTERN\",\r\n                  },\r\n                  {\r\n                    value: \"NON INTERN\",\r\n                    name: \"NON INTERN\",\r\n                  },\r\n                ]}\r\n                type=\"text\"\r\n                label=\"Status Intern\"\r\n                placeholder=\"Masukan Status Intern\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"row\">\r\n                <div className=\"text-left col-md-6\">\r\n                  <button\r\n                    name=\"simpan\"\r\n                    id=\"simpan\"\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => this.prevStep()}\r\n                  >\r\n                    Back\r\n                  </button>\r\n                </div>\r\n                <div className=\"text-right col-md-6\">\r\n                  <button\r\n                    name=\"simpan\"\r\n                    id=\"simpan\"\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        step1: \"row\",\r\n                        step2: \"row d-none\",\r\n                        step3: \"row d-none\",\r\n                        step: 0,\r\n                      })\r\n                    }\r\n                  >\r\n                    Simpan\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nFormSupplier = reduxForm({\r\n  form: \"SupplierTambah\",\r\n  validate: validationSupplier,\r\n  enableReinitialize: true,\r\n})(FormSupplier);\r\nexport default connect()(FormSupplier);\r\n","import React, { Component } from \"react\";\r\nimport Stepper from \"react-stepper-horizontal\";\r\n\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validationSupplier from \"../../Validations/validationSupplier\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    initialValues: {\r\n      Alamat: state.provinsi.editSupplier.Alamat,\r\n      Email: state.provinsi.editSupplier.Email,\r\n      atasNama: state.provinsi.editSupplier.atasNama,\r\n      contactPerson: state.provinsi.editSupplier.contactPerson,\r\n      fax: state.provinsi.editSupplier.fax,\r\n      handPhone: state.provinsi.editSupplier.handPhone,\r\n      kodeExt: state.provinsi.editSupplier.kodeExt,\r\n      kodeKota: state.provinsi.editSupplier.kodeKota,\r\n      kodeProvinsi: state.provinsi.editSupplier.kodeProvinsi,\r\n      kodeKecamatan: state.provinsi.editSupplier.kodeKecamatan,\r\n      kodePos: state.provinsi.editSupplier.kodePos,\r\n      kodeSupplier: state.provinsi.editSupplier.kodeSupplier,\r\n      namaBank: state.provinsi.editSupplier.namaBank,\r\n      namaSupplier: state.provinsi.editSupplier.namaSupplier,\r\n      nomorRekening: state.provinsi.editSupplier.nomorRekening,\r\n      telepon: state.provinsi.editSupplier.telepon,\r\n      status_intern: state.provinsi.editSupplier.status_intern === true ? \"INTERN\" : \"NON INTERN\",\r\n    },\r\n  };\r\n};\r\n\r\nclass FormSupplierEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      step: 0,\r\n      listKota: [],\r\n      listProvinsi: [],\r\n      listKecamatan: [],\r\n      status: \"AKTIF\",\r\n      step1: \"row\",\r\n      step2: \"row d-none\",\r\n      step3: \"row d-none\",\r\n    };\r\n  }\r\n\r\n  nextStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 0) {\r\n      this.setState({ step: step + 1, step2: \"row\", step1: \"row d-none\" });\r\n    } else if (step === 1) {\r\n      this.setState({ step: step + 1, step2: \"row d-none\", step3: \"row\" });\r\n    }\r\n  };\r\n\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 1) {\r\n      this.setState({ step: step - 1, step2: \"row d-none\", step1: \"row\" });\r\n    } else if (step === 2) {\r\n      this.setState({ step: step - 1, step3: \"row d-none\", step2: \"row\" });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"kota/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKota: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    AxiosMasterGet(\"provinsi/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listProvinsi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    AxiosMasterGet(\"kecamatan/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKecamatan: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n  setKodePos(data) {\r\n    let param = data;\r\n    let kodepos = this.state.listKecamatan.filter(\r\n      (data) => data.kode_kecamatan === param\r\n    );\r\n\r\n    this.props.change(\"kodePos\", kodepos[0].kode_pos);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12\">\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"col-md-12\">\r\n            <Stepper\r\n              steps={[\r\n                { title: \"Data Diri\" },\r\n                { title: \"Contact Person\" },\r\n                // { title: \"Data Bank\" },\r\n              ]}\r\n              activeStep={this.state.step}\r\n            />\r\n          </div>\r\n          <div className={this.state.step1} id=\"step-0\">\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                name=\"kodeSupplier\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                label=\"Kode Supplier\"\r\n                limit=\"5\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 col-lg-2\">\r\n              <Field\r\n                name=\"kodeExt\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                label=\"Kode Ext\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6 col-lg-6\">\r\n              <Field\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                name=\"namaSupplier\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                label=\"Nama Supplier\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                component={renderFieldSelect}\r\n                label=\"Provinsi\"\r\n                name=\"kodeProvinsi\"\r\n                value={this.props.status}\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                className=\"form-control\"\r\n                options={this.state.listProvinsi.map((obj) => {\r\n                  var payload = {\r\n                    value: obj.kode_provinsi,\r\n                    name: obj.nama_provinsi,\r\n                  };\r\n                  return payload;\r\n                })}\r\n              ></Field>\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                component={renderFieldSelect}\r\n                label=\"Kota\"\r\n                name=\"kodeKota\"\r\n                value={this.props.status}\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                className=\"form-control\"\r\n                options={this.state.listKota.map((obj) => {\r\n                  var payload = {\r\n                    value: obj.kode_kota,\r\n                    name: obj.nama_kota,\r\n                  };\r\n                  return payload;\r\n                })}\r\n              ></Field>\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                component={renderFieldSelect}\r\n                label=\"Kecamatan\"\r\n                name=\"kodeKecamatan\"\r\n                value={this.props.status}\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                className=\"form-control\"\r\n                onChange={(data) => this.setKodePos(data)}\r\n                options={this.state.listKecamatan.map((obj) => {\r\n                  var payload = {\r\n                    value: obj.kode_kecamatan,\r\n                    name: obj.nama_kecamatan,\r\n                  };\r\n                  return payload;\r\n                })}\r\n              ></Field>\r\n            </div>\r\n            <div className=\"col-md-6 col-lg-6\">\r\n              <Field\r\n                name=\"Alamat\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                label=\"Alamat\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 col-lg-2\">\r\n              <Field\r\n                name=\"kodePos\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                label=\"Kode Pos\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => this.nextStep()}\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={this.state.step2} id=\"step-1\">\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                name=\"contactPerson\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                label=\"Contact Person\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                name=\"Email\"\r\n                type=\"email\"\r\n                component={renderField}\r\n                label=\"Email\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                name=\"telepon\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                label=\"Telepon\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                name=\"fax\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                label=\"Fax\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                name=\"handPhone\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                label=\"Handphone\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <Field\r\n                name=\"status_intern\"\r\n                component={renderFieldSelect}\r\n                options={[\r\n                  {\r\n                    value: \"INTERN\",\r\n                    name: \"INTERN\",\r\n                  },\r\n                  {\r\n                    value: \"NON INTERN\",\r\n                    name: \"NON INTERN\",\r\n                  },\r\n                ]}\r\n                type=\"text\"\r\n                label=\"Status Intern\"\r\n                placeholder=\"Masukan Status Intern\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"row\">\r\n                <div className=\"text-left col-md-6\">\r\n                  <button\r\n                    name=\"simpan\"\r\n                    id=\"simpan\"\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => this.prevStep()}\r\n                  >\r\n                    Back\r\n                  </button>\r\n                </div>\r\n                <div className=\"text-right col-md-6\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    disabled={this.props.onSend}\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        step1: \"row\",\r\n                        step2: \"row d-none\",\r\n                        step3: \"row d-none\",\r\n                        step: 0,\r\n                      })\r\n                    }\r\n                  >\r\n                    {this.props.onSend ? (\r\n                      <span\r\n                        className=\"spinner-border spinner-border-sm mr-3\"\r\n                        aria-hidden=\"true\"\r\n                      ></span>\r\n                    ) : null}\r\n                    Simpan\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <div className={this.state.step3} id=\"step-1\">\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                name=\"namaBank\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                label=\"Nama Bank\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                name=\"nomorRekening\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                label=\"Nomor Rekneing\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                name=\"atasNama\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                label=\"Atas Nama\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"row\">\r\n                <div className=\"text-left col-md-6\">\r\n                  <button\r\n                    name=\"simpan\"\r\n                    id=\"simpan\"\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => this.prevStep()}\r\n                  >\r\n                    Back\r\n                  </button>\r\n                </div>\r\n                <div className=\"text-right col-md-6\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    disabled={this.props.submitting}\r\n                  >\r\n                    Simpan\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nFormSupplierEdit = reduxForm({\r\n  form: \"Supplier\",\r\n  validate: validationSupplier,\r\n  enableReinitialize: true,\r\n})(FormSupplierEdit);\r\nexport default connect(maptoState, null)(FormSupplierEdit);\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport FormSupplier from \"./Component/FormSupplier\";\r\nimport { connect } from \"react-redux\";\r\nimport { editsupplier, getsupplierList } from \"../actions/supplierAction\";\r\nimport notrespond from \"../Images/500.svg\";\r\nimport Swal from \"sweetalert2\";\r\nimport FormSupplierEdit from \"./Component/FormSupplierEdit\";\r\nimport { reset } from \"redux-form\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { AxiosMasterDelete, AxiosMasterPost, AxiosMasterPut } from \"../Axios\";\r\nimport { berhasil, gagal, LogData, reactive } from \"../Alert\";\r\nimport { hideModal, showModal } from \"../actions/ModalAction\";\r\nimport ModalMasterData from \"./Component/ModalMasterData\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport TourGuide from \"../TourGuide\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      AxiosMasterDelete(\"supplier/delete/\" + kode)\r\n        .then(() => dispatch(hideModal()))\r\n        .then((res) =>\r\n          berhasil(\"Data Berhasil Dihapus!\").then(() =>\r\n            dispatch(getsupplierList())\r\n          )\r\n        )\r\n        .catch((err) => gagal(\"Data Gagal Dihapus!\"));\r\n    }\r\n  });\r\n}\r\n\r\nconst expandRow = {\r\n  renderer: (row) => (\r\n    <div>\r\n      <table>\r\n        <tr\r\n          style={{ backgroundColor: \"transparent\", borderColor: \"transparent\" }}\r\n        >\r\n          <td>Kode Ext</td>\r\n          <td>:</td>\r\n          <td>{row.kode_ext}</td>\r\n        </tr>\r\n        <tr\r\n          style={{ backgroundColor: \"transparent\", borderColor: \"transparent\" }}\r\n        >\r\n          <td>Email</td>\r\n          <td>:</td>\r\n          <td>{row.email}</td>\r\n        </tr>\r\n        <tr\r\n          style={{ backgroundColor: \"transparent\", borderColor: \"transparent\" }}\r\n        >\r\n          <td>Alamat</td>\r\n          <td>:</td>\r\n          <td>{row.alamat}</td>\r\n        </tr>\r\n        <tr\r\n          style={{ backgroundColor: \"transparent\", borderColor: \"transparent\" }}\r\n        >\r\n          <td>Kode Pos</td>\r\n          <td>:</td>\r\n          <td>{row.kode_pos}</td>\r\n        </tr>\r\n        <tr\r\n          style={{ backgroundColor: \"transparent\", borderColor: \"transparent\" }}\r\n        >\r\n          <td>Contact Person</td>\r\n          <td>:</td>\r\n          <td>{row.contact_person}</td>\r\n        </tr>\r\n        <tr\r\n          style={{ backgroundColor: \"transparent\", borderColor: \"transparent\" }}\r\n        >\r\n          <td>Telephone</td>\r\n          <td>:</td>\r\n          <td>{row.no_telp}</td>\r\n        </tr>\r\n        <tr\r\n          style={{ backgroundColor: \"transparent\", borderColor: \"transparent\" }}\r\n        >\r\n          <td>Fax</td>\r\n          <td>:</td>\r\n          <td>{row.fax}</td>\r\n        </tr>\r\n        <tr\r\n          style={{ backgroundColor: \"transparent\", borderColor: \"transparent\" }}\r\n        >\r\n          <td>Handphone</td>\r\n          <td>:</td>\r\n          <td>{row.no_hp}</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  ),\r\n};\r\nconst maptoState = (state) => {\r\n  return {\r\n    supplierList: state.provinsi.supplier,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\n\r\nclass Supplier extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          dataField: \"kode_supplier\",\r\n          text: \"Kode Supplier\",\r\n        },\r\n        {\r\n          dataField: \"nama_supplier\",\r\n          text: \"Nama Supplier\",\r\n        },\r\n        {\r\n          dataField: \"kode_provinsi\",\r\n          text: \"Kode Provinsi\",\r\n        },\r\n        {\r\n          dataField: \"kode_kota\",\r\n          text: \"Kode Kota\",\r\n        },\r\n        {\r\n          dataField: \"kode_kecamatan\",\r\n          text: \"Kode Kecamatan\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"row\">\r\n                <div className=\"mx-auto\">\r\n                  <button\r\n                    data-tip\r\n                    data-for=\"hapus\"\r\n                    className=\"btn btn-danger mr-2\"\r\n                    onClick={() =>\r\n                      hapus(this.props.dispatch, row.kode_supplier)\r\n                    }\r\n                    data-tut=\"reactour_3\"\r\n                  >\r\n                    <i className=\"fa fa-trash mr-1\"></i>\r\n                    <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                      <span>Hapus</span>\r\n                    </ReactTooltip>\r\n                  </button>\r\n                  <button\r\n                    data-tip\r\n                    data-for=\"edit\"\r\n                    className=\"btn btn-warning\"\r\n                    data-tut=\"reactour_4\"\r\n                    onClick={() =>\r\n                      this.props.dispatch(\r\n                        editsupplier(\r\n                          row.alamat,\r\n                          row.email,\r\n                          row.contact_person,\r\n                          row.fax,\r\n                          row.no_hp,\r\n                          row.kode_ext,\r\n                          row.kode_kota,\r\n                          row.kode_pos,\r\n                          row.kode_supplier,\r\n                          row.nama_supplier,\r\n                          row.no_telp,\r\n                          row.kode_provinsi,\r\n                          row.kode_kecamatan,\r\n                          row.status_intern,\r\n                          this.editModal()\r\n                        )\r\n                      )\r\n                    }\r\n                  >\r\n                    <i className=\"fa fa-edit\"></i>\r\n                    <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                      <span>Edit</span>\r\n                    </ReactTooltip>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getsupplierList());\r\n  }\r\n\r\n  handleSubmit(hasil) {\r\n    let data = {\r\n      kode_supplier: hasil.kodeSupplier,\r\n      nama_supplier: hasil.namaSupplier,\r\n      kode_ext: hasil.kodeExt || \"-\",\r\n      kode_provinsi: hasil.kodeProvinsi,\r\n      kode_kota: hasil.kodeKota,\r\n      kode_kecamatan: hasil.kodeKecamatan,\r\n      alamat: hasil.Alamat || \"-\",\r\n      kode_pos: hasil.kodePos || 0,\r\n      contact_person: hasil.contactPerson || 0,\r\n      no_telp: hasil.telepon || \"-\",\r\n      no_hp: hasil.handPhone || \"-\",\r\n      fax: hasil.fax || \"-\",\r\n      email: hasil.Email || \"-\",\r\n      status_intern: hasil.status_intern === \"INTERN\" ? true : false,\r\n    };\r\n    let dataEdit = {\r\n      nama_supplier: hasil.namaSupplier,\r\n      kode_ext: hasil.kodeExt || \"-\",\r\n      kode_provinsi: hasil.kodeProvinsi,\r\n      kode_kota: hasil.kodeKota,\r\n      kode_kecamatan: hasil.kodeKecamatan,\r\n      alamat: hasil.Alamat || \"-\",\r\n      kode_pos: hasil.kodePos || 0,\r\n      contact_person: hasil.contactPerson || 0,\r\n      no_telp: hasil.telepon || \"-\",\r\n      no_hp: hasil.handPhone || \"-\",\r\n      fax: hasil.fax || \"-\",\r\n      email: hasil.Email || \"-\",\r\n      status_intern: hasil.status_intern === \"INTERN\" ? true : false,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPost(\"supplier/add\", data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Ditambah!\")\r\n          .then(() => LogData(\"Data Berhasil Ditambah Di Supplier\", data))\r\n          .then(() => this.props.dispatch(getsupplierList()))\r\n          .then(() => this.props.dispatch(reset(\"SupplierTambah\")))\r\n      )\r\n      .catch((err) => this.handleReactive(err, hasil.kodeSupplier, dataEdit));\r\n  }\r\n  handleReactive(err, kode, data) {\r\n    this.props.dispatch(hideModal());\r\n    let error = err.response.data;\r\n    let check = error.includes(\"deleted\");\r\n    check\r\n      ? reactive(\r\n          err,\r\n          kode,\r\n          \"supplier/reactive/\",\r\n          data,\r\n          \"supplier/edit/\"\r\n        ).then(() => this.props.dispatch(getsupplierList()))\r\n      : gagal(\"Data Gagal Ditambahkan\");\r\n  }\r\n\r\n  handleEdit(hasil) {\r\n    let data = {\r\n      nama_supplier: hasil.namaSupplier,\r\n      kode_ext: hasil.kodeExt,\r\n      kode_provinsi: hasil.kodeProvinsi,\r\n      kode_kota: hasil.kodeKota,\r\n      kode_kecamatan: hasil.kodeKecamatan,\r\n      alamat: hasil.Alamat,\r\n      kode_pos: hasil.kodePos,\r\n      contact_person: hasil.contactPerson,\r\n      no_telp: hasil.telepon,\r\n      no_hp: hasil.handPhone,\r\n      fax: hasil.fax,\r\n      email: hasil.Email,\r\n      status_intern: hasil.status_intern === \"INTERN\" ? true : false,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPut(\"supplier/edit/\" + hasil.kodeSupplier, data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Diubah!\")\r\n          .then(() => LogData(\"Data Berhasil Diubah Di Supplier\", data))\r\n          .then(() => this.props.dispatch(getsupplierList()))\r\n      )\r\n      .catch((err) =>\r\n        gagal(\"Data Gagal Diubah!\")\r\n          .then(() => LogData(\"Data Gagal Diubah Di Supplier\", data, err))\r\n          .then(() => this.props.dispatch(hideModal()))\r\n      );\r\n  }\r\n\r\n  tambahModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  editModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div id=\"notif_alert\" className={this.props.alert} role=\"alert\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n          <strong>Error - </strong> Tidak Bisa Mengambil Data\r\n        </div>\r\n        <TourGuide\r\n          tourConfig={[\r\n            `Untuk Menambahkan Data Supplier, Tekan Tombol ini Dan Isi kolom yang disediakan`,\r\n            `Ini adalah Data Supplier yang sudah tersimpan`,\r\n            `Ini adalah tombol untuk menghapus data pada baris yang dipilih`,\r\n            `Ini adalah tombol untuk mengubah data pada baris yang dipilih`,\r\n          ]}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Data Supplier\" />\r\n              <div className=\"card-body\">\r\n                <ModalMasterData\r\n                  content={\r\n                    this.state.isEdit ? (\r\n                      <FormSupplierEdit\r\n                        onSend={this.props.onSend}\r\n                        onSubmit={(data) => this.handleEdit(data)}\r\n                      />\r\n                    ) : (\r\n                      <FormSupplier\r\n                        onSubmit={(data) => this.handleSubmit(data)}\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    )\r\n                  }\r\n                  title={\r\n                    this.state.isEdit\r\n                      ? \"Edit Data Supplier\"\r\n                      : \"Tambah Data Supplier\"\r\n                  }\r\n                />\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      name=\"simpan\"\r\n                      id=\"simpan\"\r\n                      type=\"button\"\r\n                      className=\"btn btn-info\"\r\n                      onClick={() => this.tambahModal()}\r\n                      data-tut=\"reactour_1\"\r\n                    >\r\n                      Tambah Data Supplier\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div data-tut=\"reactour_2\">\r\n                  {this.props.supplierList ? (\r\n                    <ToolkitProvider\r\n                      keyField=\"kode_supplier\"\r\n                      data={this.props.supplierList}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"text-left mt-5 mb-3\">\r\n                          <div className=\"text-right\">\r\n                            <SearchBar\r\n                              {...props.searchProps}\r\n                              className=\"form-control\"\r\n                              placeholder=\"Pencarian\"\r\n                              style={{ margin: 0, top: \"50%\" }}\r\n                            />\r\n                          </div>\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            expandRow={expandRow}\r\n                            pagination={paginationFactory()}\r\n                          />\r\n                          <ExportCSVButton\r\n                            {...props.csvProps}\r\n                            className=\"btn btn-primary\"\r\n                          >\r\n                            Export CSV\r\n                          </ExportCSVButton>\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  ) : (\r\n                    <div>\r\n                      {this.props.error ? (\r\n                        <div className=\"text-center\">\r\n                          <img\r\n                            src={notrespond}\r\n                            style={{ width: \"30%\" }}\r\n                            alt=\"Not Respond\r\n                          \"\r\n                          />\r\n                          <br />\r\n                          <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton width={\"100%\"} height={180} />\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(Supplier);\r\n","module.exports = __webpack_public_path__ + \"static/media/500.c22f1e39.svg\";","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideGuide } from \"./actions/ModalAction\";\r\nimport Tour from \"reactour\";\r\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\r\n\r\nconst mapToState = (state) => {\r\n  return {\r\n    showTourGuide: state.provinsi.showTourGuide,\r\n  };\r\n};\r\nclass TourGuide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  disableBody = (target) => disableBodyScroll(target);\r\n  enableBody = (target) => enableBodyScroll(target);\r\n  render() {\r\n    let tourConfig = this.props.tourConfig.map((list, index) => {\r\n      let data = {\r\n        selector: '[data-tut=\"reactour_' + ++index + '\"]',\r\n        content: list,\r\n      };\r\n      return data;\r\n    });\r\n    console.log(tourConfig);\r\n    return (\r\n      <Tour\r\n        onRequestClose={() => this.props.dispatch(hideGuide())}\r\n        steps={tourConfig}\r\n        isOpen={this.props.showTourGuide}\r\n        maskClassName=\"mask\"\r\n        className=\"helper\"\r\n        rounded={5}\r\n        accentColor=\"#5cb7b7\"\r\n        onAfterOpen={this.disableBody}\r\n        onBeforeClose={this.enableBody}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapToState, null)(TourGuide);\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Stepper = require('./Stepper');\n\nvar _Stepper2 = _interopRequireDefault(_Stepper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Stepper2.default;"],"sourceRoot":""}