{"version":3,"sources":["Transaksi/Component/FormTolakanCustomer.jsx","Transaksi/TolakReturnCustomer.jsx"],"names":["currencyMask","createNumberMask","prefix","suffix","locale","FormTolakanCustomer","props","onclick1","bind","state","kodeBarang","DataSupplier","non_aksesoris","aksesoris","kode_barang","keterangan","kadar","P","K","bungkus","berat","harga","murni","ongkos","status","kadarCetak","kadarBeli","namaJenis","kodeJenis","showMenu","isBarangToko","this","dispatch","getListBarang","change","netto","noFaktur","gross","data","kodeCustomer","kodeSupplier","param","hasil","KodeBarangList","filter","kode_jenis","AxiosMasterGet","then","res","kode_kelompok","setState","nama_jenis","kode_tukar_normal","kadarJual","kodeKategori","kode_kategori","namaKategori","nama_kategori","harga_jual","harga_aksesoris","setKadar","setFocus","onSubmit","handleSubmit","className","Field","name","label","type","readOnly","component","renderField","defaultValue","normalize","value","toUpperCase","String","renderFieldSelect","options","map","list","onChange","pilihBarang","onBlur","placeholder","style","from","visibility","htmlFor","disabled","submitting","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","bruto","kadarTransaksi","pkg","parseFloat","toFixed","provinsi","initialValues","discGlobalPr","p","k","rp","ModalMasterData","lazy","TolakReturnCustomer","date","Date","formatedDate","getFullYear","getMonth","getDate","inputChange","input","e","target","pilihSupplier","result_explode","split","namaSupplier","supplierList","startDate","tanggal","noBon","tampungBarang","columns","dataField","text","align","headerAlign","footerClasses","formatter","cell","toLocaleString","csvExport","rowContent","row","rowIndex","data-tip","data-for","onClick","deleteIndex","getListTolakReturnCustomer","id","effect","localStorage","removeItem","getcustomerList","getUUID","simpan","undefined","kadar_cetak","toString","kadar_beli","no_barcode","qty","ongkos_rp","array","JSON","parse","getItem","push","setItem","stringify","Swal","fire","position","icon","showConfirmButton","timer","reset","no_bon_selected","warning","tanggal_selected","supplier_selected","reduce","a","b","isi","no_tolak","no_bon","kode_customer","jenis_trx","total_qty","total_p","total_k","total_pkg","total_bruto","total_netto","total_ongkos","detail_barang","console","log","progressSend","tableRows","table","forEach","ticket","i","ticketData","content","styles","halign","formatGram","formatRp","footer","columTable","AxiosMasterPost","PrintNota","getUserID","getToday","multipleDeleteLocal","finishSend","window","location","reload","document","getElementById","catch","err","response","color","HeaderCard","title","fallback","width","height","customer","nama_customer","showModal","class","aria-hidden","GlobalTabel","keyField","listTolakanReturnCustomer","onSend","returnSupplierSubmit","supplier","username","alert","error"],"mappings":"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","file":"static/js/160.2199c039.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { SkeletonLoading } from \"../../GlobalComponent/function\";\r\nimport { setFocus } from \"../../helper\";\r\nimport { getListBarang } from \"../../actions/kodeBarangAction\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\n\r\nclass FormTolakanCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onclick1 = this.onclick1.bind(this);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      DataSupplier: [],\r\n      non_aksesoris: \"col-lg-12 row\",\r\n      aksesoris: \"col-lg-12 row d-none\",\r\n      kode_barang: \"\",\r\n      keterangan: \"INI KETERANGAN\",\r\n      kadar: \"\",\r\n      P: \"\",\r\n      K: \"\",\r\n      bungkus: \"\",\r\n      berat: \"\",\r\n      harga: \"\",\r\n      murni: \"\",\r\n      ongkos: \"\",\r\n      status: \"\",\r\n      kadarCetak: \"\",\r\n      kadarBeli: \"\",\r\n      namaJenis: \"\",\r\n      kodeJenis: \"\",\r\n      showMenu: true,\r\n      isBarangToko: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListBarang());\r\n  }\r\n\r\n  onclick1() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n    this.props.change(\"gross\", this.props.gross);\r\n  }\r\n\r\n  pilihBarang(data) {\r\n    let kodeCustomer = this.props.kodeSupplier;\r\n    let param = data;\r\n    let hasil = this.props.KodeBarangList.filter(\r\n      (data) => data.kode_jenis === param\r\n    );\r\n    AxiosMasterGet(\r\n      `/kelompok-harga/get/by-jenis-and-customer/${kodeCustomer}&${data}&PUSAT`\r\n    ).then((res) => {\r\n      if (res.data?.kode_kelompok === \"AKSESORIS\") {\r\n        this.setState({\r\n          non_aksesoris: \"col-lg-12 row d-none\",\r\n          aksesoris: \"col-lg-12 row\",\r\n        });\r\n      } else {\r\n        this.setState({\r\n          non_aksesoris: \"col-lg-12 row\",\r\n          aksesoris: \"col-lg-12 row d-none\",\r\n        });\r\n      }\r\n      this.setState({\r\n        kodeJenis: hasil[0].kode_jenis,\r\n        namaJenis: hasil[0].nama_jenis,\r\n        kadarCetak: res.data?.kode_tukar_normal,\r\n        kadarJual: res.data?.kode_tukar_normal,\r\n        kodeKategori: res.data?.kode_kategori,\r\n        namaKategori: res.data?.nama_kategori,\r\n        harga_jual: res.data?.harga_aksesoris,\r\n      });\r\n      this.setKadar();\r\n      setFocus(\"P\");\r\n    });\r\n  }\r\n\r\n  setKadar() {\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarJual);\r\n    this.props.change(\"kode_kategori\", this.state.kodeKategori);\r\n    this.props.change(\"harga_jual\", this.state.harga_jual);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n        <div\r\n            className={\"col-lg-12\"}\r\n          >\r\n            <div className=\"col-md-12 col-lg-12 d-none\">\r\n              <Field\r\n                name=\"noFaktur\"\r\n                label={this.props.noFaktur}\r\n                type=\"text\"\r\n                readOnly={true}\r\n                component={renderField}\r\n                defaultValue={this.props.noFaktur}\r\n                normalize={(value) => value && value.toUpperCase()}\r\n              />\r\n            </div>\r\n            <div\r\n              className={\r\n                this.state.isBarangToko\r\n                  ? \"col-md-4 form-group\"\r\n                  : \"col-md-4 form-group d-none\"\r\n              }\r\n            >\r\n              {String(this.props.KodeBarangList) !== \"\" ? (\r\n                <Field\r\n                  label=\"Kode Model\"\r\n                  name=\"kodeJenis\"\r\n                  component={renderFieldSelect}\r\n                  options={this.props.KodeBarangList.map((list) => {\r\n                    let data = {\r\n                      value: list.kode_jenis,\r\n                      name: list.nama_jenis,\r\n                    };\r\n                    return data;\r\n                  })}\r\n                  onChange={(data) => this.pilihBarang(data)}\r\n                  onBlur={this.setKadar()}\r\n                  placeholder=\"Silahkan Pilih\"\r\n                ></Field>\r\n              ) : (\r\n                <SkeletonLoading label=\"Kode Model\" />\r\n              )}\r\n            </div>\r\n            <div\r\n              className=\"col-md-8 form-group\"\r\n              style={\r\n                this.props.from === \"terima\" ? null : { visibility: \"hidden\" }\r\n              }\r\n            >\r\n              <Field\r\n                name=\"keterangan\"\r\n                label=\"Keterangan\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                normalize={(value) => value && value.toUpperCase()}\r\n              />\r\n            </div>\r\n            <div className={this.state.non_aksesoris}>\r\n              <div className=\"col-md-3 form-group\">\r\n                <Field\r\n                  name=\"kadar\"\r\n                  label=\"Cap Kode\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  readOnly={true}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-3 form-group\">\r\n                <Field\r\n                  name=\"p\"\r\n                  label=\"P\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-3 form-group\">\r\n                <Field\r\n                  name=\"k\"\r\n                  label=\"K\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-3 form-group\">\r\n                <Field\r\n                  name=\"pkg\"\r\n                  label=\"Bungkus (Gr)\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  onBlur={() => this.onclick1()}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-3 form-group\">\r\n                <Field\r\n                  name=\"bruto\"\r\n                  label=\"Berat (Gr)\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  onBlur={() => this.onclick1()}\r\n                />\r\n              </div>\r\n              <div\r\n                className={\r\n                  this.state.isBarangToko\r\n                    ? \"col-md-4 form-group\"\r\n                    : \"col-md-4 form-group d-none\"\r\n                }\r\n              >\r\n                <Field\r\n                  name=\"kadarTransaksi\"\r\n                  label=\"Kode Awal (%)\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  onBlur={() => this.onclick1()}\r\n                />\r\n              </div>\r\n              <div\r\n                className={\r\n                  this.state.isBarangToko\r\n                    ? \"col-md-4 form-group\"\r\n                    : \"col-md-4 form-group d-none\"\r\n                }\r\n              >\r\n                <Field\r\n                  name=\"gross\"\r\n                  label=\"Gross (Gr)\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  readOnly={true}\r\n                />\r\n              </div>\r\n              <div\r\n                className={\r\n                  this.state.isBarangToko\r\n                    ? \"col-md-4 form-group\"\r\n                    : \"col-md-4 form-group d-none\"\r\n                }\r\n              >\r\n                <Field\r\n                  name=\"netto\"\r\n                  label=\"Murni (Gr)\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  readOnly={true}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-3 form-group d-none\">\r\n                <Field\r\n                  name=\"kode_kategori\"\r\n                  label=\"Kode Kategori\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  readOnly={true}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-3 form-group\">\r\n                <label htmlFor=\"\">Ongkos (Rp)</label>\r\n                <Field\r\n                  name=\"rp\"\r\n                  component=\"input\"\r\n                  type=\"tel\"\r\n                  className=\"form-control\"\r\n                  {...currencyMask}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={this.state.aksesoris}>\r\n              <div className=\"col-md-4 form-group\">\r\n                <Field\r\n                  name=\"qty\"\r\n                  label=\"QTY\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 form-group\">\r\n                <label htmlFor=\"\">Harga Beli (Rp)</label>\r\n                <Field\r\n                  name=\"harga_jual\"\r\n                  component=\"input\"\r\n                  type=\"tel\"\r\n                  className=\"form-control\"\r\n                  {...currencyMask}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 form-group mt-3\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  type=\"submit\"\r\n                  disabled={this.props.submitting}\r\n                >\r\n                  Simpan\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormTolakanCustomer = reduxForm({\r\n  form: \"TerimaSupplier\",\r\n  enableReinitialize: true,\r\n})(FormTolakanCustomer);\r\nconst selector = formValueSelector(\"TerimaSupplier\"); // <-- same as form name\r\n\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi, pkg } = selector(\r\n    state,\r\n    \"bruto\",\r\n    \"kadarTransaksi\",\r\n    \"pkg\"\r\n  );\r\n  return {\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n    gross: parseFloat(bruto) + parseFloat(pkg),\r\n    KodeBarangList: state.provinsi.kodeBarang,\r\n    initialValues: {\r\n      discGlobalPr: 0,\r\n      p: 0,\r\n      k: 0,\r\n      pkg: 0,\r\n      bruto: 0,\r\n      rp: 0,\r\n    },\r\n  };\r\n})(FormTolakanCustomer);\r\n","import React, { Component, lazy, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getListTolakReturnCustomer } from \"../actions/returnSupplier\";\r\nimport { Field, formValueSelector, reduxForm, reset } from \"redux-form\";\r\n\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\nimport { deleteIndex } from \"../deleteLocalStorage\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { showModal } from \"../actions/ModalAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport { renderField, renderFieldSelect } from \"../renderField\";\r\nimport GlobalTabel from \"../GlobalComponent/GlobalTabel\";\r\nimport {\r\n  formatGram,\r\n  formatRp,\r\n  getUserID,\r\n  multipleDeleteLocal,\r\n} from \"../helper\";\r\nimport { getcustomerList } from \"../actions/customerAction\";\r\nimport FormTolakanCustomer from \"./Component/FormTolakanCustomer\";\r\nimport { getToday } from \"../getDate\";\r\n\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\n\r\nclass TolakReturnCustomer extends Component {\r\n  constructor(props) {\r\n    var date = new Date();\r\n    var formatedDate = `${date.getFullYear()}-${\r\n      date.getMonth() + 1\r\n    }-${date.getDate()}`;\r\n    super(props);\r\n    this.state = {\r\n      supplierList: [],\r\n      DataSupplier: [],\r\n      startDate: formatedDate,\r\n      kodeSupplier: \"\",\r\n      namaSupplier: \"\",\r\n      tanggal: formatedDate,\r\n      noBon: \"\",\r\n      status: \"\",\r\n      tampungBarang: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Model\",\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Cap\\nKode\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"p\",\r\n          text: \"P\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"k\",\r\n          text: \"K\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Bungkus\\n(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat\\n(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"kadar_beli\",\r\n          text: \"Kode\\nAwal\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni\\n(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"ongkos_rp\",\r\n          text: \"Ongkos\\n(RP)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          formatter: (cell) => (\r\n            <span>Rp. {parseFloat(cell).toLocaleString(\"ID-id\")}</span>\r\n          ),\r\n        },\r\n        {\r\n          dataField: \"harga_jual\",\r\n          text: \"Harga Jual)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n          formatter: (cell) => (\r\n            <span>Rp. {parseFloat(cell).toLocaleString(\"ID-id\")}</span>\r\n          ),\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() =>\r\n                    deleteIndex(\r\n                      \"TolakReturnCustomer\",\r\n                      rowIndex,\r\n                      this.props.dispatch,\r\n                      getListTolakReturnCustomer()\r\n                    )\r\n                  }\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                </button>\r\n                <br />\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    localStorage.removeItem(\"TolakReturnCustomer\")\r\n    this.props.dispatch(getcustomerList());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getListTolakReturnCustomer());\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  pilihSupplier = (input) => (e) => {\r\n    var supp = e.target.value ? e.target.value : \"DEFALT | DEFAULT\";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeSupplier: result_explode[0],\r\n      namaSupplier: result_explode[1],\r\n    });\r\n  };\r\n\r\n  handleSubmit(data) {\r\n    var supp = data.kodeJenis\r\n      ? data.kodeJenis\r\n      : \"DEFAULT|DEFAULT|DEFAULT|DEFAULT\";\r\n    var split = supp.split(\"|\");\r\n    var simpan = [];\r\n    if (data.kodeJenis !== undefined) {\r\n      simpan = {\r\n        kode_kategori: data.kode_kategori,\r\n        kode_jenis: split[0],\r\n        kadar_cetak: (parseFloat(data.kadar) || 0).toString(),\r\n        kadar_beli: parseFloat(data.kadarTransaksi) || 0,\r\n        no_barcode: \"-\",\r\n        qty: data.qty || 1,\r\n        p: parseFloat(data.p) || 0,\r\n        k: parseFloat(data.k) || 0,\r\n        pkg: parseFloat(data.pkg) || 0,\r\n        gross: parseFloat(data.gross) || 0,\r\n        bruto: parseFloat(data.bruto) || 0,\r\n        netto: parseFloat(data.netto) || 0,\r\n        ongkos_rp: parseFloat(data.rp === undefined ? 0 : data.rp),\r\n        harga_jual: data.harga_jual === \"undefined\" ? 0 : data.harga_jual,\r\n      };\r\n    } else {\r\n      simpan = {\r\n        kode_kategori: \"-\",\r\n        kode_jenis: \"-\",\r\n        kadar_cetak: \"100\",\r\n        kadar_beli: 100,\r\n        no_barcode: \"-\",\r\n        qty: 1,\r\n        p: parseFloat(data.p) || 0,\r\n        k: parseFloat(data.k) || 0,\r\n        pkg: parseFloat(data.pkg) || 0,\r\n        gross: parseFloat(data.bruto) + parseFloat(data.pkg) || 0,\r\n        bruto: parseFloat(data.bruto) || 0,\r\n        netto: parseFloat(data.bruto) || 0,\r\n        ongkos_rp: parseFloat(data.rp === undefined ? 0 : data.rp) || 0,\r\n        harga_jual: data.harga_jual === \"undefined\" ? 0 : data.harga_jual || 0,\r\n      };\r\n    }\r\n\r\n    var array = JSON.parse(localStorage.getItem(\"TolakReturnCustomer\")) || [];\r\n    array.push(simpan);\r\n    localStorage.setItem(\"TolakReturnCustomer\", JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n    this.props.dispatch(getListTolakReturnCustomer());\r\n    this.props.dispatch(reset(\"TerimaSupplier\"));\r\n  }\r\n\r\n  returnSupplierSubmit() {\r\n    if (this.props.no_bon_selected === \"\") {\r\n      warning(\"Mohon isi nomor bon\");\r\n      return false;\r\n    } else if (this.props.tanggal_selected === \"\") {\r\n      warning(\"Mohon isi Tanggal\");\r\n      return false;\r\n    } else if (localStorage.getItem(\"TolakReturnCustomer\") === null) {\r\n      warning(\"Barang masih kosong, silahkan tambahkan barang\");\r\n      return false;\r\n    } else if (this.props.supplier_selected === \"\") {\r\n      warning(\"Mohon pilih Supplier\");\r\n      return false;\r\n    }\r\n    let data = JSON.parse(localStorage.getItem(\"TolakReturnCustomer\"));\r\n    let qty = data\r\n      .map((list) => parseFloat(list.qty))\r\n      .reduce((a, b) => a + b, 0);\r\n    let p = data.map((list) => parseFloat(list.p)).reduce((a, b) => a + b, 0);\r\n    let k = data.map((list) => parseFloat(list.k)).reduce((a, b) => a + b, 0);\r\n    let pkg = data\r\n      .map((list) => parseFloat(list.pkg))\r\n      .reduce((a, b) => a + b, 0);\r\n    let bruto = data\r\n      .map((list) => parseFloat(list.bruto))\r\n      .reduce((a, b) => a + b, 0);\r\n    let netto = data\r\n      .map((list) => parseFloat(list.netto))\r\n      .reduce((a, b) => a + b, 0);\r\n    let ongkos_rp = data\r\n      .map((list) => parseFloat(list.ongkos_rp))\r\n      .reduce((a, b) => a + b, 0);\r\n    let isi = {\r\n      no_tolak: this.props.noFaktur,\r\n      tanggal: this.props.tanggal_selected,\r\n      no_bon: this.props.no_bon_selected,\r\n      kode_customer: this.props.supplier_selected,\r\n      jenis_trx: \"RETUR\",\r\n      total_qty: qty,\r\n      total_p: p,\r\n      total_k: k,\r\n      total_pkg: pkg,\r\n      total_bruto: bruto,\r\n      total_netto: netto,\r\n      total_ongkos: ongkos_rp,\r\n      detail_barang: JSON.parse(localStorage.getItem(\"TolakReturnCustomer\")),\r\n    };\r\n    console.log(JSON.stringify(isi));\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"TolakReturnCustomer\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        ++i,\r\n        ticket.kode_jenis,\r\n        { content: ticket.kadar_cetak, styles: { halign: \"right\" } },\r\n        { content: ticket.qty, styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.p), styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.k), styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.pkg), styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.bruto), styles: { halign: \"right\" } },\r\n        { content: ticket.kadar_beli, styles: { halign: \"right\" } },\r\n        { content: formatGram(ticket.netto, 3), styles: { halign: \"right\" } },\r\n        { content: formatRp(ticket.ongkos_rp), styles: { halign: \"right\" } },\r\n        { content: formatRp(ticket.harga_jual), styles: { halign: \"right\" } },\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    const footer = [\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      {\r\n        content: table\r\n          .map((list) => parseFloat(list.qty))\r\n          .reduce((a, b) => a + b, 0),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      \"\",\r\n      \"\",\r\n      {\r\n        content: formatGram(\r\n          table.map((list) => parseFloat(list.pkg)).reduce((a, b) => a + b, 0)\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      {\r\n        content: formatGram(\r\n          table.map((list) => parseFloat(list.bruto)).reduce((a, b) => a + b, 0)\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      \"\",\r\n      {\r\n        content: formatGram(\r\n          table\r\n            .map((list) => parseFloat(list.netto))\r\n            .reduce((a, b) => a + b, 0),\r\n          3\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      {\r\n        content: formatRp(\r\n          table.map((list) => list.ongkos_rp).reduce((a, b) => a + b, 0)\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n      {\r\n        content: formatRp(\r\n          table\r\n            .map((list) => parseFloat(list.harga_jual))\r\n            .reduce((a, b) => a + b, 0)\r\n        ),\r\n        styles: { halign: \"right\" },\r\n      },\r\n    ];\r\n    // tableRows.push(footer);\r\n    console.log(JSON.stringify(tableRows));\r\n    var columTable = [\r\n      [\r\n        \"No\",\r\n        \"Kode Model\",\r\n        { content: \"Cap Kode\", styles: { halign: \"right\" } },\r\n        { content: \"Qty\", styles: { halign: \"right\" } },\r\n        { content: \"P\", styles: { halign: \"right\" } },\r\n        { content: \"K\", styles: { halign: \"right\" } },\r\n        { content: \"Bungkus\\n(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Berat\\n(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Harga\\n(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Murni\\n(Gr)\", styles: { halign: \"right\" } },\r\n        { content: \"Ongkos\\n(Rp)\", styles: { halign: \"right\" } },\r\n        { content: \"Harga\\nJual(Rp)\", styles: { halign: \"right\" } },\r\n      ],\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    AxiosMasterPost(\"trx-tolakan-customer/simpan\", isi)\r\n      .then((res) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Data Berhasil Ditambahkan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() =>\r\n            PrintNota(\r\n              \"No Bon\",\r\n              this.props.no_bon_selected,\r\n              \"Tanggal\",\r\n              this.props.tanggal_selected,\r\n              \"Customer\",\r\n              this.props.supplier_selected,\r\n              \"\",\r\n              \"\",\r\n              getUserID(),\r\n              getToday(),\r\n              \"\",\r\n              columTable,\r\n              \"Tolakan Return Customer\",\r\n              tableRows,\r\n              footer\r\n            )\r\n          )\r\n          .then(() => multipleDeleteLocal([\"TolakReturnCustomer\", \"noFaktur\"]))\r\n          .then(() => this.props.dispatch(reset(\"TolakReturnCustomer\")))\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() => this.props.dispatch(getListTolakReturnCustomer()))\r\n          .then(() => window.location.reload())\r\n          .then(() =>\r\n            this.setState({\r\n              noBon: \"\",\r\n              kodeSupplier: \"\",\r\n            })\r\n          )\r\n          .then(() => document.getElementById(\"myForm\").reset())\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: err?.response.data,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Tolakan Return Customer\" />\r\n              <div className=\"card-body\">\r\n                <ModalMasterData\r\n                  content={\r\n                    <Suspense\r\n                      fallback={<Skeleton width={\"100%\"} height={400} />}\r\n                    >\r\n                      <FormTolakanCustomer\r\n                        from=\"tolakan\"\r\n                        kodeSupplier={this.props.supplier_selected}\r\n                        onSubmit={(data) => this.handleSubmit(data)}\r\n                        noFaktur={this.props.noFaktur}\r\n                      />\r\n                    </Suspense>\r\n                  }\r\n                  title=\"Tambah Data Barang\"\r\n                />\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                      <form id=\"myForm\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-4\">\r\n                            <Field\r\n                              name=\"supplier\"\r\n                              component={renderFieldSelect}\r\n                              options={this.props.customer.map((list) => {\r\n                                let data = {\r\n                                  value: list.kode_customer,\r\n                                  name: list.nama_customer,\r\n                                };\r\n                                return data;\r\n                              })}\r\n                              type=\"text\"\r\n                              label=\"Customer\"\r\n                              placeholder=\"Masukan Customer\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-lg-4\">\r\n                            <Field\r\n                              name=\"tanggal\"\r\n                              component={renderField}\r\n                              type=\"date\"\r\n                              label=\"Tanggal\"\r\n                              placeholder=\"Masukan Tanggal\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-lg-4\">\r\n                            <Field\r\n                              name=\"no_bon\"\r\n                              normalize={(data) => data?.toUpperCase()}\r\n                              component={renderField}\r\n                              type=\"text\"\r\n                              label=\"Nomor Bon\"\r\n                              placeholder=\"Masukan Nomor Bon\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                    <div className=\"col-md-12 col-lg-12 mt-3\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6\"></div>\r\n                        <div className=\"col-lg-6\">\r\n                          <div className=\"text-right\">\r\n                            <button\r\n                            disabled={this.props.supplier_selected === undefined}\r\n                              className=\"btn btn-primary\"\r\n                              onClick={() => this.props.dispatch(showModal())}\r\n                            >\r\n                              Tambah Data\r\n                              <i class=\"fa fa-plus ml-3\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12 mt-3\">\r\n                      <GlobalTabel\r\n                        keyField=\"id\"\r\n                        data={this.props.listTolakanReturnCustomer}\r\n                        columns={this.state.columns}\r\n                      />\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          disabled={this.props.onSend}\r\n                          onClick={() => this.returnSupplierSubmit()}\r\n                        >\r\n                          {this.props.onSend ? (\r\n                            <span\r\n                              className=\"spinner-border spinner-border-sm mr-3\"\r\n                              aria-hidden=\"true\"\r\n                            ></span>\r\n                          ) : null}\r\n                          Selesai\r\n                <i class=\"fa fa-paper-plane ml-3\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nTolakReturnCustomer = reduxForm({\r\n  form: \"TolakReturnCustomer\",\r\n  enableReinitialize: true,\r\n})(TolakReturnCustomer);\r\nconst selector = formValueSelector(\"TolakReturnCustomer\");\r\nexport default connect((state) => {\r\n  const { tanggal, supplier, no_bon } = selector(\r\n    state,\r\n    \"tanggal\",\r\n    \"supplier\",\r\n    \"no_bon\"\r\n  );\r\n  return {\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    listTolakanReturnCustomer: state.provinsi.listTolakanReturnCustomer,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    onSend: state.provinsi.onSend,\r\n    supplier: state.provinsi.supplier,\r\n    customer: state.provinsi.customer,\r\n    tanggal_selected: tanggal,\r\n    supplier_selected: supplier,\r\n    no_bon_selected: no_bon,\r\n    initialValues: {\r\n      tanggal: getToday(),\r\n    },\r\n  };\r\n})(TolakReturnCustomer);\r\n"],"sourceRoot":""}