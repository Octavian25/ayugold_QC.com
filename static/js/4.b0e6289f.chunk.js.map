{"version":3,"sources":["FICO/Component/FormRongsok.jsx"],"names":["FormRongsok","props","state","kodeBarang","kodeJenis","namaJenis","kadarCetak","kadarBeli","columns","dataField","text","align","headerAlign","tampungRongsok","this","dispatch","getListRosok","data","result_explode","split","change","netto","filtered","rosok","filter","d","kode_kelompok","className","onSubmit","handleSubmit","htmlFor","name","component","renderFieldSelect","onChange","pilihBarang","options","map","list","value","kode_jenis","kadar_cetak","kadar_beli","nama_jenis","label","type","renderField","readOnly","setNetto","disabled","onSend","aria-hidden","keyField","search","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","bruto","kadarTransaksi","parseFloat","toFixed","provinsi"],"mappings":"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","file":"static/js/4.b0e6289f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { getListRosok } from \"../../actions/rosokAction\";\r\n\r\nclass FormRongsok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      kodeJenis: \"\",\r\n      namaJenis: \"\",\r\n      kadarCetak: \"\",\r\n      kadarBeli: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Model\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"kadar_transaksi\",\r\n          text: \"Harga (%)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n      ],\r\n      tampungRongsok: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListRosok());\r\n  }\r\n  pilihBarang(data) {\r\n    var supp = data ? data : \"DEFAULT | DEFAULT | DEFAULT | \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.props.change(\"kadar\", result_explode[1]);\r\n    this.props.change(\"kadarTransaksi\", result_explode[2]);\r\n  }\r\n\r\n  setNetto() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n  }\r\n\r\n  render() {\r\n    var filtered = this.props.rosok.filter(\r\n      (d) => d.kode_kelompok === \"RONGSOK\"\r\n    );\r\n    return (\r\n      <div className=\"col-lg-12\">\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4 mb-3\">\r\n              <label htmlFor=\"\">Kode Model</label>\r\n              <Field\r\n                name=\"kodeBarang\"\r\n                className=\"form-control\"\r\n                component={renderFieldSelect}\r\n                onChange={(data) => this.pilihBarang(data)}\r\n                options={filtered.map((list) => {\r\n                  let data = {\r\n                    value:\r\n                      list.kode_jenis +\r\n                      \"|\" +\r\n                      list.kadar_cetak +\r\n                      \"|\" +\r\n                      list.kadar_beli,\r\n                    name: list.nama_jenis,\r\n                  };\r\n                  return data;\r\n                })}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-8\"></div>\r\n            <div className=\"col-md-3 form-group\">\r\n              <Field\r\n                name=\"kadar\"\r\n                label=\"Kode Tukar\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 form-group\">\r\n              <Field\r\n                name=\"bruto\"\r\n                label=\"Berat (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                onChange={this.setNetto()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 form-group\">\r\n              <Field\r\n                name=\"kadarTransaksi\"\r\n                label=\"Harga (%)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 form-group\">\r\n              <Field\r\n                name=\"netto\"\r\n                label=\"Murni (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12 mb-3\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  type=\"submit\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Simpan\r\n                  <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {this.props.data ? (\r\n              <ToolkitProvider\r\n                keyField=\"id\"\r\n                data={this.props.data}\r\n                columns={this.state.columns}\r\n                search\r\n              >\r\n                {(props) => (\r\n                  <div className=\"form-group\">\r\n                    <BootstrapTable\r\n                      {...props.baseProps}\r\n                      striped\r\n                      hover\r\n                      condensed\r\n                      bordered={true}\r\n                      headerClasses=\"header-table\"\r\n                      pagination={paginationFactory()}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </ToolkitProvider>\r\n            ) : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormRongsok = reduxForm({\r\n  form: \"FormRongsok\",\r\n  enableReinitialize: true,\r\n})(FormRongsok);\r\nconst selector = formValueSelector(\"FormRongsok\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi } = selector(state, \"bruto\", \"kadarTransaksi\");\r\n  return {\r\n    netto: ((parseFloat(bruto) * parseFloat(kadarTransaksi)) / 100).toFixed(3),\r\n    rosok: state.provinsi.rosok,\r\n  };\r\n})(FormRongsok);\r\n"],"sourceRoot":""}