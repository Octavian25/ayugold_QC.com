{"version":3,"sources":["Transaksi/Component/FormTranskasiReparasi.jsx"],"names":["currencyMask","createNumberMask","prefix","suffix","locale","FormTransaksiReparasi","props","state","kodeBarang","this","dispatch","getListBarang","change","netto","noFaktur","gross","discGlobalGr","toFixed","data","customer","level_customer","localStorage","getItem","kode_customer","AxiosMasterGet","then","res","ongkos_reparasi","kode_kategori","catch","err","warning","setFocus","onSubmit","handleSubmit","className","name","label","type","readOnly","component","renderField","defaultValue","normalize","value","toUpperCase","String","KodeBarangList","renderFieldSelect","onChange","pilihBarang","options","filter","kode_kelompok","map","kode","kode_jenis","nama_jenis","width","height","htmlFor","id","onclick1","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","bruto","rp","provinsi","initialValues","discGlobalPr","p","k","pkg"],"mappings":"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","file":"static/js/155.9991142a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getListBarang } from \"../../actions/kodeBarangAction\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { setFocus } from \"../../helper\";\r\nimport { warning } from \"../../Alert\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\n\r\nclass FormTransaksiReparasi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      kodeBarang: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListBarang());\r\n    // getTimbangan(this.props.change);\r\n  }\r\n\r\n  onclick1() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n    this.props.change(\"gross\", this.props.gross);\r\n    this.props.change(\"discGlobalGr\", this.props.discGlobalGr);\r\n    this.props.change(\r\n      \"nettoDiscGlobalExt\",\r\n      (this.props.netto - this.props.discGlobalGr).toFixed(3)\r\n    );\r\n  }\r\n\r\n  pilihBarang(data) {\r\n    let customer = this.props.level_customer === \"LEVEL2\" ? localStorage.getItem(\"customer_1\") : this.props.kode_customer;\r\n    AxiosMasterGet(`/kelompok-harga/get/by-jenis-and-customer/${customer}&${data}&PUSAT`).then((res) => {\r\n      this.props.change(\"rp\", res.data?.ongkos_reparasi)\r\n      this.props.change(\"kodeKategori\", res.data?.kode_kategori)\r\n    }).catch((err) => warning(err.data))\r\n    setFocus(\"qty\")\r\n  }\r\n\r\n  setBruto() {\r\n    this.props.change(\"bruto\", localStorage.getItem(\"Timbangan\"));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-lg-12 d-none\">\r\n            <Field\r\n              name=\"noFaktur\"\r\n              label={this.props.noFaktur}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              component={renderField}\r\n              defaultValue={this.props.noFaktur}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            {String(this.props.KodeBarangList) !== \"\" ? (\r\n              <Field\r\n                name=\"kodeBarang\"\r\n                label=\"Kode Model\"\r\n                component={renderFieldSelect}\r\n                className=\"form-control\"\r\n                onChange={(data) => this.pilihBarang(data)}\r\n                options={this.props.KodeBarangList.filter(\r\n                  (data) => data.kode_kelompok === \"PERHIASAN\"\r\n                ).map((kode) => {\r\n                  let data = {\r\n                    value: kode.kode_jenis,\r\n                    name: kode.nama_jenis,\r\n                  };\r\n                  return data;\r\n                })}\r\n              />\r\n            ) : (\r\n              <Skeleton width={\"100%\"} height={50} />\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-2 col-lg-2\">\r\n            <label htmlFor=\"\">Qty</label>\r\n            <Field\r\n              name=\"qty\"\r\n              id=\"qty\"\r\n              component=\"input\"\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Berat (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onChange={this.onclick1()}\r\n              // onChange={this.setBruto()}\r\n              // onBlur={this.setBruto()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3 d-none\">\r\n            <Field\r\n              name=\"kodeKategori\"\r\n              label=\"Berat (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onChange={this.onclick1()}\r\n              // onChange={this.setBruto()}\r\n              // onBlur={this.setBruto()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <label htmlFor=\"\">Ongkos (Rp)</label>\r\n            <Field\r\n              name=\"rp\"\r\n              component=\"input\"\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormTransaksiReparasi = reduxForm({\r\n  form: \"FormTransaksiReparasi\",\r\n  enableReinitialize: true,\r\n})(FormTransaksiReparasi);\r\nconst selector = formValueSelector(\"FormTransaksiReparasi\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, rp } = selector(\r\n    state,\r\n    \"bruto\",\r\n    \"rp\"\r\n  );\r\n  return {\r\n    bruto : bruto,\r\n    rp: rp,\r\n    KodeBarangList: state.provinsi.kodeBarang,\r\n    initialValues: {\r\n      discGlobalPr: 0,\r\n      p: 0,\r\n      k: 0,\r\n      pkg: 0,\r\n      bruto: 0,\r\n    },\r\n  };\r\n})(FormTransaksiReparasi);\r\n"],"sourceRoot":""}