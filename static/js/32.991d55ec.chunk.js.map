{"version":3,"sources":["DataMaster/Component/FormKotaEdit.jsx","DataMaster/Kota.jsx","Validations/validationProvinsi.js","DataMaster/Component/AreaProvinsiKota.jsx"],"names":["FormKotaEdit","props","state","response","status","listProvinsi","AxiosMasterGet","then","res","setState","data","catch","err","console","log","kodenya","this","kode","namanya","nama","onSubmit","handleSubmit","className","Field","name","replace","type","normalize","value","toUpperCase","component","renderField","readOnly","label","renderFieldSelect","kode_ext","options","map","obj","kode_provinsi","nama_provinsi","id","disabled","onSend","aria-hidden","class","Component","reduxForm","form","validate","validationProvinsi","enableReinitialize","connect","initialValues","provinsi","editKota","KodeKota","kodeKota","NamaKota","namaKota","kodeProvinsi","defaultSorted","dataField","order","Kota","provinsi_array","columns","text","sort","headerStyle","width","csvExport","formatter","rowContent","row","onClick","dispatch","kode_kota","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","AxiosMasterDelete","hideModal","berhasil","getKotaList","gagal","data-tut","nama_kota","status_aktif","editModal","isi","progressSend","AxiosMasterPost","finishSend","LogData","handleReactive","statusAktif","AxiosMasterPut","reset","includes","reactive","showModal","isEdit","style","color","alert","role","data-dismiss","aria-label","TourGuide","tourConfig","ModalMasterData","content","handlerEdit","from","AreaProvinsiKota","handlerSubmit","HeaderCard","tambahModal","KotaList","Table","namaKey","error","src","notrespond","alt","height","kota","values","errors","KodeProvinsi","length","NamaProvinsi","KodeArea","NamaArea","KodeLokasi","NamaLokasi","listKota","isiNama","isikode","limit","String","placeholder","config","Error","editProvinsi"],"mappings":"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","file":"static/js/32.991d55ec.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validationProvinsi } from \"../../Validations/validationProvinsi\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { SkeletonLoading } from \"../../helper\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    initialValues: {\r\n      status: state.provinsi.editKota.status,\r\n      KodeKota: state.provinsi.editKota.kodeKota,\r\n      NamaKota: state.provinsi.editKota.namaKota,\r\n      kodeProvinsi: state.provinsi.editKota.kodeProvinsi,\r\n    },\r\n  };\r\n};\r\nclass FormKotaEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      status: \"AKTIF\",\r\n      listProvinsi: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"provinsi/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listProvinsi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    var kodenya = this.props.kode;\r\n    var namanya = this.props.nama;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <Field\r\n                name={kodenya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                readOnly={true}\r\n                label={this.props.kode}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"form-group\">\r\n                {this.state.listProvinsi !== [] ? (\r\n                  <Field\r\n                    component={renderFieldSelect}\r\n                    label={this.props.kode_ext}\r\n                    name=\"kodeProvinsi\"\r\n                    value={this.props.status}\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    options={this.state.listProvinsi.map((obj) => {\r\n                      var payload = {\r\n                        value: obj.kode_provinsi,\r\n                        name: obj.nama_provinsi,\r\n                      };\r\n                      return payload;\r\n                    })}\r\n                  ></Field>\r\n                ) : (\r\n                  <SkeletonLoading label={this.props.kode_ext} />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <Field\r\n                name={namanya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label={this.props.nama}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  id=\"simpan\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Selesai\r\n                <i class=\"fa fa-paper-plane ml-3\" aria-hidden=\"true\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormKotaEdit = reduxForm({\r\n  form: \"KotaEdit\", // a unique identifier for this form\r\n  validate: validationProvinsi, // <--- validation function given to redux-form\r\n  enableReinitialize: true,\r\n})(FormKotaEdit);\r\nexport default connect(maptoState, null)(FormKotaEdit);\r\n","import React, { Component } from \"react\";\r\nimport AreaProvinsiKota from \"./Component/AreaProvinsiKota\";\r\nimport Table from \"./Component/Table\";\r\nimport { editKota, getKotaList } from \"../actions/kotaAction\";\r\nimport { connect } from \"react-redux\";\r\nimport notrespond from \"../Images/500.svg\";\r\nimport Swal from \"sweetalert2\";\r\nimport FormKotaEdit from \"./Component/FormKotaEdit\";\r\nimport { reset } from \"redux-form\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { AxiosMasterDelete, AxiosMasterPost, AxiosMasterPut } from \"../Axios\";\r\nimport { berhasil, gagal, LogData, reactive } from \"../Alert\";\r\nimport { hideModal, showModal } from \"../actions/ModalAction\";\r\nimport ModalMasterData from \"./Component/ModalMasterData\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport TourGuide from \"../TourGuide\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\n\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      AxiosMasterDelete(\"kota/delete/\" + kode)\r\n        .then(() => dispatch(hideModal()))\r\n        .then((res) => berhasil(\"Data Berbasil Dihapus\"))\r\n        .then(() => dispatch(getKotaList()))\r\n        .catch((err) => gagal(\"Data Gagal Dihapus\"));\r\n    }\r\n  });\r\n}\r\n\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"kodeKota\",\r\n    order: \"asc\",\r\n  },\r\n];\r\nconst mapToState = (state) => {\r\n  return {\r\n    KotaList: state.provinsi.kota,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\n\r\nclass Kota extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      provinsi: [],\r\n      provinsi_array: [],\r\n      response: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"kode_kota\",\r\n          text: \"Kode Kota\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"15%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"nama_kota\",\r\n          text: \"Nama Kota\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"kode_provinsi\",\r\n          text: \"Provinsi\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() => hapus(this.props.dispatch, row.kode_kota)}\r\n                  data-tut=\"reactour_3\"\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-tut=\"reactour_4\"\r\n                  onClick={() =>\r\n                    this.props.dispatch(\r\n                      editKota(\r\n                        row.kode_kota,\r\n                        row.nama_kota,\r\n                        row.kode_provinsi,\r\n                        row.status_aktif,\r\n                        this.editModal()\r\n                      )\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                  EDIT\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getKotaList());\r\n  }\r\n\r\n  handlerSubmit(data) {\r\n    const isi = {\r\n      nama_kota: data.NamaKota,\r\n      kode_kota: data.KodeKota,\r\n      kode_provinsi: data.kodeProvinsi,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    console.log(isi);\r\n    AxiosMasterPost(\"kota/add\", isi)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berasil Ditambahkan ke Kota\")\r\n          .then(() => LogData(\"Data Berhasil Ditambahkan ke Kota\", data))\r\n          .then(() => this.props.dispatch(getKotaList()))\r\n      )\r\n      .catch((err) =>\r\n        this.handleReactive(err, data.KodeKota, {\r\n          nama_kota: data.NamaKota,\r\n          kode_provinsi: data.kodeProvinsi,\r\n        })\r\n      );\r\n  }\r\n  handlerEdit(data) {\r\n    const isi = {\r\n      statusAktif: data.status ? data.status : \"AKTIF\",\r\n      namaKota: data.NamaKota,\r\n      kodeKota: data.KodeKota,\r\n      kodeProvinsi: data.kodeProvinsi,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    console.log(isi);\r\n    AxiosMasterPut(\"kota/edit/\" + data.KodeKota, {\r\n      nama_kota: data.NamaKota,\r\n      kode_provinsi: data.kodeProvinsi,\r\n    })\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Dirubah\").then(() =>\r\n          this.props.dispatch(getKotaList())\r\n        )\r\n      )\r\n      .catch((err) =>\r\n        gagal(\"Data Gagal Ditambahkan ke Kota\")\r\n          .then(() => this.props.dispatch(getKotaList()))\r\n          .then(() => this.props.dispatch(reset(\"Provinsi\")))\r\n      );\r\n  }\r\n  handleReactive(err, kode, data) {\r\n    this.props.dispatch(hideModal());\r\n    let error = err.response.data;\r\n    let check = error.includes(\"deleted\");\r\n    check\r\n      ? reactive(err, kode, \"kota/reactive/\", data, \"kota/edit/\").then(() =>\r\n          this.props.dispatch(getKotaList())\r\n        )\r\n      : gagal(\"Data Gagal Ditambahkan\");\r\n  }\r\n  editModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({ isEdit: true });\r\n  }\r\n  tambahModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({ isEdit: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div id=\"notif_alert\" className={this.props.alert} role=\"alert\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n          <strong>Error - </strong> Tidak Bisa Mengambil Data\r\n        </div>\r\n        <TourGuide\r\n          tourConfig={[\r\n            `Untuk Menambahkan Data Kota, Tekan Tombol ini Dan Isi kolom yang disediakan`,\r\n            `Ini adalah data Kota yang sudah tersimpan`,\r\n            `Ini adalah tombol untuk menghapus data pada baris yang dipilih`,\r\n            `Ini adalah tombol untuk mengubah data pada baris yang dipilih`,\r\n          ]}\r\n        />\r\n        <ModalMasterData\r\n          content={\r\n            this.state.isEdit ? (\r\n              <FormKotaEdit\r\n                nama=\"Nama Kota\"\r\n                kode=\"Kode Kota\"\r\n                kode_ext=\"Nama Provinsi\"\r\n                onSubmit={(data) => this.handlerEdit(data)}\r\n                from=\"kota\"\r\n                onSend={this.props.onSend}\r\n              />\r\n            ) : (\r\n              <AreaProvinsiKota\r\n                nama=\"Nama Kota\"\r\n                kode=\"Kode Kota\"\r\n                kode_ext=\"Nama Provinsi\"\r\n                onSubmit={(data) => this.handlerSubmit(data)}\r\n                from=\"kota\"\r\n                onSend={this.props.onSend}\r\n              />\r\n            )\r\n          }\r\n          title={this.state.isEdit ? \"Edit Data Kota\" : \"Tambah Data Kota\"}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Data Kota\" />\r\n              <div className=\"card-body\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      name=\"simpan\"\r\n                      id=\"simpan\"\r\n                      type=\"button\"\r\n                      className=\"btn btn-info\"\r\n                      onClick={() => this.tambahModal()}\r\n                      data-tut=\"reactour_1\"\r\n                    >\r\n                      Tambah Data Kota\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-12\" data-tut=\"reactour_2\">\r\n                  {this.props.KotaList ? (\r\n                    <Table\r\n                      data={this.props.KotaList}\r\n                      columns={this.state.columns}\r\n                      defaultSorted={defaultSorted}\r\n                      namaKey=\"kodeKota\"\r\n                    />\r\n                  ) : (\r\n                    <div>\r\n                      {this.props.error ? (\r\n                        <div className=\"text-center\">\r\n                          <img\r\n                            src={notrespond}\r\n                            style={{ width: \"30%\" }}\r\n                            alt=\"ACTIVE\"\r\n                          />\r\n                          <br />\r\n                          <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton width={\"100%\"} height={180} />\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapToState, null)(Kota);\r\n","export const validationProvinsi = (values) => {\r\n  const errors = {}\r\n  // PROVINSI\r\n  if (!values.KodeProvinsi) {\r\n    errors.KodeProvinsi = 'Tidak Boleh kosong'\r\n  } else if (values.KodeProvinsi.length > 5) {\r\n    errors.KodeProvinsi = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if (!values.NamaProvinsi) {\r\n    errors.NamaProvinsi = 'Tidak Boleh kosong'\r\n  }\r\n  // Kota\r\n  if (!values.KodeKota) {\r\n    errors.KodeKota = 'Tidak Boleh kosong'\r\n  } else if (values.KodeKota.length > 5) {\r\n    errors.KodeKota = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if(!values.kodeProvinsi){\r\n    errors.kodeProvinsi = \"Tidak Boleh Kosong\"\r\n  } else if(values.kodeProvinsi === \"DEFAULT\"){\r\n    errors.kodeProvinsi = \"Silahkan Pilih Provinsi\"\r\n  }\r\n  if(!values.NamaKota){\r\n    errors.NamaKota = \"Tidak Boleh Kosong\"\r\n  }\r\n  // AREA\r\n  if (!values.KodeArea) {\r\n    errors.KodeArea = 'Tidak Boleh kosong'\r\n  } else if (values.KodeArea.length > 5) {\r\n    errors.KodeArea = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if(!values.kodeKota){\r\n    errors.kodeKota = \"Tidak Boleh Kosong\"\r\n  } else if(values.kodeKota === \"DEFAULT\"){\r\n    errors.kodeKota = \"Silahkan Pilih Provinsi\"\r\n  }\r\n  if(!values.NamaArea){\r\n    errors.NamaArea = \"Tidak Boleh Kosong\"\r\n  }\r\n\r\n  //LOKASI\r\n  if (!values.KodeLokasi) {\r\n    errors.KodeLokasi = 'Tidak Boleh kosong'\r\n  } else if (values.KodeLokasi.length > 5) {\r\n    errors.KodeLokasi = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if(!values.NamaLokasi){\r\n    errors.NamaLokasi = 'Tidak Boleh kosong'\r\n  }\r\n\r\n  return errors\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validationProvinsi } from \"../../Validations/validationProvinsi\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { LogData } from \"../../Alert\";\r\nimport { SkeletonLoading } from \"../../helper\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    limit: state.config.limit,\r\n    error: state.alert.Error,\r\n    editProvinsi: state.provinsi.editProvinsi,\r\n  };\r\n};\r\n\r\nclass AreaProvinsiKota extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      status: \"AKTIF\",\r\n      listProvinsi: [],\r\n      listKota: [],\r\n      isiNama: \"\",\r\n      isikode: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"provinsi/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listProvinsi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    AxiosMasterGet(\"kota/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKota: res.data,\r\n        })\r\n      )\r\n      .catch((err) => LogData(\"Error Get Data Kota\"));\r\n  }\r\n\r\n  render() {\r\n    var kodenya = this.props.kode;\r\n    var namanya = this.props.nama;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <Field\r\n                name={kodenya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                limit={5}\r\n                label={this.props.kode}\r\n              />\r\n            </div>\r\n            {this.props.from === \"kota\" ? (\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group\">\r\n                  {String(this.state.listProvinsi) !== \"\" ? (\r\n                    <Field\r\n                      component={renderFieldSelect}\r\n                      label={this.props.kode_ext}\r\n                      name=\"kodeProvinsi\"\r\n                      value={this.props.status}\r\n                      normalize={(value) => value && value.toUpperCase()}\r\n                      className=\"form-control\"\r\n                      options={this.state.listProvinsi.map((obj) => {\r\n                        var payload = {\r\n                          value: obj.kode_provinsi,\r\n                          name: obj.nama_provinsi,\r\n                        };\r\n                        return payload;\r\n                      })}\r\n                    ></Field>\r\n                  ) : (\r\n                    <SkeletonLoading label={this.props.kode_ext} />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {/* AREA */}\r\n            {this.props.from === \"area\" ? (\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group\">\r\n                  {String(this.state.listKota) !== \"\" ? (\r\n                    <Field\r\n                      component={renderFieldSelect}\r\n                      label={this.props.kode_ext}\r\n                      name={\r\n                        this.props.from === \"kota\" ? \"kodeProvinsi\" : \"kodeKota\"\r\n                      }\r\n                      value={this.props.status}\r\n                      normalize={(value) => value && value.toUpperCase()}\r\n                      className=\"form-control\"\r\n                      options={this.state.listKota.map((obj) => {\r\n                        var payload = {\r\n                          value: obj.kode_kota,\r\n                          name: obj.nama_kota,\r\n                        };\r\n                        return payload;\r\n                      })}\r\n                    ></Field>\r\n                  ) : (\r\n                    <SkeletonLoading label={this.props.kode_ext} />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {/* Lokasi */}\r\n            <div className=\"col-md-3\">\r\n              <Field\r\n                name={namanya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label={this.props.nama}\r\n              />\r\n            </div>\r\n            {this.props.from === \"area\" ? (\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kodePos\"\r\n                  component={renderField}\r\n                  type=\"number\"\r\n                  label=\"Kode Pos\"\r\n                  placeholder=\"Masukan Kode Pos\"\r\n                />\r\n              </div>\r\n            ) : null}\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  id=\"simpan\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Selesai\r\n                <i class=\"fa fa-paper-plane ml-3\" aria-hidden=\"true\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAreaProvinsiKota = reduxForm({\r\n  form: \"Provinsi\", // a unique identifier for this form\r\n  validate: validationProvinsi, // <--- validation function given to redux-form\r\n  enableReinitialize: true,\r\n})(AreaProvinsiKota);\r\nexport default connect(maptoState, null)(AreaProvinsiKota);\r\n"],"sourceRoot":""}