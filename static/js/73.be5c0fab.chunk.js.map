{"version":3,"sources":["DataMaster/Component/FormRekening.jsx","DataMaster/Component/FormRekeningEdit.jsx","DataMaster/DaftarRekening.jsx"],"names":["FormRekening","props","state","response","no_rekening","nama_bank","atas_nama","mata_uang","this","dispatch","getBankList","className","onSubmit","handleSubmit","Field","name","type","component","renderField","label","onChange","change","renderFieldSelect","options","listBank","map","data","value","kode_bank","split","normalize","toUpperCase","disabled","onSend","aria-hidden","Component","reduxForm","form","validate","validaitonRekening","enableReinitialize","connect","provinsi","bank","FormRekeningEdit","readOnly","initialValues","noRekening","editDataRekening","atasNama","namaBank","kodeBank","mataUang","defaultSorted","dataField","order","DaftarRekening","updateStatus","input","console","log","setState","getrekeningList","Rekening","columns","text","csvExport","formatter","rowContent","row","data-tut","onClick","kode","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","AxiosMasterDelete","hideModal","res","berhasil","LogData","catch","err","gagal","editRekening","edithModal","hasil","progressSend","AxiosMasterPost","finishSend","reset","handleReactive","includes","reactive","AxiosMasterPut","showModal","isEdit","style","color","id","alert","role","data-dismiss","aria-label","TourGuide","tourConfig","HeaderCard","ModalMasterData","content","handleEdit","tambahModal","daftarList","Table","namaKey","error","src","notrespond","width","alt","height","rekening"],"mappings":"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","file":"static/js/73.be5c0fab.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport validaitonRekening from \"../../Validations/validaitonRekening\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport {getBankList} from \"../../actions/bankAction\"\r\n\r\nclass FormRekening extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      no_rekening: \"\",\r\n      nama_bank: \"\",\r\n      atas_nama: \"\",\r\n      mata_uang: \"RUPIAH\",\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.dispatch(getBankList())\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12\">\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"noRekening\"\r\n                type=\"tel\"\r\n                component={renderField}\r\n                label=\"Nomor Rekening\"\r\n                onChange={() => this.props.change(\"mataUang\", \"DEFAULT\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"kodeBank\"\r\n                component={renderFieldSelect}\r\n                options={this.props.listBank.map((data) => {\r\n                  return {\r\n                    value : data.kode_bank + \"-\" + data.nama_bank,\r\n                    name : data.kode_bank\r\n                  }\r\n                })}\r\n                onChange={(data) => this.props.change(\"namaBank\", data.split(\"-\")[1])}\r\n                label=\"Kode Bank\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"namaBank\"\r\n                type=\"telp\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label=\"Nama Bank\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"atasNama\"\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label=\"Atas Nama\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-12 col-lg-12 mt-5\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Selesai\r\n                  <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormRekening = reduxForm({\r\n  form: \"DataRekening\",\r\n  validate: validaitonRekening,\r\n  enableReinitialize: true,\r\n})(FormRekening);\r\nexport default connect((state) => {\r\n  return {\r\n    listBank : state.provinsi.bank\r\n  }\r\n})(FormRekening);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport validaitonRekening from \"../../Validations/validaitonRekening\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { getBankList } from \"../../actions/bankAction\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    listBank : state.provinsi.bank,\r\n    initialValues: {\r\n      noRekening: state.provinsi.editDataRekening.noRekening,\r\n      atasNama: state.provinsi.editDataRekening.atasNama,\r\n      namaBank: state.provinsi.editDataRekening.namaBank,\r\n      kodeBank: state.provinsi.editDataRekening.kodeBank + \"-\" + state.provinsi.editDataRekening.namaBank,\r\n      mataUang: state.provinsi.editDataRekening.mataUang,\r\n    },\r\n  };\r\n};\r\nclass FormRekeningEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.dispatch(getBankList())\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12\">\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"noRekening\"\r\n                type=\"tel\"\r\n                component={renderField}\r\n                label=\"Nomor Rekening\"\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"kodeBank\"\r\n                component={renderFieldSelect}\r\n                options={this.props.listBank.map((data) => {\r\n                  return {\r\n                    value : data.kode_bank + \"-\" + data.nama_bank,\r\n                    name : data.kode_bank\r\n                  }\r\n                })}\r\n                onChange={(data) => this.props.change(\"namaBank\", data.split(\"-\")[1])}\r\n                label=\"Kode Bank\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"namaBank\"\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label=\"Nama Bank\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"atasNama\"\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label=\"Atas Nama\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-12 col-lg-12 mt-5\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Selesai\r\n                  <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormRekeningEdit = reduxForm({\r\n  form: \"FormRekeningEdit\",\r\n  validate: validaitonRekening,\r\n  enableReinitialize: true,\r\n})(FormRekeningEdit);\r\nexport default connect(maptoState, null)(FormRekeningEdit);\r\n","import React, { Component } from \"react\";\r\nimport FormRekening from \"./Component/FormRekening\";\r\nimport Table from \"./Component/Table\";\r\nimport { connect } from \"react-redux\";\r\nimport notrespond from \"../Images/500.svg\";\r\nimport { editRekening, getrekeningList } from \"../actions/rekeningAction\";\r\nimport Swal from \"sweetalert2\";\r\nimport FormRekeningEdit from \"./Component/FormRekeningEdit\";\r\nimport { reset } from \"redux-form\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { berhasil, gagal, LogData, reactive } from \"../Alert\";\r\nimport { AxiosMasterDelete, AxiosMasterPost, AxiosMasterPut } from \"../Axios\";\r\nimport { hideModal, showModal } from \"../actions/ModalAction\";\r\nimport ModalMasterData from \"./Component/ModalMasterData\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport TourGuide from \"../TourGuide\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\n\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      let data = {\r\n        data: {\r\n          noRekening: kode,\r\n        },\r\n      };\r\n      AxiosMasterDelete(\"rekening/delete/\" + kode)\r\n        .then(() => dispatch(hideModal()))\r\n        .then((res) =>\r\n          berhasil(\"Data Berhasil Dihapus!\")\r\n            .then(() => LogData(\"Data Berhasil Dihapus Dari Rekening\", data))\r\n            .then(() => dispatch(getrekeningList()))\r\n        )\r\n        .catch((err) => gagal(\"Data Gagal Dihapus!\"));\r\n    }\r\n  });\r\n}\r\n\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"nomorRekening\",\r\n    order: \"asc\",\r\n  },\r\n];\r\nconst maptoState = (state) => {\r\n  return {\r\n    daftarList: state.provinsi.rekening,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\n\r\nclass DaftarRekening extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Rekening: [],\r\n      response: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"no_rekening\",\r\n          text: \"Nomor Rekening\",\r\n        },\r\n        {\r\n          dataField: \"nama_bank\",\r\n          text: \"Nama Bank\",\r\n        },\r\n        {\r\n          dataField: \"atas_nama\",\r\n          text: \"Atas Nama\",\r\n        },\r\n\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  data-tut=\"reactour_3\"\r\n                  onClick={() => hapus(this.props.dispatch, row.no_rekening)}\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning\"\r\n                  data-tut=\"reactour_4\"\r\n                  onClick={() =>\r\n                    this.props.dispatch(\r\n                      editRekening(\r\n                        row.no_rekening,\r\n                        row.atas_nama,\r\n                        row.kode_bank,\r\n                        row.nama_bank,\r\n                        this.edithModal()\r\n                      )\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-edit mr-2\"></i>\r\n                  EDIT\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getrekeningList());\r\n  }\r\n\r\n  updateStatus = (input) => {\r\n    console.log(input);\r\n    this.setState({\r\n      response: input,\r\n    });\r\n    this.props.dispatch(getrekeningList());\r\n  };\r\n\r\n  handleSubmit(hasil) {\r\n    let data = {\r\n      atas_nama: hasil.atasNama,\r\n      kode_bank: hasil.kodeBank.split(\"-\")[0],\r\n      no_rekening: hasil.noRekening,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPost(\"rekening/add\", data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Disimpan!\")\r\n          .then(() => LogData(\"Data Berhasil Disimpan Di Rekening\", data))\r\n          .then(() => this.props.dispatch(getrekeningList()))\r\n          .then(() => this.props.dispatch(reset(\"DataRekening\")))\r\n      )\r\n      .catch((err) =>\r\n        this.handleReactive(err, hasil.noRekening, {\r\n          atas_nama: hasil.atasNama,\r\n          nama_bank: hasil.namaBank,\r\n        })\r\n      );\r\n  }\r\n  handleReactive(err, kode, data) {\r\n    this.props.dispatch(hideModal());\r\n    let error = err.response.data;\r\n    let check = error.includes(\"deleted\");\r\n    check\r\n      ? reactive(\r\n          err,\r\n          kode,\r\n          \"rekening/reactive/\",\r\n          data,\r\n          \"rekening/edit/\"\r\n        ).then(() => this.props.dispatch(getrekeningList()))\r\n      : gagal(\"Data Gagal Ditambahkan\");\r\n  }\r\n  handleEdit(hasil) {\r\n    let data = {\r\n      atas_nama: hasil.atasNama,\r\n      kode_bank: hasil.kodeBank.split(\"-\")[0],\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPut(\"rekening/edit/\" + hasil.noRekening, data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Diubah!\")\r\n          .then(() => LogData(\"Data Berhasil Diubah Di Rekneing\", data))\r\n          .then(() => this.props.dispatch(getrekeningList()))\r\n      )\r\n      .catch((err) =>\r\n        gagal(\"Data Gagal Diubah!\").then(() =>\r\n          LogData(\"Data Gagal Diubah di rekening\", data, err)\r\n        )\r\n      );\r\n  }\r\n  tambahModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  edithModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div id=\"notif_alert\" className={this.props.alert} role=\"alert\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n          <strong>Error - </strong> Tidak Bisa Mengambil Data\r\n        </div>\r\n        <TourGuide\r\n          tourConfig={[\r\n            `Untuk Menambahkan Data Rekening Bank, Tekan Tombol ini Dan Isi kolom yang disediakan`,\r\n            `Ini adalah data Rekening Bank yang sudah tersimpan`,\r\n            `Ini adalah tombol untuk menghapus data pada baris yang dipilih`,\r\n            `Ini adalah tombol untuk mengubah data pada baris yang dipilih`,\r\n          ]}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Data Rekening\" />\r\n              <div className=\"card-body\">\r\n                <ModalMasterData\r\n                  content={\r\n                    this.state.isEdit ? (\r\n                      <FormRekeningEdit\r\n                        updateStatus={this.updateStatus}\r\n                        onSubmit={(data) => this.handleEdit(data)}\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    ) : (\r\n                      <FormRekening\r\n                        updateStatus={this.updateStatus}\r\n                        onSubmit={(data) => this.handleSubmit(data)}\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    )\r\n                  }\r\n                  title={\r\n                    this.state.isEdit\r\n                      ? \"Edit Data Rekening\"\r\n                      : \"Tambah Data Rekening\"\r\n                  }\r\n                />\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      name=\"simpan\"\r\n                      id=\"simpan\"\r\n                      type=\"button\"\r\n                      className=\"btn btn-info\"\r\n                      onClick={() => this.tambahModal()}\r\n                      data-tut=\"reactour_1\"\r\n                    >\r\n                      Tambah Data Rekening\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-12\" data-tut=\"reactour_2\">\r\n                  {this.props.daftarList ? (\r\n                    <Table\r\n                      data={this.props.daftarList}\r\n                      columns={this.state.columns}\r\n                      defaultSorted={defaultSorted}\r\n                      namaKey=\"noRekening\"\r\n                    />\r\n                  ) : (\r\n                    <div>\r\n                      {this.props.error ? (\r\n                        <div className=\"text-center\">\r\n                          <img\r\n                            src={notrespond}\r\n                            style={{ width: \"30%\" }}\r\n                            alt=\"ERROR GET DATA\"\r\n                          />\r\n                          <br />\r\n                          <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton width={\"100%\"} height={180} />\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(DaftarRekening);\r\n"],"sourceRoot":""}