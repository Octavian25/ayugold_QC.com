{"version":3,"sources":["FICO/Component/FormMutasiCashDanBank.jsx","FICO/MutasiCashDanBank.jsx"],"names":["currencyMask","createNumberMask","prefix","suffix","locale","renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","server","process","FormMutasiCashDanBank","props","state","listKategori","listRekening","date","Date","this","change","getFullYear","getMonth","getDate","Axios","get","then","res","setState","data","catch","err","console","log","onSubmit","handleSubmit","Field","name","value","thisDay","component","normalize","toUpperCase","key","map","list","noRekening","atasNama","disabled","onSend","aria-hidden","Component","reduxForm","form","enableReinitialize","connect","initialValues","tanggal","getToday","serverNonMaster","REACT_APP_BACKEND_URL_NON_MASTER","MutasiCashDanBank","formatedDate","dispatch","getUUID","undefined","jumlah","asal","tujuan","isi","alatBayarTunai","tunaiKurs","tunaiRp","parseFloat","tunaiNetto","tunaiTipe","alatBayarTrf","transferTanggalJanji","transferRp","transferTipe","accFrom","accTo","transferKurs","transferNetto","noBon","noFaktur","tipeFaktur","keterangan","footerDocument","inputBy","username","progressSend","tableRows","ticketData","toLocaleString","push","columTable","post","Swal","fire","position","icon","text","showConfirmButton","timer","finishSend","localStorage","removeItem","PrintNota","reset","HeaderCard","title","provinsi"],"mappings":"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","file":"static/js/84.a0f87b5d.chunk.js","sourcesContent":["import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { getToday } from \"../../GlobalComponent/function\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nclass FormMutasiCashDanBank extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listKategori: [],\r\n      listRekening: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const date = new Date();\r\n    this.props.change(\r\n      \"tanggal\",\r\n      `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`\r\n    );\r\n    Axios.get(server + \"parameteruangs\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKategori: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    Axios.get(server + \"banks\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listRekening: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"tanggal\"\r\n              label=\"Tanggal\"\r\n              type=\"date\"\r\n              value={this.state.thisDay}\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <label htmlFor=\"\">Asal</label>\r\n            <Field\r\n              name=\"asal\"\r\n              component=\"select\"\r\n              value=\"CASH\"\r\n              className=\"form-control\"\r\n            >\r\n              <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                silahkan pilih\r\n              </option>\r\n              <option value=\"CASH\" key=\"CASH\">\r\n                CASH\r\n              </option>\r\n              {/* <option value=\"CASH KECIL\" key=\"CASH KECIL\">\r\n                CASH KECIL\r\n              </option> */}\r\n              {this.state.listRekening.map((list) => (\r\n                <option value={list.noRekening} key={list.noRekening}>\r\n                  {list.atasNama}\r\n                </option>\r\n              ))}\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-md-1 text-center\">\r\n            <label htmlFor=\"\" className=\"text-white\">\r\n              .\r\n            </label>\r\n            <h3>\r\n              <i className=\"fa fa-exchange-alt\"></i>\r\n            </h3>\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <label htmlFor=\"\">Tujuan</label>\r\n            <Field\r\n              name=\"tujuan\"\r\n              component=\"select\"\r\n              value=\"CASH\"\r\n              className=\"form-control\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            >\r\n              <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                silahkan pilih\r\n              </option>\r\n              <option value=\"CASH\" key=\"CASH\">\r\n                CASH\r\n              </option>\r\n              {/* <option value=\"CASH KECIL\" key=\"CASH KECIL\">\r\n                CASH KECIL\r\n              </option> */}\r\n              {this.state.listRekening.map((list) => (\r\n                <option value={list.noRekening} key={list.noRekening}>\r\n                  {list.atasNama}\r\n                </option>\r\n              ))}\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-4\">\r\n            <label htmlFor=\"\">Jumlah</label>\r\n            <Field\r\n              name=\"jumlah\"\r\n              component=\"input\"\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-8 col-lg-8\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              type=\"text\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\"\r\n                disabled={this.props.onSend}\r\n              >\r\n                {this.props.onSend ? (\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm mr-3\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                ) : null}\r\n                Simpan\r\n                <i className=\"fa fa-paper-plane ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormMutasiCashDanBank = reduxForm({\r\n  form: \"FormMutasiCashDanBank\",\r\n  enableReinitialize: true,\r\n})(FormMutasiCashDanBank);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues : {\r\n      tanggal : getToday()\r\n    }\r\n  }\r\n})(FormMutasiCashDanBank);\r\n","import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport FormMutasiCashDanBank from \"./Component/FormMutasiCashDanBank\";\r\nimport { connect } from \"react-redux\";\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\nimport { reset } from \"redux-form\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\n\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nconst maptostate = (state) => {\r\n  return {\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nclass MutasiCashDanBank extends Component {\r\n  constructor(props) {\r\n    var date = new Date();\r\n    var formatedDate = `${date.getFullYear()}-${\r\n      date.getMonth() + 1\r\n    }-${date.getDate()}`;\r\n    super(props);\r\n    this.state = {\r\n      thisDay: formatedDate,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getUUID());\r\n  }\r\n  handleSubmit(data) {\r\n    if (data.tanggal === undefined) {\r\n      warning(\"Mohon isi tanggal\");\r\n      return false;\r\n    } else if (data.jumlah === undefined) {\r\n      warning(\"Mohon isi Jumlah\");\r\n      return false;\r\n    } else if (data.asal === undefined) {\r\n      warning(\"Mohon isi Asal\");\r\n      return false;\r\n    } else if (data.tujuan === undefined) {\r\n      warning(\"Mohon isi Tujuan\");\r\n      return false;\r\n    }\r\n    const isi = {\r\n      alatBayarTunai: [\r\n        {\r\n          tunaiKurs: 0,\r\n          tunaiRp: parseFloat(data.jumlah),\r\n          tunaiNetto: 0,\r\n          tunaiTipe: \"-\",\r\n        },\r\n      ],\r\n      alatBayarTrf: [\r\n        {\r\n          transferTanggalJanji: \"-\",\r\n          transferRp: parseFloat(data.jumlah),\r\n          transferTipe: \"-\",\r\n          accFrom: data.asal,\r\n          accTo: data.tujuan,\r\n          transferKurs: 0,\r\n          transferNetto: 0,\r\n        },\r\n      ],\r\n      noBon: this.props.noFaktur,\r\n      tanggal: data.tanggal,\r\n      noFaktur: this.props.noFaktur,\r\n      tipeFaktur: \"AMBIL UANG TUNAI\",\r\n      keterangan: data.keterangan,\r\n      footerDocument: {\r\n        inputBy: this.props.username, //INPUT BY DEFAULT\r\n      },\r\n    };\r\n    console.log(isi);\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    // for each ticket pass all its data into an array\r\n    const ticketData = [\r\n      \"1\",\r\n      data.tanggal,\r\n      parseFloat(data.jumlah).toLocaleString(\"id-ID\"),\r\n      data.asal,\r\n      data.tujuan,\r\n      parseFloat(data.jumlah).toLocaleString(\"id-ID\"),\r\n      data.keterangan,\r\n    ];\r\n    // push each tickcet's info into a row\r\n    tableRows.push(ticketData);\r\n    console.log(tableRows);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Tanggal Janji\",\r\n      \"Transfer nominal\",\r\n      \"Nomor Rekening Asal\",\r\n      \"Nomor Rekening Tujuan\",\r\n      \"Transfer Netto\",\r\n      \"Keperluan\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    Axios.post(serverNonMaster + \"fico/dc/fico\", isi)\r\n      .then((res) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Transaksi Berhasil\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"Tanggal\",\r\n              data.tanggal,\r\n              \"\",\r\n              \"\",\r\n              \"Nomor Bon\",\r\n              this.props.noFaktur,\r\n              \"\",\r\n              \"\",\r\n              \"ADMIN\",\r\n              data.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"MUTASI CASH DAN BANK\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => this.props.dispatch(reset(\"FormMutasiCashDanBank\")))\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text:\r\n            \"Sepertinya terjadi kesalahan, silahkan check koneksi anda dan ulangi lagi transaksi\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          <div className=\"card\">\r\n            <HeaderCard title=\"Mutasi Cash Dan Bank\" />\r\n            <div className=\"card-body\">\r\n              <div className=\"col-lg-12\">\r\n                <FormMutasiCashDanBank\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                  onSend={this.props.onSend}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(MutasiCashDanBank);\r\n"],"sourceRoot":""}