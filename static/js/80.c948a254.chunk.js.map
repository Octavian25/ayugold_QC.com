{"version":3,"sources":["Supervisory/CetakUlangForm/FormLaporanTerimaMasak.jsx","Images/500.svg"],"names":["SearchBar","Search","ExportCSVButton","CSVExport","serverNonMaster","process","REACT_APP_BACKEND_URL_NON_MASTER","FormLaporanTerimaMasak","props","inputChange","input","e","setState","target","value","pilihSupplier","result_explode","split","kodeSupplier","namaSupplier","state","listSupplier","columns","dataField","text","align","headerAlign","csvExport","formatter","rowContent","row","className","onClick","getDetails","noFaktur","data","tanggal","hasilDataGet","jenisMasak","this","dispatch","getsupplierList","Axios","get","server","then","res","catch","err","alert","getUUID","getCetakUlang","faktur","setLocal","gagal","localStorage","setItem","JSON","stringify","barangDetails","print","noBon","tableRows","table","parse","getItem","forEach","ticket","i","ticketData","kodeJenis","bruto","brutoTerima","kadarTransaksi","netto","nettoTerima","nettoSelisih","push","sumBruto","map","list","reduce","a","b","sumNettoTerima","sumNettoSelisih","sum","parseFloat","toFixed","console","log","PrintNota","params","tglFrom","tglTo","to","type","aria-hidden","title","htmlFor","id","name","defaultValue","startingDate","onChange","key","caridata","bootstrap4","keyField","search","searchProps","placeholder","style","margin","baseProps","headerClasses","striped","hover","bordered","pagination","paginationFactory","csvProps","error","src","notrespond","width","alt","height","Component","connect","module","exports"],"mappings":"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","file":"static/js/80.c948a254.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getCetakUlang } from \"../../actions/cetakUlangAction\";\r\nimport { getUUID } from \"../../actions/fakturAction\";\r\nimport { getsupplierList } from \"../../actions/supplierAction\";\r\nimport Axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport notrespond from \"../../Images/500.svg\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { gagal } from \"../../Alert\";\r\nimport PrintNota from \"../../Stocking/Component/PrintNota\";\r\nimport HeaderCard from \"../../HeaderCard\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nclass FormLaporanTerimaMasak extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listSupplier: [],\r\n      columns: [\r\n        {\r\n          dataField: \"tanggal\",\r\n          text: \"Tanggal\",\r\n        },\r\n        {\r\n          dataField: \"noBon\",\r\n          text: \"Nomor Bon\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto(Gr)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"rp\",\r\n          text: \"Ongkos(Rp)\",\r\n          align: \"right\",\r\n          headerAlign: \"right\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-warning mr-2\"\r\n                  onClick={() => this.getDetails(row.noFaktur)}\r\n                >\r\n                  <i className=\"fa fa-print mr-1\"></i>\r\n                  Print\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      data: [\r\n        {\r\n          tanggal: \"2020-11-12\",\r\n        },\r\n      ],\r\n      hasilDataGet: [],\r\n      jenisMasak: \"KIRIM MASAK\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getsupplierList());\r\n    Axios.get(server + \"suppliers\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listSupplier: res.data,\r\n        })\r\n      )\r\n      .catch((err) => alert(err));\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getCetakUlang());\r\n  }\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n  getDetails(faktur) {\r\n    if (this.state.jenisMasak === \"KIRIM MASAK\") {\r\n      Axios.get(\r\n        serverNonMaster + \"item/dc/kirimmasak/detail?noFaktur=\" + faktur\r\n      )\r\n        .then((res) => this.setLocal(res.data))\r\n        .catch(() =>\r\n          gagal(\"Sepertinya ada kesalahan, Mohon Periksa Koneksi anda\")\r\n        );\r\n    } else {\r\n      Axios.get(\r\n        serverNonMaster + \"item/dc/terimamasak/detail?noFaktur=\" + faktur\r\n      )\r\n        .then((res) => this.setLocal(res.data))\r\n        .catch(() =>\r\n          gagal(\"Sepertinya ada kesalahan, Mohon Periksa Koneksi anda\")\r\n        );\r\n    }\r\n  }\r\n  setLocal(data) {\r\n    localStorage.setItem(\"PrintMasak\", JSON.stringify(data.barangDetails));\r\n    this.print(data.tanggal, data.noBon);\r\n  }\r\n  print(tanggal, noBon) {\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"PrintMasak\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        i++,\r\n        ticket.kodeJenis,\r\n        this.state.jenisMasak === \"KIRIM MASAK\"\r\n          ? ticket.bruto\r\n          : ticket.brutoTerima,\r\n        ticket.kadarTransaksi,\r\n        this.state.jenisMasak === \"KIRIM MASAK\"\r\n          ? ticket.netto\r\n          : ticket.nettoTerima,\r\n        this.state.jenisMasak === \"KIRIM MASAK\" ? null : ticket.nettoSelisih,\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    var sumBruto = table\r\n      .map((list) =>\r\n        this.state.jenisMasak === \"KIRIM MASAK\" ? list.bruto : list.brutoTerima\r\n      )\r\n      .reduce((a, b) => a + b);\r\n    var sumNettoTerima = table\r\n      .map((list) =>\r\n        this.state.jenisMasak === \"KIRIM MASAK\" ? list.netto : list.nettoTerima\r\n      )\r\n      .reduce((a, b) => a + b);\r\n    var sumNettoSelisih = table\r\n      .map((list) => list.nettoSelisih)\r\n      .reduce((a, b) => a + b);\r\n    const sum = [\r\n      \"\",\r\n      \"\",\r\n      parseFloat(sumBruto).toFixed(3),\r\n      \"\",\r\n      parseFloat(sumNettoTerima).toFixed(3),\r\n      this.state.jenisMasak === \"KIRIM MASAK\"\r\n        ? null\r\n        : parseFloat(sumNettoSelisih).toFixed(3),\r\n    ];\r\n    tableRows.push(sum);\r\n    console.log(tableRows);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kode Jenis\",\r\n      \"Bruto(Gr)\",\r\n      \"Kadar\",\r\n      \"Netto(Gr)\",\r\n      \"Selisih(Gr)\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    PrintNota(\r\n      \"Tanggal\",\r\n      tanggal,\r\n      \"\",\r\n      \"\",\r\n      \"No Faktur\",\r\n      noBon,\r\n      \"\",\r\n      \"\",\r\n      \"ADMIN\",\r\n      tanggal,\r\n      \"\",\r\n      columTable,\r\n      this.state.jenisMasak === \"TERIMA MASAK\"\r\n        ? \"BUKTI TERIMA MASAK\"\r\n        : \"BUKTI KIRIM MASAK\",\r\n      tableRows\r\n    );\r\n  }\r\n  pilihSupplier = (input) => (e) => {\r\n    var supp = e.target.value ? e.target.value : \"DEFALT | DEFAULT\";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeSupplier: result_explode[0],\r\n      namaSupplier: result_explode[1],\r\n    });\r\n  };\r\n\r\n  caridata() {\r\n    console.log(\"PENCARIAN....\");\r\n    if (this.state.jenisMasak === \"KIRIM MASAK\") {\r\n      Axios.get(serverNonMaster + \"item/dc/kirimmasak/heads\", {\r\n        params: {\r\n          tglFrom: this.state.tglFrom,\r\n          tglTo: this.state.tglTo,\r\n          kodeSupplier: this.state.kodeSupplier,\r\n        },\r\n      })\r\n        .then((res) =>\r\n          this.setState({\r\n            hasilDataGet: res.data,\r\n          })\r\n        )\r\n        .catch(() => gagal(\"Data Kosong\"));\r\n    } else {\r\n      Axios.get(serverNonMaster + \"item/dc/terimamasak/heads\", {\r\n        params: {\r\n          tglFrom: this.state.tglFrom,\r\n          tglTo: this.state.tglTo,\r\n          kodeSupplier: this.state.kodeSupplier,\r\n        },\r\n      })\r\n        .then((res) =>\r\n          this.setState({\r\n            hasilDataGet: res.data,\r\n          })\r\n        )\r\n        .catch(() => gagal(\"Data Kosong\"));\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid\">\r\n          <ol className=\"breadcrumb mb-2\">\r\n            <Link to=\"/cetakUlangBukti\">\r\n              <button type=\"button\" className=\"btn btn-secondary\">\r\n                <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i>{\" \"}\r\n                Back\r\n              </button>\r\n            </Link>\r\n          </ol>\r\n          <div className=\"card\">\r\n            <HeaderCard title=\"Cetak Ulang Bukti Masak\" />\r\n            <div className=\"card-body\">\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\">Tanggal Awal</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"tanggal\"\r\n                    name=\"tanggalAwal\"\r\n                    className=\"form-control\"\r\n                    defaultValue={this.state.startingDate}\r\n                    onChange={this.inputChange(\"tglFrom\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-4\">\r\n                  <div className=\"text-center\">\r\n                    <i className=\"fas fa-exchange-alt\"></i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\">Tanggal Akhir</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"tanggal\"\r\n                    name=\"tanggalAkhir\"\r\n                    className=\"form-control\"\r\n                    defaultValue={this.state.startingDate}\r\n                    onChange={this.inputChange(\"tglTo\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4 mt-3\">\r\n                  <label htmlFor=\"\">Jenis Masak</label>\r\n                  <select\r\n                    id=\"jenisMasak\"\r\n                    name=\"jenisMasak\"\r\n                    className=\"form-control\"\r\n                    onChange={this.inputChange(\"jenisMasak\")}\r\n                  >\r\n                    <option value=\"KIRIM MASAK\" key=\"KIRIM MASAK\">\r\n                      KIRIM MASAK\r\n                    </option>\r\n                    <option value=\"TERIMA MASAK\" key=\"TERIMA MASAK\">\r\n                      TERIMA MASAK\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col-md-12 col-lg-12 mt-3\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-6 col-md-6\">\r\n                      <div className=\"text-left\">\r\n                        {/* <Link to=\"/ViewPDF\">\r\n                              <button className=\"btn btn-primary\" type=\"button\">\r\n                                PDF\r\n                              </button>\r\n                            </Link> */}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6 col-md-6\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => this.caridata()}\r\n                        >\r\n                          <i className=\"fa fa-search mr-1\"></i>\r\n                          Cari Data\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      {this.state.hasilDataGet ? (\r\n                        <ToolkitProvider\r\n                          bootstrap4\r\n                          keyField={this.state.hasilDataGet}\r\n                          data={this.state.hasilDataGet}\r\n                          columns={this.state.columns}\r\n                          search\r\n                        >\r\n                          {(props) => (\r\n                            <div className=\"col-lg-12 col-md-12 mt-5\">\r\n                              <div className=\"text-right\">\r\n                                <SearchBar\r\n                                  {...props.searchProps}\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"Tuliskan Kode / Nama\"\r\n                                  style={{ margin: 0 }}\r\n                                />\r\n                              </div>\r\n                              <BootstrapTable\r\n                                {...props.baseProps}\r\n                                headerClasses=\"header-table\"\r\n                                striped\r\n                                hover\r\n                                bordered={true}\r\n                                pagination={paginationFactory()}\r\n                              />\r\n                              <ExportCSVButton\r\n                                {...props.csvProps}\r\n                                className=\"btn btn-primary\"\r\n                              >\r\n                                Export CSV\r\n                              </ExportCSVButton>\r\n                            </div>\r\n                          )}\r\n                        </ToolkitProvider>\r\n                      ) : (\r\n                        <div>\r\n                          {this.props.error ? (\r\n                            <div className=\"text-center\">\r\n                              <img\r\n                                src={notrespond}\r\n                                style={{ width: \"30%\" }}\r\n                                alt=\"NOT RESPOND\"\r\n                              />\r\n                              <br />\r\n                              <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                            </div>\r\n                          ) : (\r\n                            <Skeleton width=\"100%\" height={180} />\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(FormLaporanTerimaMasak);\r\n","module.exports = __webpack_public_path__ + \"static/media/500.c22f1e39.svg\";"],"sourceRoot":""}