{"version":3,"sources":["Validations/validationTerimaSupplier.js","Totalan/Element/FormModalTransaksiLM.jsx"],"names":["validationTerimaSupplier","value","errors","kodeJenis","pkg","p","k","bruto","gross","currencyMask","createNumberMask","prefix","suffix","locale","renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","FormModalTransaksiLM","props","pilihBarang","e","result_explode","target","split","setState","namaJenis","kadarCetak","kadarBeli","onclick1","bind","state","kodeBarang","DataSupplier","kode_barang","keterangan","kadar","P","K","bungkus","berat","harga","murni","ongkos","status","axios","get","server","then","res","data","catch","err","console","log","getTimbangan","this","change","netto","noFaktur","totalHargaLM","toFixed","onSubmit","handleSubmit","name","component","defaultValue","normalize","toUpperCase","onChange","onBlur","setKadar","key","map","kode","style","from","visibility","setHargaLM","disabled","submitting","Component","reduxForm","form","validate","enableReinitialize","selector","formValueSelector","connect","kadarTransaksi","parseFloat"],"mappings":"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","file":"static/js/12.54a0425c.chunk.js","sourcesContent":["const validationTerimaSupplier = (value) => {\r\n  const errors = {};\r\n  if (!value.kodeJenis) {\r\n    errors.kodeJenis = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.pkg) {\r\n    errors.pkg = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.p) {\r\n    errors.p = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.k) {\r\n    errors.k = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.bruto) {\r\n    errors.bruto = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.gross) {\r\n    errors.gross = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validationTerimaSupplier;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validationTerimaSupplier from \"../../Validations/validationTerimaSupplier\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { getTimbangan } from \"../../GetTimbangan\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\n\r\nclass FormModalTransaksiLM extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onclick1 = this.onclick1.bind(this);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      DataSupplier: [],\r\n      kode_barang: \"\",\r\n      keterangan: \"INI KETERANGAN\",\r\n      kadar: \"\",\r\n      P: \"\",\r\n      K: \"\",\r\n      bungkus: \"\",\r\n      berat: \"\",\r\n      harga: \"\",\r\n      murni: \"\",\r\n      ongkos: \"\",\r\n      status: \"\",\r\n      kadarCetak: \"\",\r\n      kadarBeli: \"\",\r\n      namaJenis: \"\",\r\n      kodeJenis: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(server + \"subcategorys2?kodeKelompok=CIOK\")\r\n      .then((res) =>\r\n        this.setState({\r\n          kodeBarang: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    getTimbangan(this.props.change);\r\n  }\r\n\r\n  onclick1() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n    this.props.change(\"gross\", this.props.gross);\r\n  }\r\n\r\n  pilihBarang = (input) => (e) => {\r\n    var supp = e.target.value\r\n      ? e.target.value\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      namaJenis: result_explode[1],\r\n      kadarCetak: result_explode[2],\r\n      kadarBeli: result_explode[3],\r\n    });\r\n  };\r\n\r\n  setKadar() {\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarBeli);\r\n  }\r\n  setHargaLM() {\r\n    var harga = this.props.totalHargaLM ? this.props.totalHargaLM : 0;\r\n    var netto = this.props.netto ? this.props.netto : 0;\r\n    this.props.change(\"totalHargaLM\", (harga * netto).toFixed(3));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-lg-12 d-none\">\r\n            <Field\r\n              name=\"noFaktur\"\r\n              label={this.props.noFaktur}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              component={renderField}\r\n              defaultValue={this.props.noFaktur}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <label htmlFor=\"\">Kode Model</label>\r\n            <Field\r\n              name=\"kodeJenis\"\r\n              component=\"select\"\r\n              className=\"form-control\"\r\n              onChange={this.pilihBarang()}\r\n              onBlur={this.setKadar()}\r\n            >\r\n              <option\r\n                value=\"DEFAULT | DEFAULT | DEFAULT | DEFAULT\"\r\n                key=\"DEFAULT\"\r\n              >\r\n                Silahkan Pilih\r\n              </option>\r\n              {this.state.kodeBarang === [] ? (\r\n                <option>TIDAK ADA DATA</option>\r\n              ) : (\r\n                this.state.kodeBarang.map((kode) => (\r\n                  <option\r\n                    value={\r\n                      kode.kodeJenis +\r\n                      \"|\" +\r\n                      kode.namaJenis +\r\n                      \"|\" +\r\n                      kode.kadarCetak +\r\n                      \"|\" +\r\n                      kode.kadarBeli\r\n                    }\r\n                  >\r\n                    {kode.namaJenis}\r\n                  </option>\r\n                ))\r\n              )}\r\n            </Field>\r\n          </div>\r\n          <div\r\n            className=\"col-md-8 form-group\"\r\n            style={\r\n              this.props.from === \"terima\" ? null : { visibility: \"hidden\" }\r\n            }\r\n          >\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              type=\"text\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kode Tukar\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"p\"\r\n              label=\"Plastik\"\r\n              type=\"number\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"k\"\r\n              label=\"Kertas\"\r\n              type=\"number\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"pkg\"\r\n              label=\"Bungkus (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Berat (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadarTransaksi\"\r\n              label=\"Harga (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"gross\"\r\n              label=\"Gross (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Murni (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <label htmlFor=\"\">Harga (Rp)</label>\r\n            <Field\r\n              name=\"harga\"\r\n              component=\"input\"\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n              onChange={this.setHargaLM()}\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <label htmlFor=\"\">Total Harga (Rp)</label>\r\n            <Field\r\n              name=\"totalHargaLM\"\r\n              component=\"input\"\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 form-group mt-3\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\"\r\n                disabled={this.props.submitting}\r\n              >\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormModalTransaksiLM = reduxForm({\r\n  form: \"TerimaSupplier\",\r\n  validate: validationTerimaSupplier,\r\n  enableReinitialize: true,\r\n})(FormModalTransaksiLM);\r\nconst selector = formValueSelector(\"TerimaSupplier\"); // <-- same as form name\r\n\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi, pkg, harga } = selector(\r\n    state,\r\n    \"bruto\",\r\n    \"kadarTransaksi\",\r\n    \"pkg\",\r\n    \"harga\"\r\n  );\r\n  return {\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n    gross: parseFloat(bruto) + parseFloat(pkg),\r\n    totalHargaLM: parseFloat(harga),\r\n  };\r\n})(FormModalTransaksiLM);\r\n"],"sourceRoot":""}