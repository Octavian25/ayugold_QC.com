{"version":3,"sources":["Transaksi/Component/FormTranskasiPenjualanEdit.jsx"],"names":["currencyMask","createNumberMask","prefix","suffix","locale","FormTransaksiPenjualanEdit","props","state","kodeBarang","non_aksesoris","aksesoris","this","dispatch","getListBarang","change","netto","noFaktur","gross","discGlobalGr","toFixed","data","param","hasil","KodeBarangList","filter","kode_jenis","customer","localStorage","getItem","AxiosMasterGet","lokasi","sales","then","res","total_netto","warning","undefined","kode_tukar_normal","kode_kelompok","setState","kodeJenis","namaJenis","nama_jenis","kadarCetak","kadarJual","kodeKategori","kode_kategori","namaKategori","nama_kategori","harga_jual","harga_aksesoris","setKadar","setFocus","onSubmit","handleSubmit","className","name","label","type","readOnly","component","renderField","defaultValue","normalize","value","toUpperCase","String","renderFieldSelect","disabled","onChange","pilihBarang","options","map","kode","width","height","placeholder","onBlur","onclick1","htmlFor","onSend","aria-hidden","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","bruto","kadarTransaksi","pkg","discGlobalPr","parseFloat","provinsi"],"mappings":"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","file":"static/js/159.1c0fcedf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getListBarang } from \"../../actions/kodeBarangAction\";\r\nimport {\r\n  setFocus,\r\n} from \"../../helper\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { warning } from \"../../Alert\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\n\r\nclass FormTransaksiPenjualanEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      non_aksesoris: \"col-lg-12 row\",\r\n      aksesoris: \"col-lg-12 row d-none\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListBarang());\r\n    // getTimbangan(this.props.change);\r\n  }\r\n\r\n  onclick1() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n    this.props.change(\"gross\", this.props.gross);\r\n    this.props.change(\"discGlobalGr\", this.props.discGlobalGr);\r\n    this.props.change(\r\n      \"nettoDiscGlobalExt\",\r\n      (this.props.netto - this.props.discGlobalGr).toFixed(3)\r\n    );\r\n  }\r\n\r\n  pilihBarang(data) {\r\n    let param = data;\r\n    let hasil = this.props.KodeBarangList.filter(\r\n      (data) => data.kode_jenis === param\r\n    );\r\n    let customer = localStorage.getItem(\"customer_1\") || \"-\";\r\n    AxiosMasterGet(\r\n      `/kelompok-harga/get/by-jenis-and-customer/${customer}&${data}&${\r\n        this.props.lokasi === \"SALES\" ? this.props.sales : this.props.lokasi\r\n      }`\r\n    ).then((res) => {\r\n      if (res.data?.total_netto < 1) {\r\n        warning(\"Stock Barang Kurang Dari 1\");\r\n        this.props.change(\"kodeBarang\");\r\n        return false;\r\n      }\r\n      if (\r\n        res.data?.kode_tukar_normal === undefined ||\r\n        res.data?.kode_tukar_normal === \"undefined\"\r\n      ) {\r\n        warning(\r\n          \"Kode Tukar Belum Ditentukan ,Mohon tentukan Kode Tukar di menu kelompok harga\"\r\n        );\r\n        this.props.change(\"kodeBarang\");\r\n        return false;\r\n      }\r\n      if (res.data?.kode_kelompok === \"AKSESORIS\") {\r\n        this.setState({\r\n          non_aksesoris: \"col-lg-12 row d-none\",\r\n          aksesoris: \"col-lg-12 row\",\r\n        });\r\n      } else {\r\n        this.setState({\r\n          non_aksesoris: \"col-lg-12 row\",\r\n          aksesoris: \"col-lg-12 row d-none\",\r\n        });\r\n      }\r\n      this.setState({\r\n        kodeJenis: hasil[0].kode_jenis,\r\n        namaJenis: hasil[0].nama_jenis,\r\n        kadarCetak: res.data?.kode_tukar_normal,\r\n        kadarJual: res.data?.kode_tukar_normal,\r\n        kodeKategori: res.data?.kode_kategori,\r\n        namaKategori: res.data?.nama_kategori,\r\n        harga_jual: res.data?.harga_aksesoris || 0,\r\n      });\r\n      this.setKadar();\r\n      setFocus(\"P\");\r\n    });\r\n  }\r\n\r\n  setKadar() {\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarJual);\r\n    this.props.change(\"kodeKategori\", this.state.kodeKategori);\r\n    this.props.change(\"namaKategori\", this.state.namaKategori);\r\n    this.props.change(\"harga_jual\", this.state.harga_jual);\r\n  }\r\n\r\n  setBruto() {\r\n    this.props.change(\"bruto\", localStorage.getItem(\"Timbangan\"));\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-lg-12 d-none\">\r\n            <Field\r\n              name=\"noFaktur\"\r\n              label={this.props.noFaktur}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              component={renderField}\r\n              defaultValue={this.props.noFaktur}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            {String(this.props.KodeBarangList) !== \"\" ? (\r\n              <Field\r\n                name=\"kodeBarang\"\r\n                label=\"Kode Model\"\r\n                component={renderFieldSelect}\r\n                disabled\r\n                className=\"form-control\"\r\n                onChange={(data) => this.pilihBarang(data)}\r\n                options={this.props.KodeBarangList.filter(\r\n                  (data) =>\r\n                    data.kode_kelompok === \"PERHIASAN\" ||\r\n                    data.kode_kelompok === \"AKSESORIS\"\r\n                ).map((kode) => {\r\n                  let data = {\r\n                    value: kode.kode_jenis,\r\n                    name: kode.nama_jenis,\r\n                  };\r\n                  return data;\r\n                })}\r\n              />\r\n            ) : (\r\n              <Skeleton width={\"100%\"} height={50} />\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4 d-none\">\r\n            <Field\r\n              name=\"kode_barocde\"\r\n              label=\"Kode Barcode\"\r\n              type=\"text\"\r\n              component={renderField}\r\n              placeholder=\"Biarkan Kosong jika Tidak Digunakan\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div\r\n            className={\r\n              this.state.aksesoris !== \"col-lg-12 row\"\r\n                ? \"col-md-3 col-lg-3 d-none\"\r\n                : \"col-md-3 col-lg-3 d-none\"\r\n            }\r\n          >\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kode Tukar\"\r\n              type=\"number\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3 d-none\">\r\n            <Field\r\n              name=\"kodeKategori\"\r\n              label=\"Kode Tukar\"\r\n              type=\"number\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3 d-none\">\r\n            <Field\r\n              name=\"kode_kategori\"\r\n              label=\"Kode Kategori\"\r\n              type=\"text\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className={this.state.non_aksesoris}>\r\n            <div className=\"col-md-12 col-lg-12 d-none\">\r\n              <Field\r\n                name=\"keterangan\"\r\n                label=\"Keterangan\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                normalize={(data) => data?.toUpperCase()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3 d-none\">\r\n              <Field\r\n                name=\"namaKategori\"\r\n                label=\"Kode Tukar\"\r\n                type=\"number\"\r\n                component={renderField}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field name=\"p\" label=\"P\" type=\"number\" component={renderField} />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field name=\"k\" label=\"K\" type=\"number\" component={renderField} />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"pkg\"\r\n                label=\"Pkg (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                onBlur={() => this.onclick1()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"bruto\"\r\n                label=\"Berat (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                onChange={this.onclick1()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"kadarTransaksi\"\r\n                label=\"Kode Tukar\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                onBlur={() => this.onclick1()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"netto\"\r\n                label=\"Netto (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"gross\"\r\n                label=\"Gross (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"discGlobalPr\"\r\n                label=\"Diskon (%)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                onBlur={() => this.onclick1()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"discGlobalGr\"\r\n                label=\"Diskon (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <Field\r\n                name=\"nettoDiscGlobalExt\"\r\n                label=\"Netto - Diskon (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 col-lg-3\">\r\n              <label htmlFor=\"\">Ongkos (Rp)</label>\r\n              <Field\r\n                name=\"rp\"\r\n                component=\"input\"\r\n                type=\"tel\"\r\n                className=\"form-control\"\r\n                {...currencyMask}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={this.state.aksesoris}>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"qty\"\r\n                label=\"Qty\"\r\n                type=\"number\"\r\n                component={renderField}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"harga_jual\"\r\n                label=\"Harga Jual\"\r\n                type=\"telp\"\r\n                component={renderField}\r\n                {...currencyMask}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                type=\"submit\"\r\n                disabled={this.props.onSend}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                {this.props.onSend ? (\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm mr-3\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                ) : null}\r\n                Simpan\r\n                <i className=\"fa fa-paper-plane ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormTransaksiPenjualanEdit = reduxForm({\r\n  form: \"FormTransaksiPenjualanEdit\",\r\n  enableReinitialize: true,\r\n})(FormTransaksiPenjualanEdit);\r\nconst selector = formValueSelector(\"FormTransaksiPenjualanEdit\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi, pkg, discGlobalPr } = selector(\r\n    state,\r\n    \"bruto\",\r\n    \"kadarTransaksi\",\r\n    \"pkg\",\r\n    \"discGlobalPr\"\r\n  );\r\n  return {\r\n    netto: (\r\n      parseFloat(bruto || 0) *\r\n      (parseFloat(kadarTransaksi || 0) / 100)\r\n    ).toFixed(3),\r\n    gross: parseFloat(bruto || 0) + parseFloat(pkg || 0),\r\n    discGlobalGr: (\r\n      parseFloat(bruto || 0) *\r\n      (parseFloat(discGlobalPr || 0) / 100)\r\n    ).toFixed(3),\r\n    KodeBarangList: state.provinsi.kodeBarang,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n})(FormTransaksiPenjualanEdit);\r\n"],"sourceRoot":""}