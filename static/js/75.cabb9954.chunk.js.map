{"version":3,"sources":["Validations/validationKategori.js","DataMaster/Component/FormKategori.jsx","DataMaster/Component/FormKategoriEdit.jsx","DataMaster/Kategori.jsx"],"names":["validationKategori","value","errors","kodeKategori","FormKategori","props","state","listKelompok","AxiosMasterGet","then","res","setState","data","onSubmit","this","handleSubmit","className","String","Field","component","renderFieldSelect","label","name","normalize","toUpperCase","options","map","obj","kode_group","type","renderField","limit","disabled","onSend","aria-hidden","Component","reduxForm","form","validate","enableReinitialize","FormKategoriEdit","readOnly","submitting","connect","initialValues","provinsi","editKategori","kodeGroup","keterangan","SearchBar","Search","ExportCSVButton","CSVExport","Kategori","columns","dataField","text","csvExport","formatter","rowContent","row","data-tut","onClick","dispatch","kode","kode_kategori","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","AxiosMasterDelete","berhasil","getkategoriList","catch","err","gagal","editkategoriList","nama_kategori","editModal","hasil","progressSend","AxiosMasterPost","finishSend","hideModal","reset","handleReactive","AxiosMasterPut","response","includes","reactive","showModal","isEdit","style","color","to","TourGuide","tourConfig","HeaderCard","ModalMasterData","content","handleEdit","id","tambahModal","kategoriList","keyField","search","searchProps","placeholder","margin","top","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","csvProps","error","src","notrespond","width","alt","height","kategori","alert"],"mappings":"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","file":"static/js/75.cabb9954.chunk.js","sourcesContent":["const validationKategori = (value) => {\r\n    const errors = {}\r\n    if (!value.kodeKategori) {\r\n        errors.kodeKategori = \"Tidak Boleh kosong\"\r\n    }\r\n    return errors\r\n}\r\n\r\nexport default validationKategori;","import React, { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport validationKategori from \"../../Validations/validationKategori\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { SkeletonLoading } from \"../../GlobalComponent/function\";\r\n\r\nclass FormKategori extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listKelompok: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"group/get/all\").then((res) =>\r\n      this.setState({\r\n        listKelompok: res.data,\r\n      })\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            {String(this.state.listKelompok) !== \"\" ? (\r\n              <Field\r\n                component={renderFieldSelect}\r\n                label=\"Kode Kategori\"\r\n                name=\"kodeGroup\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                className=\"form-control\"\r\n                options={this.state.listKelompok.map((obj) => {\r\n                  var payload = {\r\n                    value: obj.kode_group,\r\n                    name: obj.kode_group,\r\n                  };\r\n                  return payload;\r\n                })}\r\n              ></Field>\r\n            ) : (\r\n              <SkeletonLoading label=\"Kode Kategori\" />\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              name=\"kodeKategori\"\r\n              type=\"text\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              component={renderField}\r\n              label=\"Kode Jenis\"\r\n              limit={10}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-md-4 col-lg-4 d-none\">\r\n            <Field\r\n              name=\"kodeIntern\"\r\n              type=\"text\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              component={renderField}\r\n              label=\"Kode Intern\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              type=\"text\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              component={renderField}\r\n              label=\"Nama Jenis\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                disabled={this.props.onSend}\r\n                type=\"submit\"\r\n              >\r\n                {this.props.onSend ? (\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm mr-3\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                ) : null}\r\n                Selesai\r\n                <i className=\"fa fa-paper-plane ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormKategori = reduxForm({\r\n  form: \"Kategori\",\r\n  validate: validationKategori,\r\n  enableReinitialize: true,\r\n})(FormKategori);\r\nexport default FormKategori;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport validationKategori from \"../../Validations/validationKategori\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { SkeletonLoading } from \"../../GlobalComponent/function\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    initialValues: {\r\n      kodeKategori: state.provinsi.editKategori.kodeKategori,\r\n      kodeGroup: state.provinsi.editKategori.kodeGroup,\r\n      keterangan: state.provinsi.editKategori.keterangan,\r\n    },\r\n  };\r\n};\r\n\r\nclass FormKategoriEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listKelompok: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"group/get/all\").then((res) =>\r\n      this.setState({\r\n        listKelompok: res.data,\r\n      })\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            {String(this.state.listKelompok) !== \"\" ? (\r\n              <Field\r\n                component={renderFieldSelect}\r\n                label=\"Kode Kategori\"\r\n                name=\"kodeGroup\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                className=\"form-control\"\r\n                options={this.state.listKelompok.map((obj) => {\r\n                  var payload = {\r\n                    value: obj.kode_group,\r\n                    name: obj.kode_group,\r\n                  };\r\n                  return payload;\r\n                })}\r\n              ></Field>\r\n            ) : (\r\n              <SkeletonLoading label=\"Kode Kategori\" />\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              name=\"kodeKategori\"\r\n              type=\"text\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              component={renderField}\r\n              label=\"Kode Jenis\"\r\n              readOnly={true}\r\n              limit={10}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-md-4 col-lg-4 d-none\">\r\n            <Field\r\n              name=\"kodeIntern\"\r\n              type=\"text\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              component={renderField}\r\n              label=\"Kode Intern\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              type=\"text\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              component={renderField}\r\n              label=\"Nama Jenis\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                disabled={this.props.submitting}\r\n                type=\"submit\"\r\n              >\r\n                {this.props.onSend ? (\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm mr-3\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                ) : null}\r\n                Selesai\r\n                <i className=\"fa fa-paper-plane ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormKategoriEdit = reduxForm({\r\n  form: \"KategoriEdit\",\r\n  validate: validationKategori,\r\n  enableReinitialize: true,\r\n})(FormKategoriEdit);\r\nexport default connect(maptoState, null)(FormKategoriEdit);\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { connect } from \"react-redux\";\r\nimport { editkategoriList, getkategoriList } from \"../actions/kategoriAction\";\r\nimport notrespond from \"../Images/500.svg\";\r\nimport Swal from \"sweetalert2\";\r\nimport FormKategori from \"./Component/FormKategori\";\r\nimport FormKategoriEdit from \"./Component/FormKategoriEdit\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { reset } from \"redux-form\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { AxiosMasterDelete, AxiosMasterPost, AxiosMasterPut } from \"../Axios\";\r\nimport { berhasil, gagal, reactive } from \"../Alert\";\r\nimport { hideModal, showModal } from \"../actions/ModalAction\";\r\nimport ModalMasterData from \"./Component/ModalMasterData\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport TourGuide from \"../TourGuide\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      AxiosMasterDelete(\"kategori/delete/\" + kode)\r\n        .then((res) =>\r\n          berhasil(\"Data Berhasil Dihapus!\").then(() =>\r\n            dispatch(getkategoriList())\r\n          )\r\n        )\r\n        .catch((err) => gagal(\"Data Gagal Dihapus!\"));\r\n    }\r\n  });\r\n}\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    kategoriList: state.provinsi.kategori,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\n\r\nclass Kategori extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          dataField: \"kode_group\",\r\n          text: \"Kode Kategori\",\r\n        },\r\n        {\r\n          dataField: \"kode_kategori\",\r\n          text: \"Kode Jenis\",\r\n        },\r\n\r\n        {\r\n          dataField: \"nama_kategori\",\r\n          text: \"Nama Jenis\",\r\n        },\r\n        {\r\n          dataField: \"link\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  data-tut=\"reactour_3\"\r\n                  onClick={() => hapus(this.props.dispatch, row.kode_kategori)}\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning mr-2\"\r\n                  onClick={() =>\r\n                    this.props.dispatch(\r\n                      editkategoriList(\r\n                        row.kode_kategori,\r\n                        row.nama_kategori,\r\n                        row.kode_group,\r\n                        this.editModal()\r\n                      )\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                  Edit\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getkategoriList());\r\n  }\r\n\r\n  handleSubmit(hasil) {\r\n    let data = {\r\n      kode_kategori: hasil.kodeKategori,\r\n      nama_kategori: hasil.keterangan,\r\n      kode_group: hasil.kodeGroup,\r\n    };\r\n\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPost(\"kategori/add\", data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Ditambah!\")\r\n          .then(() => this.props.dispatch(getkategoriList()))\r\n          .then(() => this.props.dispatch(reset(\"Kategori\")))\r\n      )\r\n      .catch((err) =>\r\n        this.handleReactive(\r\n          err,\r\n          hasil.kodeKategori,\r\n          {\r\n            nama_kategori: hasil.keterangan,\r\n            kode_group: hasil.kodeGroup,\r\n          },\r\n          this.props.dispatch(finishSend())\r\n        )\r\n      );\r\n  }\r\n  handleEdit(hasil) {\r\n    let data = {\r\n      nama_kategori: hasil.keterangan,\r\n      kode_group: hasil.kodeGroup,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPut(\r\n      \"kategori/update/by-kode-kategori/\" + hasil.kodeKategori,\r\n      data\r\n    )\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Diubah!\").then(() =>\r\n          this.props.dispatch(getkategoriList())\r\n        )\r\n      )\r\n      .catch((err) =>\r\n        gagal(err?.response.data)\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => this.props.dispatch(hideModal()))\r\n      );\r\n  }\r\n  handleReactive(err, kode, data) {\r\n    this.props.dispatch(hideModal());\r\n    let error = err.response.data;\r\n    let check = error.includes(\"hapus\");\r\n    check\r\n      ? reactive(\r\n          err,\r\n          kode,\r\n          \"kategori/reactive/\",\r\n          data,\r\n          \"kategori/update/by-kode-kategori/\"\r\n        ).then(() => this.props.dispatch(getkategoriList()))\r\n      : gagal(\"Data Gagal Ditambahkan\");\r\n  }\r\n  tambahModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({ isEdit: false });\r\n  }\r\n  editModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({ isEdit: true });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <ol className=\"breadcrumb mb-2\">\r\n          <Link to=\"/KlasifikasiBarang\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-tut=\"reactour_4\"\r\n            >\r\n              <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i> Back\r\n            </button>\r\n          </Link>\r\n        </ol>\r\n        <TourGuide\r\n          tourConfig={[\r\n            `Untuk Menambahkan Data Kategori, Tekan Tombol ini Dan Isi kolom yang disediakan`,\r\n            `Ini adalah Data Kategori yang sudah tersimpan`,\r\n            `Ini adalah tombol untuk menghapus data pada baris yang dipilih`,\r\n            `Ini adalah tombol navigasi untuk kembali`,\r\n          ]}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Jenis\" />\r\n              <div className=\"card-body\">\r\n                <ModalMasterData\r\n                  content={\r\n                    this.state.isEdit ? (\r\n                      <FormKategoriEdit\r\n                        onSubmit={(data) => this.handleEdit(data)}\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    ) : (\r\n                      <FormKategori\r\n                        onSubmit={(data) => this.handleSubmit(data)}\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    )\r\n                  }\r\n                  title={\r\n                    this.state.isEdit ? \"Edit Data Jenis\" : \"Tambah Data Jenis\"\r\n                  }\r\n                />\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      name=\"simpan\"\r\n                      id=\"simpan\"\r\n                      type=\"button\"\r\n                      className=\"btn btn-info\"\r\n                      onClick={() => this.tambahModal()}\r\n                      data-tut=\"reactour_1\"\r\n                    >\r\n                      Tambah Data\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div data-tut=\"reactour_2\">\r\n                  {this.props.kategoriList ? (\r\n                    <ToolkitProvider\r\n                      keyField=\"kodeKategori\"\r\n                      data={this.props.kategoriList}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"form-group mt-5 mb-3\">\r\n                          <div className=\"text-right\">\r\n                            <SearchBar\r\n                              {...props.searchProps}\r\n                              className=\"form-control\"\r\n                              placeholder=\"Pencarian\"\r\n                              style={{ margin: 0, top: \"50%\" }}\r\n                            />\r\n                          </div>\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            pagination={paginationFactory()}\r\n                          />\r\n                          <ExportCSVButton\r\n                            {...props.csvProps}\r\n                            className=\"btn btn-primary\"\r\n                          >\r\n                            Export CSV\r\n                          </ExportCSVButton>\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  ) : (\r\n                    <div>\r\n                      {this.props.error ? (\r\n                        <div className=\"text-center\">\r\n                          <img\r\n                            src={notrespond}\r\n                            style={{ width: \"30%\" }}\r\n                            alt=\"ERROR GET DATA\"\r\n                          />\r\n                          <br />\r\n                          <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton width={\"100%\"} height={180} />\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(Kategori);\r\n"],"sourceRoot":""}