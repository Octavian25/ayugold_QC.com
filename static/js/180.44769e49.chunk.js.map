{"version":3,"sources":["Validasi/Component/FormEditPindahBarang.jsx","Validasi/editPindahBarang.jsx"],"names":["currencyMask","createNumberMask","prefix","suffix","locale","renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","FormEditPindahBarang","props","state","date","Date","this","change","getFullYear","getMonth","getDate","onSubmit","handleSubmit","Field","name","component","value","key","normalize","toUpperCase","Component","reduxForm","form","enableReinitialize","connect","editPindahBarang","inputChange","e","setState","target","pilihSupplier","result_explode","split","kodeSupplier","namaSupplier","formatedDate","listSupplier","columns","dataField","text","title","content","tanggal_invoice","tanggal_barang","noBon","startingDate","tampungBarang","dispatch","getsupplierList","Axios","get","server","then","res","data","catch","err","alert","getUUID","isi","noFaktur","tanggal","tanggalBarang","barangDetails","nettoDiscGlobalExt","gross","parseFloat","netto","qty","k","rp","kadarCetak","keterangan","discGlobalPr","kodeKategori","kadarTransaksi","kodeJenis","noBarcode","p","discGlobalGr","pkg","bruto","nettoDiscGlobal","console","log","array","push","style","color","to","aria-hidden","id","defaultValue","onChange","map","kode","data-toggle","data-target","tabIndex","role","aria-labelledby","data-dismiss","from","supplierList","provinsi","supplier"],"mappings":"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","file":"static/js/180.44769e49.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nclass FormEditPindahBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    const date = new Date();\r\n    this.props.change(\r\n      \"tanggal\",\r\n      `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <label htmlFor=\"\">Kode Barang</label>\r\n            <Field\r\n              name=\"kodeBarang\"\r\n              component=\"select\"\r\n              value=\"CASH\"\r\n              className=\"form-control\"\r\n            >\r\n              <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                silahkan pilih\r\n              </option>\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kadar\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              name=\"harga\"\r\n              label=\"Harga (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"pkg\"\r\n              label=\"Pkg (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Bruto (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Netto (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <label htmlFor=\"\">Ongkos (Rp)</label>\r\n            <Field\r\n              name=\"rp\"\r\n              component=\"input\"\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormEditPindahBarang = reduxForm({\r\n  form: \"FormEditPindahBarang\",\r\n  enableReinitialize: true,\r\n})(FormEditPindahBarang);\r\nexport default connect()(FormEditPindahBarang);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getsupplierList } from \"../actions/supplierAction\";\r\nimport Axios from \"axios\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormEditPindahBarang from \"./Component/FormEditPindahBarang\";\r\n\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    supplierList: state.provinsi.supplier,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n  };\r\n};\r\n\r\nclass editPindahBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var date = new Date();\r\n    var formatedDate = `${date.getFullYear()}-${\r\n      date.getMonth() + 1\r\n    }-${date.getDate()}`;\r\n    this.state = {\r\n      listSupplier: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kodeBarang\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kadar\",\r\n          text: \"Kadar Cetak (%)\",\r\n        },\r\n        {\r\n          dataField: \"kode\",\r\n          text: \"Kode\",\r\n        },\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"persen\",\r\n          text: \"(%)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Pkg (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"qty\",\r\n          text: \"Qty\",\r\n        },\r\n        {\r\n          dataField: \"ongkosKirim\",\r\n          text: \"Ongkos(RP)\",\r\n        },\r\n      ],\r\n      title: \"PENERIMAAN SUPPLIER\",\r\n      content: \"HELLO\",\r\n      tanggal_invoice: \"\",\r\n      tanggal_barang: \"\",\r\n      noBon: \"\",\r\n      kodeSupplier: \"\",\r\n      namaSupplier: \"\",\r\n      startingDate: formatedDate,\r\n      tampungBarang: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getsupplierList());\r\n    Axios.get(server + \"suppliers\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listSupplier: res.data,\r\n        })\r\n      )\r\n      .catch((err) => alert(err));\r\n    this.props.dispatch(getUUID());\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  pilihSupplier = (input) => (e) => {\r\n    var supp = e.target.value ? e.target.value : \"DEFALT | DEFAULT\";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeSupplier: result_explode[0],\r\n      namaSupplier: result_explode[1],\r\n    });\r\n  };\r\n\r\n  handleSubmit(data) {\r\n    let isi = {\r\n      noFaktur: this.props.noFaktur,\r\n      tanggal: this.state.tanggal_invoice,\r\n      noBon: this.state.noBon,\r\n      kodeSupplier: this.state.kodeSupplier,\r\n      namaSupplier: this.state.namaSupplier,\r\n      tanggalBarang: this.state.tanggal_barang,\r\n      barangDetails: {\r\n        noFaktur: this.props.noFaktur, //\r\n        nettoDiscGlobalExt: 0,\r\n        gross: parseFloat(data.gross), //berat + bungkus\r\n        netto: parseFloat(data.netto), //murni\r\n        qty: 0,\r\n        k: parseFloat(data.k),\r\n        rp: parseFloat(data.rp), //ongkos\r\n        kadarCetak: 0,\r\n        keterangan: data.keterangan,\r\n        discGlobalPr: 0,\r\n        kodeKategori: \"-\",\r\n        kadarTransaksi: parseFloat(data.kadarTransaksi), //harga%\r\n        kodeJenis: data.kodeJenis, //kodebarang\r\n        noBarcode: \"-\",\r\n        p: parseFloat(data.p),\r\n        discGlobalGr: 0,\r\n        pkg: parseFloat(data.pkg),\r\n        bruto: parseFloat(data.bruto), //berat\r\n        nettoDiscGlobal: 0,\r\n      },\r\n    };\r\n    console.log(isi);\r\n    var array = this.state.tampungBarang;\r\n    array.push(isi);\r\n    this.setState({\r\n      tampungBarang: array,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <ol className=\"breadcrumb mb-2\">\r\n              <Link to=\"/editStok\">\r\n                <button type=\"button\" className=\"btn btn-secondary\">\r\n                  <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i>{\" \"}\r\n                  Back\r\n                </button>\r\n              </Link>\r\n            </ol>\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Tanggal</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        id=\"tanggal\"\r\n                        name=\"tanggal\"\r\n                        className=\"form-control\"\r\n                        defaultValue={this.state.startingDate}\r\n                        onChange={this.inputChange(\"tanggal\")}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-4 col-md-4\">\r\n                      <label htmlFor=\"\">Dari</label>\r\n                      <select\r\n                        name=\"supplier\"\r\n                        id=\"kodeSupplier\"\r\n                        className=\"form-control\"\r\n                        onChange={this.pilihSupplier(\"kodeSupplier\")}\r\n                      >\r\n                        <option value=\"DEFAULT | DEFAULT\">\r\n                          SILAHKAN PILIH\r\n                        </option>\r\n                        {this.state.listSupplier.map((kode) => (\r\n                          <option\r\n                            value={kode.kodeSupplier + \"|\" + kode.namaSupplier}\r\n                          >\r\n                            {kode.namaSupplier}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-lg-4 col-md-4\">\r\n                      <label htmlFor=\"\">Ke</label>\r\n                      <select\r\n                        name=\"supplier\"\r\n                        id=\"kodeSupplier\"\r\n                        className=\"form-control\"\r\n                        onChange={this.pilihSupplier(\"kodeSupplier\")}\r\n                      >\r\n                        <option value=\"DEFAULT | DEFAULT\">\r\n                          SILAHKAN PILIH\r\n                        </option>\r\n                        {this.state.listSupplier.map((kode) => (\r\n                          <option\r\n                            value={kode.kodeSupplier + \"|\" + kode.namaSupplier}\r\n                          >\r\n                            {kode.namaSupplier}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    {/* SALDO */}\r\n                    <div className=\"col-md-6 col-lg-4 mt-3\">\r\n                      <label htmlFor=\"\">Limit</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"limit\"\r\n                        name=\"limit\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"limit\")}\r\n                        readOnly={true}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-4 mt-3\">\r\n                      <label htmlFor=\"\">Saldo Barang</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"saldoBarang\"\r\n                        name=\"saldoBarang\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"saldoBarang\")}\r\n                        readOnly={true}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-4 mt-3\">\r\n                      <label htmlFor=\"\">Saldo Limit</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"saldoLimit\"\r\n                        name=\"saldoLimit\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"saldoLimit\")}\r\n                        readOnly={true}\r\n                      />\r\n                    </div>\r\n                    {/* AKHIR SALDO */}\r\n                    <div className=\"col-md-6 col-lg-4 mt-3\">\r\n                      <label htmlFor=\"\">Nomor Pindah</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"noPindah\"\r\n                        name=\"noPindah\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"noPindah\")}\r\n                        readOnly={true}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4 mt-3\">\r\n                      <label htmlFor=\"\">Bon Pindah</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"bonPindah\"\r\n                        name=\"bonPindah\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"bonPindah\")}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-4 col-md-4 mt-3\">\r\n                      <label htmlFor=\"\">Kategori Harga</label>\r\n                      <select\r\n                        name=\"kategoriHarga\"\r\n                        id=\"kategoriHarga\"\r\n                        className=\"form-control\"\r\n                        onChange={this.pilihSupplier(\"kategoriHarga\")}\r\n                      >\r\n                        <option value=\"DEFAULT | DEFAULT\">\r\n                          SILAHKAN PILIH\r\n                        </option>\r\n                        {this.state.listSupplier.map((kode) => (\r\n                          <option\r\n                            value={kode.kodeSupplier + \"|\" + kode.namaSupplier}\r\n                          >\r\n                            {kode.namaSupplier}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-md-12 col-lg-12 mt-3\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6 col-md-6\">\r\n                          <div className=\"text-left\">\r\n                            <Link to=\"/ViewPDF\">\r\n                              <button className=\"btn btn-primary\" type=\"button\">\r\n                                PDF\r\n                              </button>\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-md-6\">\r\n                          <div className=\"text-right\">\r\n                            <button\r\n                              className=\"btn btn-primary\"\r\n                              data-toggle=\"modal\"\r\n                              data-target=\"#primary-header-modal\"\r\n                            >\r\n                              Tambah Data\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              id=\"primary-header-modal\"\r\n              className=\"modal fade\"\r\n              tabIndex=\"-1\"\r\n              role=\"dialog\"\r\n              aria-labelledby=\"primary-header-modalLabel\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header modal-colored-header bg-primary\">\r\n                    <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                      Tambah Data Terima Supplier\r\n                    </h4>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"close\"\r\n                      data-dismiss=\"modal\"\r\n                      aria-hidden=\"true\"\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    <FormEditPindahBarang\r\n                      from=\"terima\"\r\n                      onSubmit={(data) => this.handleSubmit(data)}\r\n                      noFaktur={this.props.noFaktur}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(editPindahBarang);\r\n"],"sourceRoot":""}